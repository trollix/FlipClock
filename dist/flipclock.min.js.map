{"version":3,"file":"flipclock.min.js","sources":["../src/js/Helpers/Functions.js","../src/js/Components/Component.js","../src/js/Helpers/Digitize.js","../src/js/Helpers/Value.js","../src/js/Components/FaceValue.js","../src/js/Helpers/Validate.js","../src/js/Config/ConsoleMessages.js","../src/js/Components/Face.js","../src/js/Languages/ar-ar.js","../src/js/Languages/ca-es.js","../src/js/Languages/cs-cz.js","../src/js/Languages/da-dk.js","../src/js/Languages/de-de.js","../src/js/Languages/en-us.js","../src/js/Languages/es-es.js","../src/js/Languages/fa-ir.js","../src/js/Languages/fi-fi.js","../src/js/Languages/fr-ca.js","../src/js/Languages/he-il.js","../src/js/Languages/hu-hu.js","../src/js/Languages/it-it.js","../src/js/Languages/ja-jp.js","../src/js/Languages/ko-kr.js","../src/js/Languages/lv-lv.js","../src/js/Languages/nl-be.js","../src/js/Languages/no-nb.js","../src/js/Languages/pl-pl.js","../src/js/Languages/pt-br.js","../src/js/Languages/ro-ro.js","../src/js/Languages/ru-ru.js","../src/js/Languages/sk-sk.js","../src/js/Languages/sv-se.js","../src/js/Languages/th-th.js","../src/js/Languages/tr-tr.js","../src/js/Languages/ua-ua.js","../src/js/Languages/vn-vn.js","../src/js/Languages/zh-cn.js","../src/js/Languages/zh-tw.js","../src/js/Helpers/Language.js","../src/js/Helpers/Translate.js","../src/js/Helpers/Template.js","../src/js/Components/DomComponent.js","../src/js/Components/Divider.js","../src/js/Components/ListItem.js","../src/js/Components/List.js","../src/js/Components/Group.js","../src/js/Components/Label.js","../src/js/Components/Timer.js","../src/js/Faces/Counter.js","../src/js/Faces/MinuteCounter.js","../src/js/Faces/HourCounter.js","../src/js/Faces/DayCounter.js","../src/js/Faces/TwentyFourHourClock.js","../src/js/Faces/TwelveHourClock.js","../src/js/Faces/WeekCounter.js","../src/js/Faces/YearCounter.js","../src/js/Themes/Original/Divider.js","../src/js/Themes/Original/FlipClock.js","../src/js/Themes/Original/Group.js","../src/js/Themes/Original/Label.js","../src/js/Themes/Original/List.js","../src/js/Themes/Original/ListItem.js","../src/js/Themes/Original/Faces/DayCounter.js","../src/js/Themes/Original/Faces/HourCounter.js","../src/js/Themes/Original/Faces/MinuteCounter.js","../src/js/Themes/Original/Faces/TwentyFourHourClock.js","../src/js/Themes/Original/Faces/TwelveHourClock.js","../src/js/Themes/Original/Faces/WeekCounter.js","../src/js/Themes/Original/Faces/YearCounter.js","../src/js/Themes/Original/index.js","../src/js/Config/DefaultValues.js","../src/js/Components/FlipClock.js"],"sourcesContent":["/**\n * These are a collection of helper functions, some borrowed from Lodash,\n * Underscore, etc, to provide common functionality without the need for using\n * a dependency. All of this is an attempt to reduce the file size of the\n * library.\n *\n * @namespace Helpers.Functions\n */\n\n/**\n * Throw a string as an Error exception.\n *\n * @function error\n * @param  {string} string - The error message.\n * @return {void}\n * @memberof Helpers.Functions\n */\nexport function error(string) {\n    throw Error(string);\n}\n\n/**\n * Check if `fn` is a function, and call it with `this` context and pass the\n * arguments.\n *\n * @function callback\n * @param  {string} string - The callback fn.\n * @param  {...*} args - The arguments to pass.\n * @return {void}\n * @memberof Helpers.Functions\n */\nexport function callback(fn, ...args) {\n    if(isFunction(fn)) {\n        return fn.call(this, ...args);\n    }\n}\n\n/**\n * Round the value to the correct value. Takes into account negative numbers.\n *\n * @function round\n * @param  {value} string - The value to round.\n * @return {string} - The rounded value.\n * @memberof Helpers.Functions\n */\nexport function round(value) {\n    return isNegativeZero(\n        value = isNegative(value) ? Math.ceil(value) : Math.floor(value)\n    ) ? ('-' + value).toString() : value;\n}\n\n/**\n * Returns `true` if `undefined or `null`.\n *\n * @function noop\n * @param  {value} string - The value to check.\n * @return {boolean} - `true` if `undefined or `null`.\n * @memberof Helpers.Functions\n */\nexport function noop(value) {\n    return !isUndefined(value) && !isNull(value);\n}\n\n/**\n * Returns a function that executes the `before` attribute and passes that value\n * to `after` and the subsequent value is returned.\n *\n * @function chain\n * @param  {function} before - The first function to execute.\n * @param  {function} after - The subsequent function to execute.\n * @return {function} - A function that executes the chain.\n * @memberof Helpers.Functions\n */\nexport function chain(before, after) {\n    return () => after(before());\n}\n\n/**\n * Returns a function that returns maps the values before concatenating them.\n *\n * @function concatMap\n * @param  {function} fn - The map callback function.\n * @return {function} - A function that executes the map and concatenation.\n * @memberof Helpers.Functions\n */\nexport function concatMap(fn) {\n    return x => {\n        return x.map(fn).reduce((x, y) => x.concat(y), []);\n    };\n}\n\n/**\n * Flatten an array.\n *\n * @function flatten\n * @param  {array} value - The array to flatten.\n * @return {array} - The flattened array.\n * @memberof Helpers.Functions\n */\nexport function flatten(value) {\n    return concatMap(value => value)(value);\n}\n\n/**\n * Deep flatten an array.\n *\n * @function deepFlatten\n * @param  {array} value - The array to flatten.\n * @return {array} - The flattened array.\n * @memberof Helpers.Functions\n */\nexport function deepFlatten(x) {\n    return concatMap(x => Array.isArray(x) ? deepFlatten (x) : x)(x);\n}\n\n/**\n * Capitalize the first letter in a string.\n *\n * @function ucfirst\n * @param  {string} string - The string to capitalize.\n * @return {string} - The capitalized string.\n * @memberof Helpers.Functions\n */\nexport function ucfirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Returns the length of a deep flatten array.\n *\n * @function length\n * @param  {array} value - The array to count.\n * @return {number} - The length of the deep flattened array.\n * @memberof Helpers.Functions\n */\nexport function length(value) {\n    return deepFlatten(value).length;\n}\n\n/**\n * Determines if a value is a negative zero.\n *\n * @function isNegativeZero\n * @param  {number} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a negative zero (`-0`).\n * @memberof Helpers.Functions\n */\nexport function isNegativeZero(value) {\n    return 1 / Math.round(value) === -Infinity;\n}\n\n/**\n * Determines if a value is a negative.\n *\n * @function isNegative\n * @param  {number} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a negative.\n * @memberof Helpers.Functions\n */\nexport function isNegative(value) {\n    return isNegativeZero(value) || value < 0;\n}\n\n/**\n * Determines if a value is `null`.\n *\n * @function isNull\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a `null`.\n * @memberof Helpers.Functions\n */\nexport function isNull(value) {\n    return value === null;// || typeof value === 'null';\n}\n\n/**\n * Determines if a value is `undefined`.\n *\n * @function isNull\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a `undefined`.\n * @memberof Helpers.Functions\n */\nexport function isUndefined(value) {\n    return typeof value === 'undefined';\n}\n\n/**\n * Determines if a value is a constructor.\n *\n * @function isConstructor\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a constructor.\n * @memberof Helpers.Functions\n */\nexport function isConstructor(value) {\n    return (value instanceof Function) && !!value.name;\n}\n\n/**\n * Determines if a value is a string.\n *\n * @function isString\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a string.\n * @memberof Helpers.Functions\n */\nexport function isString(value) {\n    return typeof value === 'string';\n}\n\n/**\n * Determines if a value is a array.\n *\n * @function isString\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a string.\n * @memberof Helpers.Functions\n */\nexport function isArray(value) {\n    return value instanceof Array;\n}\n\n/**\n * Determines if a value is an object.\n *\n * @function isObject\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is an object.\n * @memberof Helpers.Functions\n */\nexport function isObject(value) {\n    const type = typeof value;\n    return value != null && !isArray(value) && (\n        type == 'object' || type == 'function'\n    );\n}\n\n/**\n * Determines if a value is a function.\n *\n * @function isObject\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a function.\n * @memberof Helpers.Functions\n */\nexport function isFunction(value) {\n    return value instanceof Function;\n}\n\n/**\n * Determines if a value is a number.\n *\n * @function isObject\n * @param  {*} value - The value to check.\n * @return {boolean} - Returns `true` if the value is a number.\n * @memberof Helpers.Functions\n */\nexport function isNumber(value) {\n    return !isNaN(value);\n}\n\n/**\n * Converts a string into kebab case.\n *\n * @function kebabCase\n * @param  {string} string - The string to convert.\n * @return {string} - The converted string.\n * @memberof Helpers.Functions\n */\nexport function kebabCase(string) {\n    return string.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\\s+/g, '-').toLowerCase();\n}\n","import { chain, error, callback, isObject, kebabCase } from '../Helpers/Functions';\n\nexport default class Component {\n\n    /**\n     * Abstract base class.\n     *\n     * @class Component\n     * @param {(object|undefined)} [attributes] - The instance attributes.\n     */\n    constructor(attributes) {\n        this.setAttribute(Object.assign({\n            events: {}\n        }, attributes));\n    }\n\n    /**\n     * Get the `name` attribute.\n     *\n     * @type {string}\n     */\n    get name() {\n        if(!(this.constructor.defineName instanceof Function)) {\n            error('Every class must define its name.');\n        }\n\n        return this.constructor.defineName();\n    }\n\n    /**\n     * The `events` attribute.\n     *\n     * @type {object}\n     */\n    get events() {\n        return this.$events || {};\n    }\n\n    set events(value) {\n        this.$events = value;\n    }\n\n    /**\n     * Emit an event.\n     *\n     * @param  {string} key - The event id/key.\n     * @return {Component} - Returns `this` instance.\n     */\n    emit(key, ...args) {\n        if(this.events[key]) {\n            this.events[key].forEach(event => {\n                event.apply(this, args);\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Start listening to an event.\n     *\n     * @param  {string} key - The event id/key.\n     * @param  {Function} fn - The listener callback function.\n     * @param  {boolean} [once=false] - Should the event handler be fired a\n     *     single time.\n     * @return {Component} - Returns `this` instance.\n     */\n    on(key, fn, once = false) {\n        if(!this.events[key]) {\n            this.events[key] = [];\n        }\n\n        this.events[key].push(fn);\n\n        return this;\n    }\n\n    /**\n     * Stop listening to an event.\n     *\n     * @param {string} key - The event id/key.\n     * @param {(Function|undefined)} fn - The listener callback function. If no\n     *     function is defined, all events with the specified id/key will be\n     *     removed. Otherwise, only the event listeners matching the id/key AND\n     *     callback will be removed.\n     * @return {Component} - Returns `this` instance.\n     */\n    off(key, fn) {\n        if(this.events[key] && fn) {\n            this.events[key] = this.events[key].filter(event => {\n                return event !== fn;\n            });\n        }\n        else {\n            this.events[key] = [];\n        }\n\n        return this;\n    }\n\n    /**\n     * Listen to an event only one time.\n     *\n     * @param  {string} key - The event id/key.\n     * @param  {Function} fn - The listener callback function.\n     * @return {Component} - Returns `this` instance.\n     */\n    once(key, fn) {\n        fn = chain(fn, () => this.off(key, fn));\n\n        return this.on(key, fn, true);\n    }\n\n    /**\n     * Get an attribute. Returns null if no attribute is defined.\n     *\n     * @param  {string} key - The attribute name.\n     * @return {*} - The attribute value.\n     */\n    getAttribute(key) {\n        return this.hasOwnProperty(key) ? this[key] : null;\n    }\n\n    /**\n     * Get all the atttributes for this instance.\n     *\n     * @return {object} - The attribute dictionary.\n     */\n    getAttributes() {\n        const attributes = {};\n\n        Object.getOwnPropertyNames(this).forEach(key => {\n            attributes[key] = this.getAttribute(key);\n        });\n\n        return attributes;\n    }\n\n    /**\n     * Get only public the atttributes for this instance. Omits any attribute\n     * that starts with `$`, which is used internally.\n     *\n     * @return {object} - The attribute dictionary.\n     */\n    getPublicAttributes() {\n        return Object.keys(this.getAttributes())\n            .filter(key => {\n                return !key.match(/^\\$/);\n            })\n            .reduce((obj, key) => {\n                obj[key] = this.getAttribute(key);\n                return obj;\n            }, {});\n    }\n\n    /**\n     * Set an attribute key and value.\n     *\n     * @param  {string} key - The attribute name.\n     * @param  {*} value - The attribute value.\n     * @return {void}\n     */\n    setAttribute(key, value) {\n        if(isObject(key)) {\n            this.setAttributes(key);\n        }\n        else {\n            this[key] = value;\n        }\n    }\n\n    /**\n     * Set an attributes by object of key/value pairs.\n     *\n     * @param  {object} values - The object dictionary.\n     * @return {void}\n     */\n    setAttributes(values) {\n        for(const i in values) {\n            this.setAttribute(i, values[i]);\n        }\n    }\n\n    /**\n     * Helper method to execute the `callback()` function.\n     *\n     * @param  {Function} fn - The callback function.\n     * @return {*} - Returns the executed callback function.\n     */\n    callback(fn) {\n        return callback.call(this, fn);\n    }\n\n    /**\n     * Factor method to static instantiate new instances. Useful for writing\n     * clean expressive syntax with chained methods.\n     *\n     * @param  {...*} args - The callback arguments.\n     * @return {*} - The new component instance.\n     */\n    static make(...args) {\n        return new this(...args);\n    }\n\n}\n","/**\n * @namespace Helpers.Digitize\n */\nimport { flatten } from './Functions';\nimport { deepFlatten } from './Functions';\n\n/**\n * Digitize a number, string, or an array into a digitized array. This function\n * use by the `Face`, which convert the digitized array into an array of `List`\n * instances.\n *\n * @function digitize\n * @param  {*} value - The value to digitize.\n * @param  {(Object|undefined)} [options] - The digitizer options.\n * @return {array} - The digitized array.\n * @memberof Helpers.Digitize\n */\nexport default function digitize(value, options) {\n    options = Object.assign({\n        minimumDigits: 0,\n        prependLeadingZero: true\n    }, options);\n\n    function prepend(number) {\n        const shouldPrependZero = options.prependLeadingZero &&\n            number.toString().split('').length === 1;\n\n        return (shouldPrependZero ? '0' : '').concat(number);\n    }\n\n    function digits(arr, min) {\n        const length = deepFlatten(arr).length;\n\n        if(length < min) {\n            for(let i = 0; i < min - length; i++) {\n                arr[0].unshift('0');\n            }\n        }\n\n        return arr;\n    }\n\n    return digits(flatten([value]).map(number => {\n        return flatten(deepFlatten([number]).map(number => {\n            return prepend(number).split('');\n        }));\n    }), options.minimumDigits || 0);\n}\n","/**\n * @namespace Helpers.Value\n */\n\n/**\n * An array of objects with min/max ranges.\n *\n * @private\n * @type {array}\n */\nconst RANGES = [{\n    // 0-9\n    min: 48,\n    max: 57\n},{\n    // a-z\n    min: 65,\n    max: 90\n},{\n    // A-Z\n    min: 97,\n    max: 122\n}];\n\n/**\n * Format a string into a new data type. Currently only supports string to\n * number conversion.\n *\n * @private\n * @function format\n * @param {string} string - The string to format.\n * @param {string} type - The data type (represented as a string) used to\n *     convert the string.\n * @return {boolean} - Returns the formatted string.\n */\nfunction format(string, type) {\n    switch(type) {\n        case 'number':\n            return parseFloat(string);\n    }\n\n    return string;\n}\n\n/**\n * Find the range object from the `RANGES` constant from the character given.\n * This is mainly an interval method, but can be used by faces to help\n * determine what the next value of a string should be.\n *\n * @private\n * @function format\n * @param {string} char - The char used to determine the range.\n * @param {string} type - The data type (represented as a string) used to\n *     convert the string.\n * @return {boolean} - Returns the formatted string.\n */\nfunction findRange(char) {\n    for(const i in RANGES) {\n        const code = char.toString().charCodeAt(0);\n\n        if(RANGES[i].min <= code && RANGES[i].max >= code) {\n            return RANGES[i];\n        }\n    }\n\n    return null;\n}\n\n/**\n * Create a string from a character code, which is returned by the callback.\n *\n * @private\n * @callback stringFromCharCodeBy\n * @param {string} char - The char used to determine the range.\n * @param {function} fn - The callback function receives `range` and `code`\n *     arguments. This function should return a character code.\n * @return {string} - Creates a string from the character code returned by the\n *     callback function.\n */\nfunction stringFromCharCodeBy(char, fn) {\n    return String.fromCharCode(\n        fn(findRange(char), char.charCodeAt(0))\n    );\n}\n\n/**\n * Calculate the next value for a string. 'a' becomes 'b'. 'A' becomes 'B'. 1\n * becomes 2, etc. If multiple character strings are passed, 'aa' would become\n * 'bb'.\n *\n * @function next\n * @param  {(string|number)} value - The string or number to convert.\n * @return {string} - The formatted string\n * @memberof Helpers.Value\n */\nexport function next(value) {\n    const converted = (value)\n        .toString()\n        .split('')\n        .map(char => stringFromCharCodeBy(char, (range, code) => {\n            return !range || code < range.max ? code + 1 : range.min;\n        }))\n        .join('');\n\n    return format(converted, typeof value);\n}\n\n/**\n * Calculate the prev value for a string. 'b' becomes 'a'. 'B' becomes 'A'. 2\n * becomes 1, 0 becomes 9, etc. If multiple character strings are passed, 'bb'\n * would become 'aa'.\n *\n * @function prev\n * @param  {(string|number)} value - The string or number to convert.\n * @return {string} - The formatted string\n * @memberof Helpers.Value\n */\nexport function prev(value) {\n    const converted = (value)\n        .toString()\n        .split('')\n        .map(char => stringFromCharCodeBy(char, (range, code) => {\n            return !range || code > range.min ? code - 1 : range.max;\n        }))\n        .join('');\n\n    return format(converted, typeof value);\n}\n","import Component from './Component';\nimport digitize from '../Helpers/Digitize';\nimport { next, prev } from '../Helpers/Value';\nimport { length, isObject, isNumber } from '../Helpers/Functions';\n\nexport default class FaceValue extends Component {\n\n    /**\n     * The `FaceValue` class handles all the digitizing for the `Face`.\n     *\n     * @class FaceValue\n     * @extends Component\n     * @param {*} value - The `FaceValue`'s actual value. Most likely should\n     *     string, number, or Date. But since the Face handles the value, it\n     *     could be anything.\n     * @param {(object|undefined)} [attributes] - The instance attributes.\n     */\n    constructor(value, attributes) {\n        super(Object.assign({\n            format: value => value,\n            prependLeadingZero: true,\n            minimumDigits: 0\n        }, attributes));\n\n        if(!this.value) {\n            this.value = value;\n        }\n    }\n\n    /**\n     * The `digits` attribute.\n     *\n     * @type {(Array|undefined)}\n     */\n    get digits() {\n        return this.$digits;\n    }\n\n    set digits(value) {\n        this.$digits = value;\n        this.minimumDigits = Math.max(this.minimumDigits, length(value));\n    }\n\n    /**\n     * The `value` attribute.\n     *\n     * @type {*}\n     */\n    get value() {\n        return this.$value;\n    }\n\n    set value(value) {\n        this.$value = value;\n        this.digits = digitize(this.format(value), {\n            minimumDigits: this.minimumDigits,\n            prependLeadingZero: this.prependLeadingZero\n        });\n    }\n\n    /**\n     * Returns `true` if the `value` attribute is not a number.\n     *\n     * @return {boolean} - `true` is the value is not a number.\n     */\n    isNaN() {\n        return isNaN(this.value);\n    }\n\n    /**\n     * Returns `true` if the `value` attribute is a number.\n     *\n     * @return {boolean} - `true` is the value is a number.\n     */\n    isNumber() {\n        return isNumber();\n    }\n\n    /**\n     * Clones the current `FaceValue` instance, but sets a new value to the\n     * cloned instance. Used for copying the current instance options and\n     * methods, but setting a new value.\n     *\n     * @param  {*} value - The n\n     * @param {(object|undefined)} [attributes] - The instance attributes.\n     * @return {FaceValue} - The cloned `FaceValue`.\n     */\n    clone(value, attributes) {\n        return new this.constructor(value, Object.assign(\n            this.getPublicAttributes(), attributes\n        ));\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'FaceValue';\n    }\n\n}\n","/**\n * @namespace Helpers.Validate\n */\nimport { isNull } from './Functions';\nimport { flatten } from './Functions';\nimport { isString } from './Functions';\nimport { isObject } from './Functions';\nimport { isFunction } from './Functions';\nimport { isConstructor } from './Functions';\n\n/**\n * Validate the data type of a variable.\n *\n * @function validate\n * @param {*} value - The value to validate.\n * @param {...*} args - The data types to use for validate.\n * @return {boolean} - Returns `true`is the value has a valid data type.\n * @memberof Helpers.Validate\n */\nexport default function validate(value, ...args) {\n    let success = false;\n\n    flatten(args).forEach(arg => {\n        if( (isNull(value) && isNull(arg)) ||\n            (isObject(arg) && (value instanceof arg)) ||\n            (isFunction(arg) && !isConstructor(arg) && arg(value) === true) ||\n            (isString(arg) && (typeof value === arg))) {\n            success = true;\n        }\n    });\n\n    return success;\n}\n","/**\n * @alias ConsoleMessages\n * @type {object}\n * @memberof module:Config/ConsoleMessages\n */\nexport default {\n    className: 'The className() is not defined.',\n    items: 'The items property must be an array.',\n    theme: 'The theme property must be an object.',\n    language: 'The language must be an object.',\n    date: 'The value must be an instance of a Date.',\n    face: 'The face must be an instance of a Face class.',\n    element: 'The element must be an instance of an HTMLElement',\n    faceValue: 'The face must be an instance of a FaceValue class.',\n    timer: 'The timer property must be an instance of a Timer class.'\n};\n","import Component from './Component';\nimport FaceValue from './FaceValue';\nimport validate from '../Helpers/Validate';\nimport ConsoleMessages from '../Config/ConsoleMessages';\nimport { error, isNull, isUndefined, isObject, isArray, isFunction, callback } from '../Helpers/Functions';\n\nexport default class Face extends Component {\n\n    /**\n     * This class is meant to be provide an interface for all other faces to\n     * extend.\n     *\n     * @class Face\n     * @extends Component\n     * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n     *     of FaceValue, this argument is assumed to be the instance attributes.\n     * @param {(object|undefined)} [attributes] - The instance attributes.\n     */\n    constructor(value, attributes) {\n        if(!(value instanceof FaceValue) && isObject(value)) {\n            attributes = value;\n            value = undefined;\n        }\n\n        super();\n\n        this.setAttributes(Object.assign({\n            autoStart: true,\n            countdown: false,\n            animationRate: 500\n        }, this.defaultAttributes(), attributes || {}));\n\n        if(isNull(value) || isUndefined(value)) {\n            value = this.defaultValue();\n        }\n\n        if(value) {\n            this.value = value;\n        }\n    }\n\n    /**\n     * The `dataType` attribute.\n     *\n     * @type {*}\n     */\n    get dataType() {\n        return this.defaultDataType();\n    }\n\n    /**\n     * The `value` attribute.\n     *\n     * @type {*}\n     */\n    get value() {\n        return this.$value;\n    }\n\n    set value(value) {\n        if(!(value instanceof FaceValue)) {\n            value = this.createFaceValue(value);\n        }\n\n        this.$value = value;\n    }\n\n    /**\n     * The `stopAt` attribute.\n     *\n     * @type {*}\n     */\n    get stopAt() {\n        return this.$stopAt;\n    }\n\n    set stopAt(value) {\n        this.$stopAt = value;\n    }\n\n    /**\n     * The `originalValue` attribute.\n     *\n     * @type {*}\n     */\n    get originalValue() {\n        return this.$originalValue;\n    }\n\n    set originalValue(value) {\n        this.$originalValue = value;\n    }\n\n    /**\n     * This method is called with every interval, or every time the clock\n     * should change, and handles the actual incrementing and decrementing the\n     * clock's `FaceValue`.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @param  {Function} fn - The interval callback.\n     * @return {Face} - This `Face` instance.\n     */\n    interval(instance, fn) {\n        if(this.countdown) {\n            this.decrement(instance);\n        }\n        else {\n            this.increment(instance);\n        }\n\n        callback.call(this, fn);\n\n        if(this.shouldStop(instance)) {\n            instance.stop();\n        }\n\n        return this.emit('interval');\n    }\n\n    /**\n     * Determines if the clock should stop or not.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {boolean} - Returns `true` if the clock should stop.\n     */\n    shouldStop(instance) {\n        return !isUndefined(this.stopAt) ? this.stopAt === instance.value.value : false;\n    }\n\n    /**\n     * By default this just returns the value unformatted.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @param  {*} value - The value to format.\n     * @return {*} - The formatted value.\n     */\n    format(instance, value) {\n        return value;\n    }\n\n    /**\n     * The default value for the `Face`.\n     *\n     * @return {*} - The default value.\n     */\n    defaultValue() {\n        //\n    }\n\n    /**\n     * The default attributes for the `Face`.\n     *\n     * @return {(Object|undefined)} - The default attributes.\n     */\n    defaultAttributes() {\n        //\n    }\n\n    /**\n     * The default data type for the `Face` value.\n     *\n     * @return {(Object|undefined)} - The default data type.\n     */\n    defaultDataType() {\n        //\n    }\n\n    /**\n     * Increment the clock.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @param  {Number} [amount] - The amount to increment. If the amount is not\n     *     defined, it is left up to the `Face` to determine the default value.\n     * @return {void}\n     */\n    increment(instance, amount) {\n        //\n    }\n\n    /**\n     * Decrement the clock.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @param  {Number} [amount] - The amount to decrement. If the amount is not\n     *     defined, it is left up to the `Face` to determine the default value.\n     * @return {void}\n     */\n    decrement(instance, amount) {\n        //\n    }\n\n    /**\n     * This method is called right after clock has started.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    started(instance) {\n        //\n    }\n\n    /**\n     * This method is called right after clock has stopped.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    stopped(instance) {\n        //\n    }\n\n    /**\n     * This method is called right after clock has reset.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    reset(instance) {\n        //\n    }\n\n    /**\n     * This method is called right after `Face` has initialized.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    initialized(instance) {\n        //\n    }\n\n    /**\n     * This method is called right after `Face` has rendered.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    rendered(instance) {\n        //\n    }\n\n    /**\n     * This method is called right after `Face` has mounted.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @return {void}\n     */\n    mounted(instance) {\n        if(this.autoStart && instance.timer.isStopped) {\n            window.requestAnimationFrame(() => instance.start(instance));\n        }\n    }\n\n    /**\n     * Helper method to instantiate a new `FaceValue`.\n     *\n     * @param  {FlipClock} instance - The `FlipClock` instance.\n     * @param  {object|undefined} [attributes] - The attributes passed to the\n     *     `FaceValue` instance.\n     * @return {Divider} - The instantiated `FaceValue`.\n     */\n    createFaceValue(instance, value) {\n        return FaceValue.make(\n            isFunction(value) && !value.name ? value() : value, {\n                minimumDigits: this.minimumDigits,\n                format: value => this.format(instance, value)\n            }\n        );\n    }\n\n}\n","/**\n * @classdesc Arabic Language Pack\n * @desc This class will be used to translate tokens into the Arabic language.\n * @namespace Languages.Arabic\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Arabic\n */\nexport const dictionary = {\n    'years'   : 'سنوات',\n    'months'  : 'شهور',\n    'days'    : 'أيام',\n    'hours'   : 'ساعات',\n    'minutes' : 'دقائق',\n    'seconds' : 'ثواني'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Arabic\n */\nexport const aliases = ['ar', 'ar-ar', 'arabic'];\n","/**\n * @classdesc Catalan Language Pack\n * @desc This class will used to translate tokens into the Catalan language.\n * @namespace Languages.Catalan\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Catalan\n */\nexport const dictionary = {\n    'years' : 'Anys',\n    'months' : 'Mesos',\n    'days' : 'Dies',\n    'hours' : 'Hores',\n    'minutes' : 'Minuts',\n    'seconds' : 'Segons'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Catalan\n */\nexport const aliases = ['ca', 'ca-es', 'catalan'];\n","/**\n * @classdesc Czech Language Pack\n * @desc This class will used to translate tokens into the Czech language.\n * @namespace Languages.Czech\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Czech\n */\nexport const dictionary = {\n    'years'   : 'Roky',\n    'months'  : 'Měsíce',\n    'days'    : 'Dny',\n    'hours'   : 'Hodiny',\n    'minutes' : 'Minuty',\n    'seconds' : 'Sekundy'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Czech\n */\nexport const aliases = ['cs', 'cs-cz', 'cz', 'cz-cs', 'czech'];\n","/**\n * @classdesc Danish Language Pack\n * @desc This class will used to translate tokens into the Danish language.\n * @namespace Languages.Danish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Danish\n */\nexport const dictionary = {\n\t'years'   : 'År',\n\t'months'  : 'Måneder',\n\t'days'    : 'Dage',\n\t'hours'   : 'Timer',\n\t'minutes' : 'Minutter',\n\t'seconds' : 'Sekunder'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Danish\n */\nexport const aliases = ['da', 'da-dk', 'danish'];\n","/**\n * @classdesc German Language Pack\n * @desc This class will used to translate tokens into the German language.\n * @namespace Languages.German\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.German\n */\nexport const dictionary = {\n\t'years'   : 'Jahre',\n\t'months'  : 'Monate',\n\t'days'    : 'Tage',\n\t'hours'   : 'Stunden',\n\t'minutes' : 'Minuten',\n\t'seconds' : 'Sekunden'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.German\n */\nexport const aliases = ['de', 'de-de', 'german'];\n","/**\n * @classdesc English Language Pack\n * @desc This class will used to translate tokens into the English language.\n * @namespace Languages.English\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.English\n */\nexport const dictionary = {\n\t'years'   : 'Years',\n\t'months'  : 'Months',\n\t'days'    : 'Days',\n\t'hours'   : 'Hours',\n\t'minutes' : 'Minutes',\n\t'seconds' : 'Seconds'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.English\n */\nexport const aliases = ['en', 'en-us', 'english'];\n","/**\n * @classdesc Spanish Language Pack\n * @desc This class will used to translate tokens into the Spanish language.\n * @namespace Languages.Spanish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Spanish\n */\nexport const dictionary = {\n\t'years'   : 'Años',\n\t'months'  : 'Meses',\n\t'days'    : 'Días',\n\t'hours'   : 'Horas',\n\t'minutes' : 'Minutos',\n\t'seconds' : 'Segundos'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Spanish\n */\nexport const aliases = ['es', 'es-es', 'spanish'];\n","/**\n * @classdesc Persian Language Pack\n * @desc This class will used to translate tokens into the Persian language.\n * @namespace Languages.Persian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Persian\n */\nexport const dictionary = {\n\t'years'   : 'سال',\n\t'months'  : 'ماه',\n\t'days'    : 'روز',\n\t'hours'   : 'ساعت',\n\t'minutes' : 'دقیقه',\n\t'seconds' : 'ثانیه'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Persian\n */\nexport const aliases = ['fa', 'fa-ir', 'persian'];\n","/**\n * @classdesc Finnish Language Pack\n * @desc This class will used to translate tokens into the Finnish language.\n * @namespace Languages.Finnish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Finnish\n */\nexport const dictionary = {\n\t'years'   : 'Vuotta',\n\t'months'  : 'Kuukautta',\n\t'days'    : 'Päivää',\n\t'hours'   : 'Tuntia',\n\t'minutes' : 'Minuuttia',\n\t'seconds' : 'Sekuntia'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Finnish\n */\nexport const aliases = ['fi', 'fi-fi', 'finnish'];\n","/**\n * @classdesc Canadian French Language Pack\n * @desc This class will used to translate tokens into the Canadian French language.\n * @namespace Languages.CanadianFrench\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.CanadianFrench\n */\nexport const dictionary = {\n    'years'   : 'Ans',\n    'months'  : 'Mois',\n    'days'    : 'Jours',\n    'hours'   : 'Heures',\n    'minutes' : 'Minutes',\n    'seconds' : 'Secondes'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.CanadianFrench\n */\nexport const aliases = ['fr', 'fr-ca', 'french'];\n","/**\n * @classdesc Hebrew Language Pack\n * @desc This class will used to translate tokens into the Hebrew language.\n * @namespace Languages.Hebrew\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Hebrew\n */\nexport const dictionary = {\n\t'years'   : 'שנים',\n\t'months'  : 'חודש',\n\t'days'    : 'ימים',\n\t'hours'   : 'שעות',\n\t'minutes' : 'דקות',\n\t'seconds' : 'שניות'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Hebrew\n */\nexport const aliases = ['il', 'he-il', 'hebrew'];\n","/**\n * @classdesc Hungarian Language Pack\n * @desc This class will used to translate tokens into the Hungarian language.\n * @namespace Languages.Hungarian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Hungarian\n */\nexport const dictionary = {\n\t'years'   : 'Év',\n    'months'  : 'Hónap',\n    'days'    : 'Nap',\n    'hours'   : 'Óra',\n    'minutes' : 'Perc',\n    'seconds' : 'Másodperc'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Hungarian\n */\nexport const aliases = ['hu', 'hu-hu', 'hungarian'];\n","/**\n * @classdesc Italian Language Pack\n * @desc This class will used to translate tokens into the Italian language.\n * @namespace Languages.Italian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Italian\n */\nexport const dictionary = {\n\t'years'   : 'Anni',\n\t'months'  : 'Mesi',\n\t'days'    : 'Giorni',\n\t'hours'   : 'Ore',\n\t'minutes' : 'Minuti',\n\t'seconds' : 'Secondi'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Italian\n */\nexport const aliases = ['da', 'da-dk', 'danish'];\n","/**\n * @classdesc Japanese Language Pack\n * @desc This class will used to translate tokens into the Japanese language.\n * @namespace Languages.Japanese\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Japanese\n */\nexport const dictionary = {\n\t'years'   : '年',\n\t'months'  : '月',\n\t'days'    : '日',\n\t'hours'   : '時',\n\t'minutes' : '分',\n\t'seconds' : '秒'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Japanese\n */\nexport const aliases = ['jp', 'ja-jp', 'japanese'];\n","/**\n * @classdesc Korean Language Pack\n * @desc This class will used to translate tokens into the Korean language.\n * @namespace Languages.Korean\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Korean\n */\nexport const dictionary = {\n\t'years'   : '년',\n\t'months'  : '월',\n\t'days'    : '일',\n\t'hours'   : '시',\n\t'minutes' : '분',\n\t'seconds' : '초'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Korean\n */\nexport const aliases = ['ko', 'ko-kr', 'korean'];\n","/**\n * @classdesc Latvian Language Pack\n * @desc This class will used to translate tokens into the Latvian language.\n * @namespace Languages.Latvian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Latvian\n */\nexport const dictionary = {\n    'years'   : 'Gadi',\n    'months'  : 'Mēneši',\n    'days'    : 'Dienas',\n    'hours'   : 'Stundas',\n    'minutes' : 'Minūtes',\n    'seconds' : 'Sekundes'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Latvian\n */\nexport const aliases = ['lv', 'lv-lv', 'latvian'];\n","/**\n * @classdesc Dutch Language Pack\n * @desc This class will used to translate tokens into the Dutch language.\n * @namespace Languages.Dutch\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Dutch\n */\nexport const dictionary = {\n    'years'   : 'Jaren',\n    'months'  : 'Maanden',\n    'days'    : 'Dagen',\n    'hours'   : 'Uren',\n    'minutes' : 'Minuten',\n    'seconds' : 'Seconden'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Dutch\n */\nexport const aliases = ['nl', 'nl-be', 'dutch'];\n","/**\n * @classdesc Norwegian-Bokmål Language Pack\n * @desc This class will used to translate tokens into the Norwegian-Bokmål language.\n * @namespace Languages.Norwegian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Norwegian\n */\nexport const dictionary = {\n\t'years'   : 'År',\n\t'months'  : 'Måneder',\n\t'days'    : 'Dager',\n\t'hours'   : 'Timer',\n\t'minutes' : 'Minutter',\n\t'seconds' : 'Sekunder'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Norwegian\n */\nexport const aliases = ['no', 'nb', 'no-nb', 'norwegian'];\n","/**\n * @classdesc Polish Language Pack\n * @desc This class will used to translate tokens into the Polish language.\n * @namespace Languages.Polish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Polish\n */\nexport const dictionary = {\n\t'years'   : 'Lat',\n\t'months'  : 'Miesięcy',\n\t'days'    : 'Dni',\n\t'hours'   : 'Godziny',\n\t'minutes' : 'Minuty',\n\t'seconds' : 'Sekundy'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Polish\n */\nexport const aliases = ['pl', 'pl-pl', 'polish'];\n","/**\n * @classdesc Portuguese Language Pack\n * @desc This class will used to translate tokens into the Portuguese language.\n * @namespace Languages.Portuguese\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Portuguese\n */\nexport const dictionary = {\n\t'years'   : 'Anos',\n\t'months'  : 'Meses',\n\t'days'    : 'Dias',\n\t'hours'   : 'Horas',\n\t'minutes' : 'Minutos',\n\t'seconds' : 'Segundos'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Portuguese\n */\nexport const aliases = ['pt', 'pt-br', 'portuguese'];\n","/**\n * @classdesc Romanian Language Pack\n * @desc This class will used to translate tokens into the Romanian language.\n * @namespace Languages.Romanian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Romanian\n */\nexport const dictionary = {\n\t'years': 'Ani',\n\t'months': 'Luni',\n\t'days': 'Zile',\n\t'hours': 'Ore',\n\t'minutes': 'Minute',\n\t'seconds': 'sSecunde'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Romanian\n */\nexport const aliases = ['ro', 'ro-ro', 'romana'];\n","/**\n * @classdesc Russian Language Pack\n * @desc This class will used to translate tokens into the Russian language.\n * @namespace Languages.Russian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Russian\n */\nexport const dictionary = {\n    'years'   : 'лет',\n    'months'  : 'месяцев',\n    'days'    : 'дней',\n    'hours'   : 'часов',\n    'minutes' : 'минут',\n    'seconds' : 'секунд'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Russian\n */\nexport const aliases = ['ru', 'ru-ru', 'russian'];\n","/**\n * @classdesc Slovak Language Pack\n * @desc This class will used to translate tokens into the Slovak language.\n * @namespace Languages.Slovak\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Slovak\n */\nexport const dictionary = {\n\t'years'   : 'Roky',\n\t'months'  : 'Mesiace',\n\t'days'    : 'Dni',\n\t'hours'   : 'Hodiny',\n\t'minutes' : 'Minúty',\n\t'seconds' : 'Sekundy'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Slovak\n */\nexport const aliases = ['sk', 'sk-sk', 'slovak'];\n","/**\n * @classdesc Swedish Language Pack\n * @desc This class will used to translate tokens into the Swedish language.\n * @namespace Languages.Swedish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Swedish\n */\nexport const dictionary = {\n\t'years'   : 'År',\n\t'months'  : 'Månader',\n\t'days'    : 'Dagar',\n\t'hours'   : 'Timmar',\n\t'minutes' : 'Minuter',\n\t'seconds' : 'Sekunder'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Swedish\n */\nexport const aliases = ['sv', 'sv-se', 'swedish'];\n","/**\n * @classdesc Thai Language Pack\n * @desc This class will used to translate tokens into the Thai language.\n * @namespace Languages.Thai\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Thai\n */\nexport const dictionary = {\n\t'years'   : 'ปี',\n\t'months'  : 'เดือน',\n\t'days'    : 'วัน',\n\t'hours'   : 'ชั่วโมง',\n\t'minutes' : 'นาที',\n\t'seconds' : 'วินาที'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Thai\n */\nexport const aliases = ['th', 'th-th', 'thai'];\n","/**\n * @classdesc Turkish Language Pack\n * @desc This class will used to translate tokens into the Turkish language.\n * @namespace Languages.Turkish\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Turkish\n */\nexport const dictionary = {\n\t'years'   : 'Yıl',\n\t'months'  : 'Ay',\n\t'days'    : 'Gün',\n\t'hours'   : 'Saat',\n\t'minutes' : 'Dakika',\n\t'seconds' : 'Saniye'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Turkish\n */\nexport const aliases = ['tr', 'tr-tr', 'turkish'];\n","/**\n * @classdesc Ukrainian Language Pack\n * @desc This class will used to translate tokens into the Ukrainian language.\n * @namespace Languages.Ukrainian\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Ukrainian\n */\nexport const dictionary = {\n    'years'   : 'роки',\n    'months'  : 'місяці',\n    'days'    : 'дні',\n    'hours'   : 'години',\n    'minutes' : 'хвилини',\n    'seconds' : 'секунди'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Ukrainian\n */\nexport const aliases = ['ua', 'ua-ua', 'ukraine'];\n","/**\n * @classdesc Vietnamese Language Pack\n * @desc This class will used to translate tokens into the Vietnamese language.\n * @namespace Languages.Vietnamese\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Vietnamese\n */\nexport const dictionary = {\n\t'years'   : 'Năm',\n\t'months'  : 'Tháng',\n\t'days'    : 'Ngày',\n\t'hours'   : 'Giờ',\n\t'minutes' : 'Phút',\n\t'seconds' : 'Giây'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Vietnamese\n */\nexport const aliases = ['vn', 'vn-vn', 'vietnamese'];\n","/**\n * @classdesc Chinese Language Pack\n * @desc This class will used to translate tokens into the Chinese language.\n * @namespace Languages.Chinese\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.Chinese\n */\nexport const dictionary = {\n\t'years'   : '年',\n\t'months'  : '月',\n\t'days'    : '日',\n\t'hours'   : '时',\n\t'minutes' : '分',\n\t'seconds' : '秒'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.Chinese\n */\nexport const aliases = ['zh', 'zh-cn', 'chinese'];\n","/**\n * @classdesc Traditional Chinese Language Pack\n * @desc This class will used to translate tokens into the Traditional Chinese language.\n * @namespace Languages.TraditionalChinese\n */\n\n/**\n * @constant dictionary\n * @type {object}\n * @memberof Languages.TraditionalChinese\n */\nexport const dictionary = {\n\t'years'   : '年',\n\t'months'  : '月',\n\t'days'    : '日',\n\t'hours'   : '時',\n\t'minutes' : '分',\n\t'seconds' : '秒'\n};\n\n/**\n * @constant aliases\n * @type {array}\n * @memberof Languages.TraditionalChinese\n */\nexport const aliases = ['zh-tw'];\n","/**\n * @namespace Helpers.Language\n */\nimport * as LANGUAGES from '../Languages';\n\n/**\n * Return the language associated with the key. Returns `null` if no language is\n * found.\n * \n * @function language\n * @param  {string} name - The name or id of the language.\n * @return {object|null} - The language dictionary, or null if not found.\n * @memberof Helpers.Language\n */\nexport default function language(name) {\n    return name ? LANGUAGES[name.toLowerCase()] || Object.values(LANGUAGES).find(value => {\n        return value.aliases.indexOf(name) !== -1;\n    }) : null;\n}\n","/**\n * @namespace Helpers.Translate\n */\nimport language from './Language';\nimport { isString } from './Functions';\n\n/**\n * Translate an English string into another language.\n * \n * @function translate\n * @param {string} string - The string to translate.\n * @param {(string|object)} from - The language used to translate. If a string,\n *     the language is loaded into an object.\n * @return {string} - If no diction key is found, the untranslated string is\n *     returned.\n * @memberof Helpers.Translate\n */\nexport default function translate(string, from) {\n    const lang = isString(from) ? language(from) : from;\n    const dictionary = lang.dictionary || lang;\n    return dictionary[string] || string;\n};\n","/**\n * A collection of functions to manage DOM nodes and theme templates.\n *\n * @namespace Helpers.Template\n */\nimport { noop } from './Functions';\nimport { isArray } from './Functions';\nimport { isObject } from './Functions';\nimport { isString } from './Functions';\nimport { deepFlatten } from './Functions';\n\n/**\n * Swap a new DOM node with an existing one.\n *\n * @function swap\n * @param  {HTMLElement} subject - The new DOM node.\n * @param  {HTMLElement} existing - The existing DOM node.\n * @return {HTMLElement} - Returns the new element if it was mounted, otherwise\n *    the existing node is returned.\n * @memberof Helpers.Template\n */\nexport function swap(subject, existing) {\n\tif(existing.parentNode) {\n\t\texisting.parentNode.replaceChild(subject, existing);\n\n\t\treturn subject;\n\t}\n\n\treturn existing;\n}\n\n/**\n * Set the attribute of an element.\n *\n * @function setAttributes\n * @param  {HTMLElement} el - The DOM node that will receive the attributes.\n * @param  {Object|undefined} [attributes] - The attribute object, or if no object\n *     is passed, then the action is ignored.\n * @return {HTMLElement} el - The DOM node that received the attributes.\n * @memberof Helpers.Template\n */\nexport function setAttributes(el, attributes) {\n\tif(isObject(attributes)) {\n\t\tfor(const i in attributes) {\n\t\t\tel.setAttribute(i, attributes[i]);\n\t\t}\n\t}\n\n\treturn el;\n}\n\n/**\n * Append an array of DOM nodes to a parent.\n *\n * @function appendChildren\n * @param  {HTMLElement} el - The parent DOM node.\n * @param  {Array|undefined} [children] - The array of children. If no array\n *     is passed, then the method silently fails to run.\n * @return {HTMLElement} el - The DOM node that received the attributes.\n * @memberof Helpers.Template\n */\nexport function appendChildren(el, children) {\n\tif(isArray(children)) {\n\t\tchildren.filter(noop).forEach(child => {\n\t\t\tif(child instanceof HTMLElement) {\n\t\t\t\tel.appendChild(child);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn el;\n}\n\n/**\n * Create a new HTMLElement instance.\n *\n * @function createElement\n * @param  {HTMLElement} el - The parent DOM node.\n * @param  {Array|undefined} [children] - The array of children. If no array\n *     is passed, then the method silently fails to run.\n * @param  {Object|undefined} [attributes] - The attributes object.\n * @return {HTMLElement} el - The DOM node that received the attributes.\n * @memberof Helpers.Template\n */\nexport function createElement(el, children, attributes) {\n\tif(!(el instanceof HTMLElement)) {\n\t\tel = document.createElement(el);\n\t}\n\n\tsetAttributes(el, isObject(children) ? children : attributes);\n\n\tif(!isObject(children) && !isArray(children)) {\n\t\tel.innerHTML = children;\n\t}\n\telse {\n\t\tappendChildren(el, children);\n\t}\n\n\treturn el;\n}\n","import Component from './Component';\nimport language from '../Helpers/Language';\nimport validate from '../Helpers/Validate';\nimport translate from '../Helpers/Translate';\nimport { isString } from '../Helpers/Functions';\nimport ConsoleMessages from '../Config/ConsoleMessages';\nimport { error, kebabCase } from '../Helpers/Functions';\nimport { swap, createElement } from '../Helpers/Template';\n\nexport default class DomComponent extends Component {\n\n    /**\n     * An abstract class that all other DOM components can extend.\n     *\n     * @class DomComponent\n     * @extends Component\n     * @param {(object|undefined)} [attributes] - The instance attributes.\n     */\n    constructor(attributes) {\n        super(Object.assign({\n            parent: null\n        }, attributes));\n\n        if(!this.theme) {\n            error(`${this.name} does not have a theme defined.`);\n        }\n\n        if(!this.language) {\n            error(`${this.name} does not have a language defined.`);\n        }\n\n\t\tif(!this.theme[this.name]) {\n            throw new Error(\n                `${this.name} cannot be rendered because it has no template.`\n            );\n        }\n    }\n\n    /**\n     * The `className` attribute. Used for CSS.\n     *\n     * @type {string}\n     */\n    get className() {\n        return kebabCase(this.constructor.defineName());\n    }\n\n    /**\n     * The `el` attribute.\n     *\n     * @type {HTMLElement}\n     */\n    get el() {\n        return this.$el;\n    }\n\n    set el(value) {\n        if(!validate(value, null, HTMLElement)) {\n            error(ConsoleMessages.element);\n        }\n\n        this.$el = value;\n    }\n\n    /**\n     * The `parent` attribute. Parent is set when `DomComponent` instances are\n     * mounted.\n     *\n     * @type {DomComponent}\n     */\n    get parent() {\n        return this.$parent;\n    }\n\n    set parent(parent) {\n        this.$parent = parent;\n    }\n\n    /**\n     * The `theme` attribute.\n     *\n     * @type {object}\n     */\n    get theme() {\n        return this.$theme;\n    }\n\n    set theme(value) {\n        if(!validate(value, 'object')) {\n            error(ConsoleMessages.value);\n        }\n\n        this.$theme = value;\n    }\n\n    /**\n     * Get the language attribute.\n     *\n     * @type {object}\n     */\n    get language() {\n        return this.$language;\n    }\n\n    set language(value) {\n        if(isString(value)) {\n            value = language(value);\n        }\n\n        if(!validate(value, 'object')) {\n            error(ConsoleMessages.language);\n        }\n\n        this.$language = value;\n    }\n\n    /**\n     * Translate a string.\n     *\n     * @param  {string} string - The string to translate.\n     * @return {string} - The translated string. If no tranlation found, the\n     *     untranslated string is returned.\n     */\n    translate(string) {\n        return translate(string, this.language);\n    }\n\n    /**\n     * Alias to translate(string);\n     *\n     * @alias DomComponent.translate\n     */\n    t(string) {\n        return this.translate(string);\n    }\n\n    /**\n     * Render the DOM component.\n     *\n     * @return {HTMLElement} - The `el` attribute.\n     */\n\trender() {\n        const el = createElement('div', {\n            class: this.className === 'flip-clock' ? this.className : 'flip-clock-' + this.className\n        });\n\n        this.theme[this.name](el, this);\n\n        if(!this.el) {\n            this.el = el;\n        }\n        else if(this.el.innerHTML !== el.innerHTML) {\n            this.el = swap(el, this.el);\n        }\n\n        return this.el;\n\t}\n\n    /**\n     * Mount a DOM component to a parent node.\n     *\n     * @param  {HTMLElement} parent - The parent DOM node.\n     * @param  {(false|HTMLElement)} [before=false] - If `false`, element is\n     *     appended to the parent node. If an instance of an `HTMLElement`,\n     *     the component will be inserted before the specified element.\n     * @return {HTMLElement} - The `el` attribute.\n     */\n    mount(parent, before = false) {\n        this.render();\n        this.parent = parent;\n\n        if(!before) {\n            this.parent.appendChild(this.el);\n        }\n        else {\n            this.parent.insertBefore(this.el, before);\n        }\n\n        return this.el;\n    }\n\n}\n","import DomComponent from './DomComponent';\n\n/**\n * Create a new `Divider` instance.\n *\n * The purpose of this class is to return a unique class name so the theme can\n * render it appropriately, since each `DomComponent` can receive its own template\n * from the theme.\n *\n * @class Divider\n * @extends DomComponent\n * @param {(object|undefined)} [attributes] - The instance attributes.\n */\nexport default class Divider extends DomComponent {\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'Divider';\n    }\n\n}\n","import DomComponent from './DomComponent';\nimport { isObject } from '../Helpers/Functions';\n\nexport default class ListItem extends DomComponent {\n\n    /**\n     * This class is used to represent a single digits in a `List`.\n     *\n     * @class ListItem\n     * @extends DomComponent\n     * @param {(Number|String)} value - The value of the `ListItem`.\n     * @param {object|undefined} [attributes] - The instance attributes.\n     */\n    constructor(value, attributes) {\n        super(Object.assign({\n            value: value\n        }, isObject(value) ? value : null, attributes));\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'ListItem';\n    }\n\n}\n","import Divider from './Divider';\nimport ListItem from './ListItem';\nimport DomComponent from './DomComponent';\nimport { next, prev,  } from '../Helpers/Value';\nimport { isObject,  } from '../Helpers/Functions';\n\nexport default class List extends DomComponent {\n\n    /**\n     * This class is used to add a digit to the clock face. This class is called\n     * `List` because it contains a list of `ListItem`'s which are used to\n     * create flip effects. In the context of FlipClock.js a `List` represents\n     * one single digit.\n     *\n     * @class List\n     * @extends DomComponent\n     * @param {Number|String|Object} label - The active value. If an object, it\n     * is assumed that it is the instance attributes.\n     * @param {object|undefined} [attributes] - The instance attributes.\n     */\n    constructor(value, attributes) {\n        super(Object.assign({\n            value: value,\n            items: [],\n        }, isObject(value) ? value : null, attributes));\n    }\n\n    /**\n     * Get the `value` attribute.\n     *\n     * @type {(Number|String)}\n     */\n    get value() {\n        return this.$value;\n    }\n    set value(value) {\n        this.$value = value;\n    }\n\n    /**\n     * Get the `items` attribute.\n     *\n     * @type {(Number|String)}\n     */\n    get items() {\n        return this.$items;\n    }\n\n    set items(value) {\n        this.$items = value;\n    }\n\n    /**\n     * Helper method to instantiate a new `ListItem`.\n     *\n     * @param  {(Number|String)} value - The `ListItem` value.\n     * @param  {(Object|undefined)} [attributes] - The instance attributes.\n     * @return {ListItem} - The instantiated `ListItem`.\n     */\n    createListItem(value, attributes) {\n        const item = new ListItem(value, Object.assign({\n            theme: this.theme,\n            language: this.language\n        }, attributes));\n\n        this.$items.push(item);\n\n        return item;\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'List';\n    }\n\n}\n","import DomComponent from './DomComponent';\nimport { isObject, isArray } from '../Helpers/Functions';\n\nexport default class Group extends DomComponent {\n\n    /**\n     * This class is used to group values within a clock face. How the groups\n     * are displayed is determined by the theme.\n     *\n     * @class Group\n     * @extends DomComponent\n     * @param {Array|Object} items - An array `List` instances or an object of\n     *     attributes. If not an array, assumed to be the attributes.\n     * @param {object|undefined} [attributes] - The instance attributes.\n     */\n    constructor(items, attributes) {\n        super(Object.assign({\n            items: isArray(items) ? items : []\n        }, (isObject(items) ? items : null), attributes));\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'Group';\n    }\n\n}\n","import DomComponent from './DomComponent';\nimport { isObject } from '../Helpers/Functions';\n\nexport default class Label extends DomComponent {\n\n    /**\n     * This class is used to add a label to the clock face.\n     *\n     * @class Label\n     * @extends DomComponent\n     * @param {Number|String|Object} label - The label attribute. If an object,\n     *     it is assumed that it is the instance attributes.\n     * @param {object|undefined} [attributes] - The instance attributes.\n     */\n    constructor(label, attributes) {\n        super(Object.assign({\n            label: label\n        }, (isObject(label) ? label : null), attributes));\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'Label';\n    }\n\n}\n","import Component from './Component';\nimport { isObject, isNumber, callback } from '../Helpers/Functions';\n\nexport default class Timer extends Component {\n\n    /**\n     * Create a new `Timer` instance.\n     *\n     * @class Timer\n     * @extends Component\n     * @param {(Object|Number)} interval - The interval passed as a `Number`,\n     *     or can set the attribute of the class with an object.\n     */\n    constructor(interval) {\n        super(Object.assign({\n            count: 0,\n            handle: null,\n            started: null,\n            running: false,\n            interval: isNumber(interval) ? interval : null,\n        }, isObject(interval) ? interval : null));\n    }\n\n    /**\n     * The `elapsed` attribute.\n     *\n     * @type {Number}\n     */\n    get elapsed() {\n        return !this.lastLoop ? 0 : this.lastLoop - (\n            this.started ? this.started.getTime() : new Date().getTime()\n        );\n    }\n\n    /**\n     * The `isRunning` attribute.\n     *\n     * @type {boolean}\n     */\n    get isRunning() {\n        return this.running === true;\n    }\n\n    /**\n     * The `isStopped` attribute.\n     *\n     * @type {boolean}\n     */\n    get isStopped() {\n        return this.running === false;\n    }\n\n    /**\n     * Resets the timer.\n     *\n     * @param  {(Function|undefined)} fn - The interval callback.\n     * @return {Timer} - The `Timer` instance.\n     */\n    reset(fn) {\n        this.stop(() => {\n            this.count = 0;\n            this.start(() => callback.call(this, fn));\n            this.emit('reset');\n        });\n\n        return this;\n    }\n\n    /**\n     * Starts the timer.\n     *\n     * @param  {Function} fn - The interval callback.\n     * @return {Timer} - The `Timer` instance.\n     */\n    start(fn) {\n        this.started = new Date;\n        this.lastLoop = Date.now();\n        this.running = true;\n        this.emit('start');\n\n        const loop = () => {\n            if(Date.now() - this.lastLoop >= this.interval) {\n                callback.call(this, fn);\n                this.lastLoop = Date.now();\n                this.emit('interval');\n                this.count++;\n            }\n\n            this.handle = window.requestAnimationFrame(loop);\n\n            return this;\n        };\n\n        return loop();\n    }\n\n    /**\n     * Stops the timer.\n     *\n     * @param  {Function} fn - The stop callback.\n     * @return {Timer} - The `Timer` instance.\n     */\n    stop(fn) {\n        if(this.isRunning) {\n            setTimeout(() => {\n                window.cancelAnimationFrame(this.handle);\n\n                this.running = false;\n\n                callback.call(this, fn);\n\n                this.emit('stop');\n            });\n        }\n\n        return this;\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'Timer';\n    }\n}\n","import Face from '../Components/Face';\n\n/**\n * @classdesc This face is designed to increment and decrement numberic values,\n *     not `Date` objects.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class Counter extends Face {\n\n    increment(instance, value = 1) {\n        instance.value = this.value.value + value;\n    }\n\n    decrement(instance, value = 1) {\n        instance.value = this.value.value - value;\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'Counter';\n    }\n}\n","import Face from '../Components/Face';\nimport { noop, round, isNull, isUndefined, isNumber, callback } from '../Helpers/Functions';\n\n/**\n * @classdesc This face is meant to display a clock that shows minutes, and\n *     seconds.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class MinuteCounter extends Face {\n\n    defaultDataType() {\n        return Date;\n    }\n\n    defaultAttributes() {\n        return {\n            showSeconds: true,\n            showLabels: true\n        };\n    }\n\n    shouldStop(instance) {\n        if(isNull(instance.stopAt) || isUndefined(instance.stopAt)) {\n            return false;\n        }\n\n        if(this.stopAt instanceof Date) {\n            return this.countdown ?\n                this.stopAt.getTime() >= this.value.value.getTime():\n                this.stopAt.getTime() <= this.value.value.getTime();\n        }\n        else if(isNumber(this.stopAt)) {\n            const diff = Math.floor((this.value.value.getTime() - this.originalValue.getTime()) / 1000);\n\n            return this.countdown ?\n                this.stopAt >= diff:\n                this.stopAt <= diff;\n        }\n\n        throw new Error(`the stopAt property must be an instance of Date or Number.`);\n    }\n\n    increment(instance, value = 0) {\n        instance.value = new Date(this.value.value.getTime() + value + (new Date().getTime() - instance.timer.lastLoop));\n    }\n\n    decrement(instance, value = 0) {\n        instance.value = new Date(this.value.value.getTime() - value - (new Date().getTime() - instance.timer.lastLoop));\n    }\n\n    format(instance, value) {\n        const started = instance.timer.isRunning ? instance.timer.started : new Date(Date.now() - 50);\n\n        return [\n            [this.getMinutes(value, started)],\n            this.showSeconds ? [this.getSeconds(value, started)] : null\n        ].filter(noop);\n    }\n\n    getMinutes(a, b) {\n        return round(this.getTotalSeconds(a, b) / 60);\n    }\n\n    getSeconds(a, b) {\n        const totalSeconds = this.getTotalSeconds(a, b);\n\n        return Math.abs(Math.ceil(totalSeconds === 60 ? 0 : totalSeconds % 60));\n    }\n\n    getTotalSeconds(a, b) {\n        return a.getTime() === b.getTime() ? 0 : Math.round((a.getTime() - b.getTime()) / 1000);\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'MinuteCounter';\n    }\n}\n","import MinuteCounter from './MinuteCounter';\n\n/**\n * @classdesc This face is meant to display a clock that shows\n *     hours, minutes, and seconds.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class HourCounter extends MinuteCounter {\n\n    format(instance, value) {\n        const now = !instance.timer.started ? new Date : value;\n        const originalValue = instance.originalValue || value;\n        const a = !this.countdown ? now : originalValue;\n        const b = !this.countdown ? originalValue : now;\n\n        const data = [\n            [this.getHours(a, b)],\n            [this.getMinutes(a, b)]\n        ];\n\n        if(this.showSeconds) {\n            data.push([this.getSeconds(a, b)]);\n        }\n\n        return data;\n    }\n\n    getMinutes(a, b) {\n        return Math.abs(super.getMinutes(a, b) % 60);\n    }\n\n    getHours(a, b) {\n        return Math.floor(this.getTotalSeconds(a, b) / 60 / 60);\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'HourCounter';\n    }\n}\n","import HourCounter from './HourCounter';\n\n/**\n * @classdesc This face is meant to display a clock that shows days, hours,\n *     minutes, and seconds.\n * @extends HourCounter\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class DayCounter extends HourCounter {\n\n    format(instance, value) {\n        const now = !instance.started ? new Date : value;\n        const originalValue = instance.originalValue || value;\n        const a = !this.countdown ? now : originalValue;\n        const b = !this.countdown ? originalValue : now;\n\n        const data = [\n            [this.getDays(a, b)],\n            [this.getHours(a, b)],\n            [this.getMinutes(a, b)]\n        ];\n\n        if(this.showSeconds) {\n            data.push([this.getSeconds(a, b)]);\n        }\n\n        return data;\n    }\n\n    getDays(a, b) {\n        return Math.floor(this.getTotalSeconds(a, b) / 60 / 60 / 24);\n    }\n\n    getHours(a, b) {\n        return Math.abs(super.getHours(a, b) % 24);\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'DayCounter';\n    }\n}\n","import Face from '../Components/Face';\nimport { callback } from '../Helpers/Functions';\n\n/**\n * @classdesc This face shows the current time in twenty-four hour format.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class TwentyFourHourClock extends Face {\n\n    defaultDataType() {\n        return Date;\n    }\n\n    defaultValue() {\n        return new Date;\n    }\n\n    defaultAttributes() {\n        return {\n            showSeconds: true,\n            showLabels: false\n        };\n    }\n\n    format(instance, value) {\n        if(!value) {\n            value = new Date;\n        }\n\n        const groups = [\n            [value.getHours()],\n            [value.getMinutes()]\n        ];\n\n        if(this.showSeconds) {\n            groups.push([value.getSeconds()]);\n        }\n\n        return groups;\n    }\n\n    increment(instance, offset = 0) {\n        instance.value = new Date(this.value.value.getTime() + offset + (new Date().getTime() - instance.timer.lastLoop));\n    }\n\n    decrement(instance, offset = 0) {\n        instance.value = new Date(this.value.value.getTime() - offset - (new Date().getTime() - instance.timer.lastLoop));\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'TwentyFourHourClock';\n    }\n}\n","import TwentyFourHourClock from './TwentyFourHourClock';\n\n/**\n * @classdesc This face shows the current time in twelve hour format, with AM\n *     and PM.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class TwelveHourClock extends TwentyFourHourClock {\n\n    defaultAttributes() {\n        return {\n            showLabels: false,\n            showSeconds: true,\n            showMeridium: true\n        };\n    }\n\n    format(instance, value) {\n        if(!value) {\n            value = new Date;\n        }\n\n        const hours = value.getHours();\n\t\tconst groups = [\n\t\t\thours > 12 ? hours - 12 : (hours === 0 ? 12 : hours),\n\t\t\tvalue.getMinutes()\n\t\t];\n\n        this.meridium = hours > 12 ? 'pm' : 'am';\n\n\t\tif(this.showSeconds) {\n\t\t\tgroups.push(value.getSeconds());\n\t\t}\n\n\t\treturn groups;\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'TwelveHourClock';\n    }\n}\n","import DayCounter from './DayCounter';\n\n/**\n * @classdesc This face is meant to display a clock that shows weeks, days,\n *     hours, minutes, and seconds.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class WeekCounter extends DayCounter {\n\n    format(instance, value) {\n        const now = !instance.timer.started ? new Date : value;\n        const originalValue = instance.originalValue || value;\n        const a = !this.countdown ? now : originalValue;\n        const b = !this.countdown ? originalValue : now;\n\n        const data = [\n            [this.getWeeks(a, b)],\n            [this.getDays(a, b)],\n            [this.getHours(a, b)],\n            [this.getMinutes(a, b)]\n        ];\n\n        if(this.showSeconds) {\n            data.push([this.getSeconds(a, b)]);\n        }\n\n        return data;\n    }\n\n    getWeeks(a, b) {\n        return Math.floor(this.getTotalSeconds(a, b) / 60 / 60 / 24 / 7);\n    }\n\n    getDays(a, b) {\n        return Math.abs(super.getDays(a, b) % 7);\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'WeekCounter';\n    }\n}\n","import WeekCounter from './WeekCounter';\n\n/**\n * @classdesc This face is meant to display a clock that shows years, weeks,\n *     days, hours, minutes, and seconds.\n * @extends Face\n * @param {(FaceValue|object)} value - The `Face` value. If not an instance\n *     of FaceValue, this argument is assumed to be the instance attributes.\n * @param {(object|undefined)} [attributes] - The instance attributes.\n * @memberof Faces\n */\nexport default class YearCounter extends WeekCounter {\n\n    format(instance, value) {\n        const now = !instance.timer.started ? new Date : value;\n        const originalValue = instance.originalValue || value;\n        const a = !this.countdown ? now : originalValue;\n        const b = !this.countdown ? originalValue : now;\n\n        const data = [\n            [this.getYears(a, b)],\n            [this.getWeeks(a, b)],\n            [this.getDays(a, b)],\n            [this.getHours(a, b)],\n            [this.getMinutes(a, b)]\n        ];\n\n        if(this.showSeconds) {\n            data.push([this.getSeconds(a, b)]);\n        }\n\n        return data;\n    }\n\n    getYears(a, b) {\n        return Math.floor(Math.max(0, this.getTotalSeconds(a, b) / 60 / 60 / 24 / 7 / 52));\n    }\n\n    getWeeks(a, b) {\n        return Math.abs(super.getWeeks(a, b) % 52);\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'YearCounter';\n    }\n}\n","import { appendChildren, createElement } from '../../Helpers/Template';\n\nexport default function(el, instance) {\n    appendChildren(el, [\n        createElement('div', {class: 'flip-clock-dot top'}),\n        createElement('div', {class: 'flip-clock-dot bottom'})\n    ]);\n}\n","import { next } from '../../Helpers/Value';\nimport { appendChildren } from '../../Helpers/Template';\n\nfunction child(el, index) {\n    return el ? (el.childNodes ? el.childNodes[index] : el[index]) : null;\n}\n\nfunction char(el) {\n    return el ? el.querySelector('.flip-clock-list-item:first-child .top').innerHTML : null;\n}\n\nexport default function(el, instance) {\n    const parts = instance.value.digits.map((group, x) => {\n        const groupEl = child(instance.el ? instance.el.querySelectorAll('.flip-clock-group') : null, x);\n\n        const lists = group.map((value, y) => {\n            const listEl = child(groupEl ? groupEl.querySelectorAll('.flip-clock-list') : null, y);\n            const listValue = char(listEl);\n\n            return instance.createList(value, {\n                domValue: listValue,\n                countdown: instance.countdown,\n                animationRate: instance.face.animationRate || instance.face.delay\n            });\n        });\n\n        return instance.createGroup(lists);\n    });\n\n    const nodes = parts.map(group => {\n        return group.render();\n    });\n\n    appendChildren(el, nodes);\n}\n","import { createElement, appendChildren } from '../../Helpers/Template';\n\nexport default function(el, instance) {\n    const items = instance.items.map(item => {\n        return item.render();\n    });\n\n    appendChildren(el, items);\n}\n","import { createElement } from '../../Helpers/Template';\n\nexport default function(el, instance) {\n    el.innerHTML = instance.t(instance.label);\n}\n","import { next, prev } from '../../Helpers/Value';\nimport ListItem from '../../Components/ListItem';\nimport { createElement, appendChildren } from '../../Helpers/Template';\n\nexport default function(el, instance) {\n    const beforeValue = instance.domValue || (\n        !instance.countdown ? prev(instance.value) : next(instance.value)\n    );\n\n    if( instance.domValue && instance.domValue !== instance.value) {\n        el.classList.add('flip');\n    }\n\n    el.style.animationDelay = `${instance.animationRate / 2}ms`;\n    el.style.animationDuration = `${instance.animationRate / 2}ms`;\n\n    instance.items = [\n        instance.createListItem(instance.value, {\n            active: true\n        }),\n        instance.createListItem(beforeValue, {\n            active: false\n        })\n    ];\n\n    appendChildren(el, instance.items.map(item => item.render()));\n}\n","import { createElement, appendChildren } from '../../Helpers/Template';\n\nexport default function(el, instance) {\n    const className = instance.active === true ? 'active' : (\n        instance.active === false ? 'before' : null\n    );\n\n    el.classList.add(className);\n\n    appendChildren(el, [\n        createElement('div', [\n            createElement('div', instance.value, {class: 'top'}),\n            createElement('div', instance.value, {class: 'bottom'})\n        ], {class: 'flip-clock-list-item-inner'})\n    ]);\n}\n","export default function(el, instance) {\n    instance.createDivider().mount(el, el.childNodes[1]);\n    instance.createDivider().mount(el, el.childNodes[3]);\n\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[5]);\n    }\n\n    if(instance.face.showLabels) {\n        instance.createLabel('days').mount(el.childNodes[0]);\n        instance.createLabel('hours').mount(el.childNodes[2]);\n        instance.createLabel('minutes').mount(el.childNodes[4]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[6]);\n        }\n    }\n}\n","export default function(el, instance) {\n    instance.createDivider().mount(el, el.childNodes[1]);\n\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[3]);\n    }\n    \n    if(instance.face.showLabels) {\n        instance.createLabel('hours').mount(el.childNodes[0]);\n        instance.createLabel('minutes').mount(el.childNodes[2]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[4]);\n        }\n    }\n}\n","export default function(el, instance) {\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[1]);\n    }\n\n    if(instance.face.showLabels) {\n        instance.createLabel('minutes').mount(el.childNodes[0]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[2]);\n        }\n    }\n}\n","export default function(el, instance) {\n    instance.createDivider().mount(el, el.childNodes[1]);\n\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[3]);\n    }\n    \n    if(instance.face.showLabels) {\n        instance.createLabel('hours').mount(el.childNodes[0]);\n        instance.createLabel('minutes').mount(el.childNodes[2]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[4]);\n        }\n    }\n\n}\n","import TwentyFourHourClock from './TwentyFourHourClock';\n\nexport default function(el, instance) {\n    TwentyFourHourClock(el, instance);\n\n    if(instance.face.showMeridium && instance.face.meridium) {\n        const label = instance.createLabel(instance.face.meridium);\n        const parent = el.childNodes[el.childNodes.length - 1];\n\n        label.mount(parent).classList.add('flip-clock-meridium');\n    }\n}\n","export default function(el, instance) {\n    instance.createDivider().mount(el, el.childNodes[1]);\n    instance.createDivider().mount(el, el.childNodes[3]);\n    instance.createDivider().mount(el, el.childNodes[5]);\n\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[7]);\n    }\n\n    if(instance.face.showLabels) {\n        instance.createLabel('weeks').mount(el.childNodes[0]);\n        instance.createLabel('days').mount(el.childNodes[2]);\n        instance.createLabel('hours').mount(el.childNodes[4]);\n        instance.createLabel('minutes').mount(el.childNodes[6]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[8]);\n        }\n    }\n}\n","export default function(el, instance) {\n    instance.createDivider().mount(el, el.childNodes[1]);\n    instance.createDivider().mount(el, el.childNodes[3]);\n    instance.createDivider().mount(el, el.childNodes[5]);\n    instance.createDivider().mount(el, el.childNodes[7]);\n\n    if(instance.face.showSeconds) {\n        instance.createDivider().mount(el, el.childNodes[9]);\n    }\n\n    if(instance.face.showLabels) {\n        instance.createLabel('years').mount(el.childNodes[0]);\n        instance.createLabel('weeks').mount(el.childNodes[2]);\n        instance.createLabel('days').mount(el.childNodes[4]);\n        instance.createLabel('hours').mount(el.childNodes[6]);\n        instance.createLabel('minutes').mount(el.childNodes[8]);\n\n        if(instance.face.showSeconds) {\n            instance.createLabel('seconds').mount(el.childNodes[10]);\n        }\n    }\n}\n","import Divider from './Divider';\nimport FlipClock from './FlipClock';\nimport Group from './Group';\nimport Label from './Label';\nimport List from './List';\nimport ListItem from './ListItem';\nimport * as faces from './Faces';\n\nexport default {\n    Divider,\n    FlipClock,\n    Group,\n    Label,\n    List,\n    ListItem,\n    faces\n};\n","import { Counter } from '../Faces';\nimport { Original } from '../Themes';\nimport { English } from '../Languages';\n\n/**\n * @alias DefaultValues\n * @type {object}\n * @memberof module:Config/DefaultValues\n */\nexport default {\n    face: Counter,\n    theme: Original,\n    language: English\n};\n","import Face from './Face';\nimport List from './List';\nimport Group from './Group';\nimport Label from './Label';\nimport Timer from './Timer';\nimport Divider from './Divider';\nimport * as Faces from '../Faces';\nimport FaceValue from './FaceValue';\nimport DomComponent from './DomComponent';\nimport validate from '../Helpers/Validate';\nimport DefaultValues from '../Config/DefaultValues';\nimport ConsoleMessages from '../Config/ConsoleMessages';\nimport { flatten, isNull, isString, isObject, isUndefined, isFunction, error } from '../Helpers/Functions';\n\nexport default class FlipClock extends DomComponent {\n   \n    /**\n     * Create a new `FlipClock` instance.\n     *\n     * @class FlipClock\n     * @extends DomComponent\n     * @param {HTMLElement} el - The HTML element used to bind clock DOM node.\n     * @param {*} value - The value that is passed to the clock face.\n     * @param {object|undefined} attributes - {@link FlipClock.Options} passed an object with key/value.\n     */\n        \n    /**\n     * @namespace FlipClock.Options\n     * @classdesc An object of key/value pairs that will be used to set the attributes.\n     * \n     * ##### Example:\n     * \n     *     {\n     *        face: 'DayCounter',\n     *        language: 'es',\n     *        timer: Timer.make(500)\n     *     }\n     * \n     * @property {string|Face} [face={@link Faces.DayCounter}] - The clock's {@link Face} instance.\n     * @property {number} [interval=1000] - The clock's interval rate (in milliseconds).\n     * @property {object} [theme={@link Themes.Original}] - The clock's theme.\n     * @property {string|object} [language={@link Languages.English}] - The clock's language.\n     * @property {Timer} [timer={@link Timer}] - The clock's timer.\n     */\n    \n    constructor(el, value, attributes) {\n        if(!validate(el, HTMLElement)) {\n            error(ConsoleMessages.element);\n        }\n\n        if(isObject(value) && !attributes) {\n            attributes = value;\n            value = undefined;\n        }\n\n        const face = attributes.face || DefaultValues.face;\n\n        delete attributes.face;\n\n        super(Object.assign({\n            originalValue: value,\n            theme: DefaultValues.theme,\n            language: DefaultValues.language,\n            timer: Timer.make(attributes.interval || 1000),\n        }, attributes));\n\n        if(!this.face) {\n            this.face = face;\n        }\n\n        this.mount(el);\n    }\n\n    /**\n     * The clock `Face`.\n     *\n     * @type {Face}\n     */\n    get face() {\n        return this.$face;\n    }\n\n    set face(value) {\n        if(!validate(value, [Face, 'string', 'function'])) {\n            error(ConsoleMessages.face);\n        }\n\n        this.$face = (Faces[value] || value).make(Object.assign(this.getPublicAttributes(), {\n            originalValue: this.face ? this.face.originalValue : undefined\n        }));\n\n        this.$face.initialized(this);\n\n        if(this.value) {\n            this.$face.value = this.face.createFaceValue(this, this.value.value);\n        }\n        else if(!this.value) {\n            this.value = this.originalValue;\n        }\n\n        this.el && this.render();\n    }\n\n    /**\n     * The `stopAt` attribute.\n     *\n     * @type {*}\n     */\n    get stopAt() {\n        return isFunction(this.$stopAt) ? this.$stopAt(this) : this.$stopAt;\n    }\n\n    set stopAt(value) {\n        this.$stopAt = value;\n    }\n\n    /**\n     * The `timer` instance.\n     *\n     * @type {Timer}\n     */\n    get timer() {\n        return this.$timer;\n    }\n\n    set timer(timer) {\n        if(!validate(timer, Timer)) {\n            error(ConsoleMessages.timer);\n        }\n\n        this.$timer = timer;\n    }\n\n    /**\n     * Helper method to The clock's `FaceValue` instance.\n     *\n     * @type {FaceValue|null}\n     */\n    get value() {\n        return this.face ? this.face.value : null;\n    }\n\n    set value(value) {\n        if(!this.face) {\n            throw new Error('A face must be set before setting a value.');\n        }\n\n        if(value instanceof FaceValue) {\n            this.face.value = value;\n        }\n        else if(this.value) {\n            this.face.value = this.face.value.clone(value);\n        }\n        else {\n            this.face.value = this.face.createFaceValue(this, value);\n        }\n\n        this.el && this.render();\n    }\n\n    /**\n     * The `originalValue` attribute.\n     *\n     * @type {*}\n     */\n    get originalValue() {\n        if(isFunction(this.$originalValue) && !this.$originalValue.name) {\n            return this.$originalValue();\n        }\n\n        if(!isUndefined(this.$originalValue) && !isNull(this.$originalValue)) {\n            return this.$originalValue;\n        }\n\n        return this.face ? this.face.defaultValue() : undefined;\n    }\n\n    set originalValue(value) {\n        this.$originalValue = value;\n    }\n\n    /**\n     * Mount the clock to the parent DOM element.\n     *\n     * @param  {HTMLElement} el - The parent `HTMLElement`.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    mount(el) {\n        super.mount(el);\n\n        this.face.mounted(this);\n\n        return this;\n    }\n\n    /**\n     * Render the clock's DOM nodes.\n     *\n     * @return {HTMLElement} - The parent `HTMLElement`.\n     */\n    render() {\n        // Call the parent render function\n        super.render();\n\n        // Check to see if the face has a render function defined in the theme.\n        // This allows a face to completely re-render or add to the theme.\n        // This allows face specific interfaces for a theme.\n        if(this.theme.faces[this.face.name]) {\n            this.theme.faces[this.face.name](this.el, this);\n        }\n\n        // Pass the clock instance to the rendered() function on the face.\n        // This allows global modifications to the rendered templates not\n        // theme specific.\n        this.face.rendered(this);\n\n        // Return the rendered `HTMLElement`.\n        return this.el;\n    }\n\n    /**\n     * Start the clock.\n     *\n     * @param  {Function} fn - The interval callback.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    start(fn) {\n        if(!this.timer.started) {\n            this.value = this.originalValue;\n        }\n\n        isUndefined(this.face.stopAt) && (this.face.stopAt = this.stopAt);\n        isUndefined(this.face.originalValue) && (this.face.originalValue = this.originalValue);\n\n        this.timer.start(() => {\n            this.face.interval(this, fn);\n        });\n\n        this.face.started(this);\n\n        return this.emit('start');\n    }\n\n    /**\n     * Stop the clock.\n     *\n     * @param  {Function} fn - The stop callback.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    stop(fn) {\n        this.timer.stop(fn);\n        this.face.stopped(this);\n\n        return this.emit('stop');\n    }\n\n    /**\n     * Reset the clock to the original value.\n     *\n     * @param  {Function} fn - The interval callback.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    reset(fn) {\n        this.value = this.originalValue;\n        this.timer.reset(() => this.interval(this, fn));\n        this.face.reset(this);\n\n        return this.emit('reset');\n    }\n\n    /**\n     * Helper method to increment the clock's value.\n     *\n     * @param  {*|undefined} value - Increment the clock by the specified value.\n     *     If no value is passed, then the default increment is determined by\n     *     the Face, which is usually `1`.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    increment(value) {\n        this.face.increment(this, value);\n\n        return this;\n    }\n\n    /**\n     * Helper method to decrement the clock's value.\n     *\n     * @param  {*|undefined} value - Decrement the clock by the specified value.\n     *     If no value is passed, then the default decrement is determined by\n     *     the `Face`, which is usually `1`.\n     * @return {FlipClock} - The `FlipClock` instance.\n     */\n    decrement(value) {\n        this.face.decrement(this, value);\n\n        return this;\n    }\n\n    /**\n     * Helper method to instantiate a new `Divider`.\n     *\n     * @param  {object|undefined} [attributes] - The attributes passed to the\n     *     `Divider` instance.\n     * @return {Divider} - The instantiated Divider.\n     */\n    createDivider(attributes) {\n        return Divider.make(Object.assign({\n            theme: this.theme,\n            language: this.language\n        }, attributes));\n    }\n\n    /**\n     * Helper method to instantiate a new `List`.\n     *\n     * @param  {*} value - The `List` value.\n     * @param  {object|undefined} [attributes] - The attributes passed to the\n     *     `List` instance.\n     * @return {List} - The instantiated `List`.\n     */\n    createList(value, attributes) {\n        return List.make(value, Object.assign({\n            theme: this.theme,\n            language: this.language\n        }, attributes));\n    }\n\n    /**\n     * Helper method to instantiate a new `Label`.\n     *\n     * @param  {*} value - The `Label` value.\n     * @param  {object|undefined} [attributes] - The attributes passed to the\n     *     `Label` instance.\n     * @return {Label} - The instantiated `Label`.\n     */\n    createLabel(value, attributes) {\n        return Label.make(value, Object.assign({\n            theme: this.theme,\n            language: this.language\n        }, attributes));\n    }\n\n    /**\n     * Helper method to instantiate a new `Group`.\n     *\n     * @param  {array} items - An array of `List` items to group.\n     * @param  {Group|undefined} [attributes] - The attributes passed to the\n     *     `Group` instance.\n     * @return {Group} - The instantiated `Group`.\n     */\n    createGroup(items, attributes) {\n        return Group.make(items, Object.assign({\n            theme: this.theme,\n            language: this.language\n        }, attributes));\n    }\n\n    /**\n     * The `defaults` attribute.\n     *\n     * @type {object}\n     */\n    static get defaults() {\n        return DefaultValues;\n    }\n\n    /**\n     * Define the name of the class.\n     *\n     * @return {string}\n     */\n    static defineName() {\n        return 'FlipClock';\n    }\n\n    /**\n     * Helper method to set the default `Face` value.\n     *\n     * @param  {Face} value - The default `Face` class.This should be a\n     *     constructor.\n     * @return {void}\n     */\n    static setDefaultFace(value) {\n        if(!validate(value, Face)) {\n            error(ConsoleMessages.face);\n        }\n\n        DefaultValues.face = value;\n    }\n\n    /**\n     * Helper method to set the default theme.\n     *\n     * @param {object} value - The default theme.\n     * @return {void}\n     */\n    static setDefaultTheme(value) {\n        if(!validate(value, 'object')) {\n            error(ConsoleMessages.theme);\n        }\n\n        DefaultValues.theme = value;\n    }\n\n    /**\n     * Helper method to set the default language.\n     *\n     * @param {object} value - The default language.\n     * @return {void}\n     */\n    static setDefaultLanguage(value) {\n        if(!validate(value, 'object')) {\n            error(ConsoleMessages.language);\n        }\n\n        DefaultValues.language = value;\n    }\n\n}\n"],"names":["error","string","Error","callback","fn","isFunction","_len","arguments","length","args","Array","_key","call","apply","this","concat","round","value","isNegativeZero","isNegative","Math","ceil","floor","toString","noop","isUndefined","isNull","chain","before","after","concatMap","x","map","reduce","y","flatten","deepFlatten","isArray","Infinity","isConstructor","Function","name","isString","isObject","type","_typeof","isNumber","isNaN","kebabCase","replace","toLowerCase","Component","attributes","_classCallCheck","setAttribute","Object","assign","events","_createClass","key","get","constructor","defineName","$events","set","emit","_this","forEach","event","on","push","off","filter","once","_this2","getAttribute","hasOwnProperty","getAttributes","_this3","getOwnPropertyNames","getPublicAttributes","_this4","keys","match","obj","setAttributes","values","i","make","_len2","_key2","_construct","digitize","options","minimumDigits","prependLeadingZero","digits","arr","min","unshift","number","prepend","split","RANGES","max","format","parseFloat","findRange","char","code","charCodeAt","stringFromCharCodeBy","String","fromCharCode","next","range","join","prev","FaceValue","_Component","_inherits","_super","_createSuper","$digits","$value","_isNaN","clone","validate","success","arg","className","items","theme","language","date","face","element","faceValue","timer","Face","undefined","autoStart","countdown","animationRate","defaultAttributes","defaultValue","defaultDataType","createFaceValue","$stopAt","$originalValue","interval","instance","decrement","increment","shouldStop","stop","stopAt","amount","started","stopped","reset","initialized","rendered","mounted","isStopped","window","requestAnimationFrame","start","dictionary","years","months","days","hours","minutes","seconds","aliases","LANGUAGES","find","indexOf","translate","from","lang","swap","subject","existing","parentNode","replaceChild","el","appendChildren","children","child","HTMLElement","appendChild","createElement","document","innerHTML","DomComponent","parent","$el","ConsoleMessages","$parent","$theme","$language","t","render","class","mount","insertBefore","Divider","_DomComponent","ListItem","List","$items","createListItem","item","Group","Label","label","Timer","count","handle","running","lastLoop","getTime","Date","now","loop","isRunning","setTimeout","cancelAnimationFrame","Counter","_Face","MinuteCounter","showSeconds","showLabels","diff","originalValue","getMinutes","getSeconds","a","b","getTotalSeconds","totalSeconds","abs","HourCounter","_MinuteCounter","data","getHours","_get","_getPrototypeOf","prototype","DayCounter","_HourCounter","getDays","TwentyFourHourClock","groups","offset","TwelveHourClock","_TwentyFourHourClock","showMeridium","meridium","WeekCounter","_DayCounter","getWeeks","YearCounter","_WeekCounter","getYears","index","childNodes","querySelector","nodes","group","groupEl","querySelectorAll","lists","listValue","createList","domValue","delay","createGroup","beforeValue","classList","add","style","animationDelay","animationDuration","active","createDivider","createLabel","FlipClock","faces","Original","English","DefaultValues","$face","Faces","$timer","setDefaultFace","setDefaultTheme","setDefaultLanguage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiBO,SAASA,KAAMC,CAAAA,CAAAA,CAAAA,CAClB,MAAMC,KAAAA,CAAMD,CAChB,CAAA,CAYO,SAASE,QAAAA,CAASC,CACrB,CAAA,CAAA,GAAGC,UAAWD,CAAAA,CAAAA,CAAAA,CAAK,CAAA,IAAAE,IAAAA,CAAAA,CAAAC,SAAAC,CAAAA,MAAAA,CADSC,MAAIC,KAAAJ,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAK,CAAA,CAAA,CAAA,CAAAA,CAAAL,CAAAA,CAAAA,CAAAK,CAAJF,EAAAA,CAAAA,CAAAA,CAAIE,CAAAJ,CAAAA,CAAAA,CAAAA,CAAAA,SAAAI,CAAAA,CAAAA,CAAAA,CAE5B,OAAOP,CAAAA,CAAGQ,IAAIC,CAAAA,KAAAA,CAAPT,CAAE,CAAA,CAAMU,IAAIC,CAAAA,CAAAA,MAAAA,CAAKN,CAC5B,CAAA,CAAA,CACJ,CAUO,SAASO,KAAMC,CAAAA,CAAAA,CAAAA,CAClB,OAAOC,cAAAA,CACHD,CAAQE,CAAAA,UAAAA,CAAWF,CAASG,CAAAA,CAAAA,IAAAA,CAAKC,IAAKJ,CAAAA,CAAAA,CAAAA,CAASG,KAAKE,KAAML,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CACzD,GAAMA,CAAAA,CAAAA,EAAOM,QAAaN,EAAAA,CAAAA,CACnC,CAUO,SAASO,IAAKP,CAAAA,CAAAA,CAAAA,CACjB,OAAQQ,CAAAA,WAAAA,CAAYR,CAAWS,CAAAA,EAAAA,CAAAA,MAAAA,CAAOT,CAC1C,CAAA,CAYO,SAASU,KAAAA,CAAMC,CAAQC,CAAAA,CAAAA,CAAAA,CAC1B,OAAO,UAAA,CAAA,OAAMA,CAAAA,CAAMD,CAAS,EAAA,CAAA,CAChC,CAUO,SAASE,SAAU1B,CAAAA,CAAAA,CAAAA,CACtB,OAAO,SAAA2B,GACH,OAAOA,CAAAA,CAAEC,GAAI5B,CAAAA,CAAAA,CAAAA,CAAI6B,MAAO,EAAA,SAACF,CAAGG,CAAAA,CAAAA,CAAAA,CAAC,OAAKH,CAAAA,CAAEhB,MAAOmB,CAAAA,CAAAA,CAAE,CAAE,EAAA,EAAA,CACnD,CACJ,CAUO,SAASC,OAAAA,CAAQlB,CACpB,CAAA,CAAA,OAAOa,SAAU,EAAA,SAAAb,CAAK,CAAA,CAAA,OAAIA,CAAK,CAAA,EAAxBa,CAA0Bb,CAAAA,CACrC,CAUO,SAASmB,WAAYL,CAAAA,CAAAA,CAAAA,CACxB,OAAOD,SAAU,EAAA,SAAAC,CAAC,CAAA,CAAA,OAAIrB,KAAM2B,CAAAA,OAAAA,CAAQN,CAAKK,CAAAA,CAAAA,WAAAA,CAAaL,CAAKA,CAAAA,CAAAA,CAAC,CAArDD,EAAAA,CAAuDC,CAClE,CAAA,CAsBO,SAASvB,MAAAA,CAAOS,CACnB,CAAA,CAAA,OAAOmB,WAAYnB,CAAAA,CAAAA,CAAAA,CAAOT,MAC9B,CAUO,SAASU,cAAeD,CAAAA,CAAAA,CAAAA,CAC3B,OAAO,CAAA,CAAIG,IAAKJ,CAAAA,KAAAA,CAAMC,CAAYqB,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CACtC,CAUO,SAASnB,UAAWF,CAAAA,CAAAA,CAAAA,CACvB,OAAOC,cAAAA,CAAeD,CAAUA,CAAAA,EAAAA,CAAAA,CAAQ,CAC5C,CAUO,SAASS,MAAAA,CAAOT,CACnB,CAAA,CAAA,OAAiB,IAAVA,GAAAA,CACX,CAUO,SAASQ,WAAYR,CAAAA,CAAAA,CAAAA,CACxB,OAAwB,KAAA,CAAA,GAAVA,CAClB,CAUO,SAASsB,aAActB,CAAAA,CAAAA,CAAAA,CAC1B,OAAQA,CAAAA,YAAiBuB,QAAevB,EAAAA,CAAAA,CAAAA,CAAAA,CAAMwB,IAClD,CAUO,SAASC,QAAAA,CAASzB,CACrB,CAAA,CAAA,OAAwB,QAAVA,EAAAA,OAAAA,CAClB,CAUO,SAASoB,OAAQpB,CAAAA,CAAAA,CAAAA,CACpB,OAAOA,CAAAA,YAAiBP,KAC5B,CAUO,SAASiC,QAAAA,CAAS1B,CACrB,CAAA,CAAA,IAAM2B,CAAIC,CAAAA,OAAAA,CAAU5B,CACpB,CAAA,CAAA,OAAgB,MAATA,CAAkBoB,EAAAA,CAAAA,OAAAA,CAAQpB,CACrB,CAAA,GAAA,QAAA,EAAR2B,CAA4B,EAAA,UAAA,EAARA,CAE5B,CAAA,CAUO,SAASvC,UAAAA,CAAWY,CACvB,CAAA,CAAA,OAAOA,CAAiBuB,YAAAA,QAC5B,CAUO,SAASM,QAAS7B,CAAAA,CAAAA,CAAAA,CACrB,OAAQ8B,CAAAA,KAAAA,CAAM9B,CAClB,CAAA,CAUO,SAAS+B,SAAAA,CAAU/C,CACtB,CAAA,CAAA,OAAOA,CAAOgD,CAAAA,OAAAA,CAAQ,iBAAmB,CAAA,OAAA,CAAA,CAASA,OAAQ,CAAA,MAAA,CAAQ,KAAKC,WAC3E,EAAA;;EChRmF,IAE9DC,SAAS,CAAA,UAAA,CAQ1B,SAAAA,SAAYC,CAAAA,CAAAA,CAAAA,CAAYC,oBAAAF,CAAAA,SAAAA,CAAAA,CACpBrC,IAAKwC,CAAAA,YAAAA,CAAaC,OAAOC,MAAO,CAAA,CAC5BC,OAAQ,EAAC,CAAA,CACVL,IACP,CA4LC,OA1LDM,aAAAP,SAAA,CAAA,CAAA,CAAAQ,GAAA,CAAA,MAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CAKI,OAJK9C,IAAK+C,CAAAA,WAAAA,CAAYC,UAAsBtB,YAAAA,QAAAA,EACxCxC,MAAM,mCAGHc,CAAAA,CAAAA,IAAAA,CAAK+C,YAAYC,UAC5B,EAAA,CAAA,CAAA,CAEA,CAAAH,GAAA,CAAA,QAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAKiD,CAAAA,OAAAA,EAAW,EAC3B,CAAA,CAACC,IAED,SAAAA,GAAAA,CAAW/C,CACPH,CAAAA,CAAAA,IAAAA,CAAKiD,QAAU9C,EACnB,CAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,MAAA,CAAA1C,MAMA,SAAAgD,IAAAA,CAAKN,GAAc,IAAA,IAAAO,EAAApD,IAAAR,CAAAA,CAAAA,CAAAC,UAAAC,MAANC,CAAAA,CAAAA,KAAIC,KAAAJ,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAK,CAAAA,CAAAA,CAAAA,CAAA,EAAAA,CAAAL,CAAAA,CAAAA,CAAAK,IAAJF,CAAIE,CAAAA,CAAAA,CAAAJ,CAAAA,CAAAA,CAAAA,SAAAA,CAAAI,GAOb,OANGG,IAAAA,CAAK2C,OAAOE,CACX7C,CAAAA,EAAAA,IAAAA,CAAK2C,OAAOE,CAAKQ,CAAAA,CAAAA,OAAAA,EAAQ,SAAAC,CAAAA,CAAAA,CACrBA,EAAMvD,KAAMqD,CAAAA,CAAAA,CAAMzD,GACtB,CAGGK,EAAAA,CAAAA,IACX,GAEA,CAAA6C,GAAAA,CAAA,KAAA1C,KASA,CAAA,SAAAoD,GAAGV,CAAKvD,CAAAA,CAAAA,CAAAA,CAOJ,OANIU,IAAK2C,CAAAA,MAAAA,CAAOE,KACZ7C,IAAK2C,CAAAA,MAAAA,CAAOE,CAAO,CAAA,CAAA,EAAA,CAAA,CAGvB7C,KAAK2C,MAAOE,CAAAA,CAAAA,CAAAA,CAAKW,KAAKlE,CAEfU,CAAAA,CAAAA,IACX,GAEA,CAAA6C,GAAAA,CAAA,MAAA1C,KAUA,CAAA,SAAAsD,IAAIZ,CAAKvD,CAAAA,CAAAA,CAAAA,CAUL,OATGU,IAAK2C,CAAAA,MAAAA,CAAOE,IAAQvD,CACnBU,CAAAA,IAAAA,CAAK2C,MAAOE,CAAAA,CAAAA,CAAAA,CAAO7C,KAAK2C,MAAOE,CAAAA,CAAAA,CAAAA,CAAKa,QAAO,SAAAJ,CAAAA,CAAAA,CACvC,OAAOA,CAAUhE,GAAAA,CACrB,IAGAU,IAAK2C,CAAAA,MAAAA,CAAOE,GAAO,EAGhB7C,CAAAA,IACX,GAEA,CAAA6C,GAAAA,CAAA,OAAA1C,KAOA,CAAA,SAAAwD,IAAKd,CAAAA,CAAAA,CAAKvD,GAAI,IAAAsE,CAAAA,CAAA5D,KAGV,OAFAV,CAAAA,CAAKuB,MAAMvB,CAAI,EAAA,UAAA,CAAA,OAAMsE,CAAAA,CAAKH,IAAIZ,CAAKvD,CAAAA,CAAAA,CAAG,IAE/BU,IAAKuD,CAAAA,EAAAA,CAAGV,EAAKvD,CAAI,CAAA,CAAA,CAAA,CAC5B,CAEA,CAAA,CAAA,CAAAuD,IAAA,cAAA1C,CAAAA,KAAAA,CAMA,SAAA0D,YAAahB,CAAAA,CAAAA,CAAAA,CACT,OAAO7C,IAAK8D,CAAAA,cAAAA,CAAejB,GAAO7C,IAAK6C,CAAAA,CAAAA,CAAAA,CAAO,IAClD,CAEA,CAAA,CAAA,CAAAA,IAAA,eAAA1C,CAAAA,KAAAA,CAKA,SAAA4D,aAAgB,EAAA,CAAA,IAAAC,CAAAhE,CAAAA,IAAAA,CACNsC,EAAa,EAAC,CAMpB,OAJAG,MAAOwB,CAAAA,mBAAAA,CAAoBjE,MAAMqD,OAAQ,EAAA,SAAAR,GACrCP,CAAWO,CAAAA,CAAAA,CAAAA,CAAOmB,EAAKH,YAAahB,CAAAA,CAAAA,EACxC,IAEOP,CACX,CAAA,CAAA,CAEA,CAAAO,GAAA,CAAA,qBAAA,CAAA1C,KAMA,CAAA,SAAA+D,sBAAsB,IAAAC,CAAAA,CAAAnE,KAClB,OAAOyC,MAAAA,CAAO2B,KAAKpE,IAAK+D,CAAAA,aAAAA,EAAAA,CAAAA,CACnBL,QAAO,SAAAb,CAAAA,CAAAA,CACJ,QAAQA,CAAIwB,CAAAA,KAAAA,CAAM,MACtB,CACClD,EAAAA,CAAAA,MAAAA,EAAO,SAACmD,CAAKzB,CAAAA,CAAAA,CAAAA,CAEV,OADAyB,CAAAA,CAAIzB,GAAOsB,CAAKN,CAAAA,YAAAA,CAAahB,GACtByB,CACX,CAAA,EAAG,EACX,CAAA,CAAA,CAAA,CAEA,CAAAzB,GAAA,CAAA,cAAA,CAAA1C,MAOA,SAAAqC,YAAAA,CAAaK,EAAK1C,CACX0B,CAAAA,CAAAA,QAAAA,CAASgB,GACR7C,IAAKuE,CAAAA,aAAAA,CAAc1B,CAGnB7C,CAAAA,CAAAA,IAAAA,CAAK6C,GAAO1C,EAEpB,CAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,eAAA,CAAA1C,MAMA,SAAAoE,aAAAA,CAAcC,GACV,IAAI,IAAMC,KAAKD,CACXxE,CAAAA,IAAAA,CAAKwC,aAAaiC,CAAGD,CAAAA,CAAAA,CAAOC,IAEpC,CAEA,CAAA,CAAA,CAAA5B,GAAA,CAAA,UAAA,CAAA1C,MAMA,SAAAd,UAAAA,CAASC,GACL,OAAOD,QAAAA,CAASS,KAAKE,IAAMV,CAAAA,CAAAA,CAC/B,IAEA,CAAA,CAAAuD,IAAA,MAAA1C,CAAAA,KAAAA,CAOA,SAAAuE,IAAqB,EAAA,CAAA,IAAA,IAAAC,CAAAlF,CAAAA,SAAAA,CAAAC,MAANC,CAAAA,CAAAA,CAAIC,IAAAA,KAAA+E,CAAAA,CAAAA,CAAAA,CAAAC,EAAA,CAAAA,CAAAA,CAAAA,CAAAD,EAAAC,CAAJjF,EAAAA,CAAAA,CAAAA,CAAIiF,GAAAnF,SAAAmF,CAAAA,CAAAA,CAAAA,CACf,OAAAC,UAAW7E,CAAAA,IAAAA,CAAQL,EACvB,CAAC0C,CAAAA,CAAAA,CAAAA,CAAAA,SAAA,CAxMyB,EAATA;;ECeN,SAASyC,QAAS3E,CAAAA,CAAAA,CAAO4E,GAyBpC,OAxBAA,CAAAA,CAAUtC,MAAOC,CAAAA,MAAAA,CAAO,CACpBsC,aAAe,CAAA,CAAA,CACfC,oBAAoB,CACrBF,CAAAA,CAAAA,CAAAA,CAAAA,CASH,SAASG,MAAOC,CAAAA,CAAAA,CAAKC,CACjB,CAAA,CAAA,IAAM1F,EAAS4B,WAAY6D,CAAAA,CAAAA,CAAAA,CAAKzF,OAEhC,GAAGA,CAAAA,CAAS0F,EACR,IAAI,IAAIX,CAAI,CAAA,CAAA,CAAGA,EAAIW,CAAM1F,CAAAA,CAAAA,CAAQ+E,IAC7BU,CAAI,CAAA,CAAA,CAAA,CAAGE,QAAQ,GAIvB,CAAA,CAAA,OAAOF,CACX,CAEOD,CAAO7D,OAAQ,CAAA,CAAClB,IAAQe,GAAI,EAAA,SAAAoE,GAC/B,OAAOjE,OAAAA,CAAQC,WAAY,CAAA,CAACgE,IAASpE,GAAI,EAAA,SAAAoE,GACrC,OArBR,SAASC,QAAQD,CAIb,CAAA,CAAA,OAAA,CAH0BP,CAAQE,CAAAA,kBAAAA,EACS,IAAvCK,CAAO7E,CAAAA,QAAAA,EAAAA,CAAW+E,MAAM,EAAI9F,CAAAA,CAAAA,MAAAA,CAEJ,IAAM,EAAIO,EAAAA,MAAAA,CAAOqF,EACjD,CAgBeC,CAAQD,GAAQE,KAAM,CAAA,EAAA,CACjC,IACJ,CAAIT,EAAAA,CAAAA,CAAAA,CAAQC,eAAiB,CACjC,CAAA;;ECrCA,IAAMS,MAAS,CAAA,CAAC,CAEZL,GAAK,CAAA,EAAA,CACLM,GAAK,CAAA,EAAA,CAAA,CACP,CAEEN,GAAAA,CAAK,EACLM,CAAAA,GAAAA,CAAK,IACP,CAEEN,GAAAA,CAAK,EACLM,CAAAA,GAAAA,CAAK,GAcT,CAAA,CAAA,CAAA,SAASC,MAAOxG,CAAAA,CAAAA,CAAQ2C,GACpB,OACS,QAAA,GADFA,CAEQ8D,CAAAA,UAAAA,CAAWzG,CAGnBA,CAAAA,CAAAA,CACX,CAcA,SAAS0G,UAAUC,CACf,CAAA,CAAA,IAAI,IAAMrB,CAAAA,IAAKgB,MAAQ,CAAA,CACnB,IAAMM,CAAAA,CAAOD,EAAKrF,QAAWuF,EAAAA,CAAAA,UAAAA,CAAW,CAExC,CAAA,CAAA,GAAGP,MAAOhB,CAAAA,CAAAA,CAAAA,CAAGW,GAAOW,EAAAA,CAAAA,EAAQN,OAAOhB,CAAGiB,CAAAA,CAAAA,GAAAA,EAAOK,CACzC,CAAA,OAAON,MAAOhB,CAAAA,CAAAA,CAEtB,CAEA,OAAO,IACX,CAaA,SAASwB,oBAAqBH,CAAAA,CAAAA,CAAMxG,CAChC,CAAA,CAAA,OAAO4G,MAAOC,CAAAA,YAAAA,CACV7G,EAAGuG,SAAUC,CAAAA,CAAAA,CAAAA,CAAOA,CAAKE,CAAAA,UAAAA,CAAW,CAE5C,CAAA,CAAA,CAAA,CAYO,SAASI,IAAAA,CAAKjG,GASjB,OAAOwF,MAAAA,CARYxF,CACdM,CAAAA,QAAAA,EAAAA,CACA+E,KAAM,CAAA,EAAA,CAAA,CACNtE,GAAI,EAAA,SAAA4E,GAAI,OAAIG,oBAAAA,CAAqBH,CAAM,EAAA,SAACO,CAAON,CAAAA,CAAAA,CAAAA,CAC5C,OAAQM,CAAAA,CAAAA,EAASN,EAAOM,CAAMX,CAAAA,GAAAA,CAAMK,CAAO,CAAA,CAAA,CAAIM,CAAMjB,CAAAA,GACzD,CAAE,EAAA,CAAA,EAAA,CACDkB,KAAK,EAEavE,CAAAA,CAAAA,OAAAA,CAAS5B,CACpC,CAAA,CAAA,CAYO,SAASoG,IAAAA,CAAKpG,CASjB,CAAA,CAAA,OAAOwF,OARYxF,CACdM,CAAAA,QAAAA,EAAAA,CACA+E,KAAM,CAAA,EAAA,CAAA,CACNtE,GAAI,EAAA,SAAA4E,CAAI,CAAA,CAAA,OAAIG,qBAAqBH,CAAM,EAAA,SAACO,CAAON,CAAAA,CAAAA,CAAAA,CAC5C,OAAQM,CAAAA,CAAAA,EAASN,CAAOM,CAAAA,CAAAA,CAAMjB,IAAMW,CAAO,CAAA,CAAA,CAAIM,CAAMX,CAAAA,GACzD,CAAE,EAAA,CAAA,EAAA,CACDY,IAAK,CAAA,EAAA,CAAA,CAEavE,QAAS5B,CACpC,CAAA,CAAA;;EC5HkE,IAE7CqG,mBAASC,CAAAC,CAAAA,CAAAA,SAAAA,CAAAF,UAASnE,SAAT,CAAA,CAAA,IAAAsE,EAAAC,YAAAJ,CAAAA,SAAAA,CAAAA,CAY1B,SAAAA,SAAYrG,CAAAA,CAAAA,CAAOmC,GAAY,IAAAc,CAAAA,CAS1B,OAT0Bb,qBAAAiE,WAC3BpD,CAAAuD,CAAAA,CAAAA,CAAA7G,SAAM2C,CAAAA,MAAAA,CAAOC,MAAO,CAAA,CAChBiD,MAAQ,CAAA,SAAAA,OAAAxF,CAAK,CAAA,CAAA,OAAIA,CAAK,CACtB8E,CAAAA,kBAAAA,CAAAA,CAAoB,EACpBD,aAAe,CAAA,CAAA,CAAA,CAChB1C,IAECc,CAAKjD,CAAAA,KAAAA,GACLiD,EAAKjD,KAAQA,CAAAA,CAAAA,CAAAA,CAChBiD,CACL,CAyEC,OAvEDR,aAAA4D,SAAA,CAAA,CAAA,CAAA3D,GAAAA,CAAA,QAAAC,CAAAA,GAAAA,CAKA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAK6G,OAChB,CAAA,CAAC3D,IAED,SAAAA,GAAAA,CAAW/C,GACPH,IAAK6G,CAAAA,OAAAA,CAAU1G,EACfH,IAAKgF,CAAAA,aAAAA,CAAgB1E,KAAKoF,GAAI1F,CAAAA,IAAAA,CAAKgF,cAAetF,MAAOS,CAAAA,CAAAA,CAAAA,EAC7D,CAEA,CAAA,CAAA,CAAA0C,GAAA,CAAA,OAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAK8G,CAAAA,MAChB,EAAC5D,GAED,CAAA,SAAAA,IAAU/C,CACNH,CAAAA,CAAAA,IAAAA,CAAK8G,OAAS3G,CACdH,CAAAA,IAAAA,CAAKkF,OAASJ,QAAS9E,CAAAA,IAAAA,CAAK2F,OAAOxF,CAAQ,CAAA,CAAA,CACvC6E,aAAehF,CAAAA,IAAAA,CAAKgF,aACpBC,CAAAA,kBAAAA,CAAoBjF,KAAKiF,kBAEjC,CAAA,EAAA,CAAA,CAAA,CAEA,CAAApC,GAAA,CAAA,OAAA,CAAA1C,eAAA4G,CAAAA,CAAAA,CAAA,SAAA9E,KAAA,EAAA,CAAA,OAAA8E,EAAAhH,KAAAC,CAAAA,IAAAA,CAAAP,UAAA,CAAA,OAAAwC,MAAAxB,QAAA,CAAA,UAAA,CAAA,OAAAsG,CAAAA,CAAAtG,QAAA,EAAA,CAAA,CAAAwB,KAAA,GAKA,WACI,OAAOA,KAAAA,CAAMjC,KAAKG,KACtB,CAAA,CAAA,EAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,UAAA,CAAA1C,MAKA,SAAA6B,UAAAA,EAAAA,CACI,OAAOA,QACX,EAAA,CAAA,CAAA,CAEA,CAAAa,GAAA,CAAA,OAAA,CAAA1C,KASA,CAAA,SAAA6G,KAAM7G,CAAAA,CAAAA,CAAOmC,GACT,OAAO,IAAItC,KAAK+C,WAAY5C,CAAAA,CAAAA,CAAOsC,OAAOC,MACtC1C,CAAAA,IAAAA,CAAKkE,mBAAuB5B,EAAAA,CAAAA,CAAAA,CAAAA,CAEpC,CAEA,CAAA,CAAA,CAAA,CAAA,CAAAO,GAAA,CAAA,YAAA,CAAA1C,MAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,WACX,CAAA,CAAA,CAAA,CAAA,CAACwD,SAAA,GA/FgBA;;ECcN,SAASS,QAAS9G,CAAAA,CAAAA,CAAAA,CACT,IAApB,IAAI+G,CAAU,CAAA,CAAA,CAAA,CAAM1H,CAAAC,CAAAA,SAAAA,CAAAC,OADmBC,MAAIC,KAAAJ,CAAAA,CAAAA,CAAAA,EAAAA,KAAAK,CAAAA,CAAAA,CAAAA,CAAA,EAAAA,CAAAL,CAAAA,CAAAA,CAAAK,CAAJF,EAAAA,CAAAA,CAAAA,CAAIE,CAAAJ,CAAAA,CAAAA,CAAAA,CAAAA,SAAAI,CAAAA,CAAAA,CAAAA,CAY3C,OATAwB,OAAQ1B,CAAAA,CAAAA,CAAAA,CAAM0D,OAAQ,EAAA,SAAA8D,CACbvG,CAAAA,CAAAA,CAAAA,MAAAA,CAAOT,CAAUS,CAAAA,EAAAA,MAAAA,CAAOuG,IACxBtF,QAASsF,CAAAA,CAAAA,CAAAA,EAAShH,CAAiBgH,YAAAA,CAAAA,EACnC5H,UAAW4H,CAAAA,CAAAA,CAAAA,EAAAA,CAAS1F,aAAc0F,CAAAA,CAAAA,CAAAA,EAAAA,CAAuB,IAAfA,CAAIhH,CAAAA,CAAAA,CAAAA,EAC9CyB,QAASuF,CAAAA,CAAAA,CAAAA,EAASpF,QAAO5B,CAAUgH,CAAAA,GAAAA,CAAAA,IACpCD,CAAU,CAAA,CAAA,CAAA,EAElB,IAEOA,CACX;;AC3Be,wBAAA,CACXE,UAAW,iCACXC,CAAAA,KAAAA,CAAO,sCACPC,CAAAA,KAAAA,CAAO,wCACPC,QAAU,CAAA,iCAAA,CACVC,IAAM,CAAA,0CAAA,CACNC,KAAM,+CACNC,CAAAA,OAAAA,CAAS,mDACTC,CAAAA,SAAAA,CAAW,qDACXC,KAAO,CAAA,0DAAA,CAAA;;ECVgG,IAEtFC,IAAAA,UAAIpB,CAAAC,CAAAA,CAAAA,SAAAA,CAAAmB,KAASxF,SAAT,CAAA,CAAA,IAAAsE,CAAAC,CAAAA,YAAAA,CAAAiB,MAYrB,SAAAA,IAAAA,CAAY1H,EAAOmC,CAAY,CAAA,CAAA,IAAAc,EAoB1B,OApB0Bb,eAAAA,KAAAsF,CAAAA,IAAAA,CAAAA,CACtB1H,aAAiBqG,SAAc3E,EAAAA,CAAAA,QAAAA,CAAS1B,KACzCmC,CAAanC,CAAAA,CAAAA,CACbA,OAAQ2H,CAGZ1E,CAAAA,CAAAA,CAAAA,CAAAA,CAAAuD,CAAA7G,CAAAA,IAAAA,CAAAE,OAEKuE,aAAc9B,CAAAA,MAAAA,CAAOC,OAAO,CAC7BqF,SAAAA,CAAAA,CAAW,EACXC,SAAW,CAAA,CAAA,CAAA,CACXC,aAAe,CAAA,GAAA,CAAA,CAChB7E,EAAK8E,iBAAqB5F,EAAAA,CAAAA,CAAAA,EAAc,EAExC1B,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOT,IAAUQ,WAAYR,CAAAA,CAAAA,CAAAA,IAC5BA,EAAQiD,CAAK+E,CAAAA,YAAAA,EAAAA,CAAAA,CAGdhI,IACCiD,CAAKjD,CAAAA,KAAAA,CAAQA,GAChBiD,CACL,CAqOC,OAnODR,YAAAiF,CAAAA,IAAAA,CAAA,CAAA,CAAAhF,IAAA,UAAAC,CAAAA,GAAAA,CAKA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAKoI,eAChB,EAAA,CAAA,CAAA,CAEA,CAAAvF,GAAAA,CAAA,QAAAC,GAKA,CAAA,SAAAA,MACI,OAAO9C,IAAAA,CAAK8G,MAChB,CAAC5D,CAAAA,GAAAA,CAED,SAAAA,GAAAA,CAAU/C,GACDA,CAAiBqG,YAAAA,SAAAA,GAClBrG,EAAQH,IAAKqI,CAAAA,eAAAA,CAAgBlI,IAGjCH,IAAK8G,CAAAA,MAAAA,CAAS3G,EAClB,CAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,QAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAKsI,CAAAA,OAChB,CAACpF,CAAAA,GAAAA,CAED,SAAAA,GAAW/C,CAAAA,CAAAA,CAAAA,CACPH,KAAKsI,OAAUnI,CAAAA,EACnB,GAEA,CAAA0C,GAAAA,CAAA,eAAAC,CAAAA,GAAAA,CAKA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAKuI,cAChB,CAAA,CAACrF,IAED,SAAAA,GAAAA,CAAkB/C,CACdH,CAAAA,CAAAA,IAAAA,CAAKuI,eAAiBpI,EAC1B,CAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,UAAA,CAAA1C,MASA,SAAAqI,QAAAA,CAASC,EAAUnJ,CAcf,CAAA,CAAA,OAbGU,KAAKgI,SACJhI,CAAAA,IAAAA,CAAK0I,UAAUD,CAGfzI,CAAAA,CAAAA,IAAAA,CAAK2I,UAAUF,CAGnBpJ,CAAAA,CAAAA,QAAAA,CAASS,IAAKE,CAAAA,IAAAA,CAAMV,GAEjBU,IAAK4I,CAAAA,UAAAA,CAAWH,IACfA,CAASI,CAAAA,IAAAA,EAAAA,CAGN7I,KAAKmD,IAAK,CAAA,UAAA,CACrB,CAEA,CAAA,CAAA,CAAAN,IAAA,YAAA1C,CAAAA,KAAAA,CAMA,SAAAyI,UAAWH,CAAAA,CAAAA,CAAAA,CACP,QAAQ9H,WAAYX,CAAAA,IAAAA,CAAK8I,MAAU9I,CAAAA,EAAAA,IAAAA,CAAK8I,SAAWL,CAAStI,CAAAA,KAAAA,CAAMA,KACtE,CAEA,CAAA,CAAA,CAAA0C,IAAA,QAAA1C,CAAAA,KAAAA,CAOA,SAAAwF,MAAAA,CAAO8C,EAAUtI,CACb,CAAA,CAAA,OAAOA,CACX,CAEA,CAAA,CAAA,CAAA0C,IAAA,cAAA1C,CAAAA,KAAAA,CAKA,SAAAgI,YAAAA,EAAAA,IAIA,CAAAtF,GAAAA,CAAA,oBAAA1C,KAKA,CAAA,SAAA+H,qBAIA,CAAA,CAAA,CAAArF,GAAA,CAAA,iBAAA,CAAA1C,MAKA,SAAAiI,eAAAA,EAAAA,IAIA,CAAAvF,GAAAA,CAAA,YAAA1C,KAQA,CAAA,SAAAwI,SAAUF,CAAAA,CAAAA,CAAUM,IAIpB,CAAA,CAAA,CAAAlG,IAAA,WAAA1C,CAAAA,KAAAA,CAQA,SAAAuI,SAAUD,CAAAA,CAAAA,CAAUM,IAIpB,CAAA,CAAA,CAAAlG,IAAA,SAAA1C,CAAAA,KAAAA,CAMA,SAAA6I,OAAQP,CAAAA,CAAAA,CAAAA,IAIR,CAAA5F,GAAAA,CAAA,SAAA1C,CAAAA,KAAAA,CAMA,SAAA8I,OAAQR,CAAAA,CAAAA,CAAAA,IAIR,CAAA5F,GAAAA,CAAA,QAAA1C,KAMA,CAAA,SAAA+I,KAAMT,CAAAA,CAAAA,CAAAA,IAIN,CAAA5F,GAAAA,CAAA,cAAA1C,KAMA,CAAA,SAAAgJ,YAAYV,CACR,CAAA,EAAA,CAAA,CAGJ,CAAA5F,GAAAA,CAAA,WAAA1C,KAMA,CAAA,SAAAiJ,SAASX,CACL,CAAA,EAAA,CAAA,CAGJ,CAAA5F,GAAA,CAAA,SAAA,CAAA1C,MAMA,SAAAkJ,OAAAA,CAAQZ,GACDzI,IAAK+H,CAAAA,SAAAA,EAAaU,EAASb,KAAM0B,CAAAA,SAAAA,EAChCC,OAAOC,qBAAsB,EAAA,UAAA,CAAA,OAAMf,CAAAA,CAASgB,MAAMhB,CAAS,CAAA,CAAA,GAEnE,GAEA,CAAA5F,GAAAA,CAAA,kBAAA1C,KAQA,CAAA,SAAAkI,eAAgBI,CAAAA,CAAAA,CAAUtI,GAAO,IAAAyD,CAAAA,CAAA5D,KAC7B,OAAOwG,SAAAA,CAAU9B,KACbnF,UAAWY,CAAAA,CAAAA,CAAAA,EAAAA,CAAWA,CAAMwB,CAAAA,IAAAA,CAAOxB,IAAUA,CAAO,CAAA,CAChD6E,cAAehF,IAAKgF,CAAAA,aAAAA,CACpBW,OAAQ,SAAAA,MAAAA,CAAAxF,GAAK,OAAIyD,CAAAA,CAAK+B,OAAO8C,CAAUtI,CAAAA,CAAAA,CAAM,GAGzD,CAAC0H,CAAAA,CAAAA,CAAAA,CAAAA,IAAA,GAtQgBA;;ECKd,IAAM6B,aAAa,CACtBC,KAAAA,CAAY,QACZC,MAAY,CAAA,MAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,QACZC,OAAY,CAAA,OAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAU,OACVC,MAAW,CAAA,OAAA,CACXC,KAAS,MACTC,CAAAA,KAAAA,CAAU,OACVC,CAAAA,OAAAA,CAAY,SACZC,OAAY,CAAA,QAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,YAAAA,CAAa,CACtBC,KAAY,CAAA,MAAA,CACZC,OAAY,QACZC,CAAAA,IAAAA,CAAY,MACZC,KAAY,CAAA,QAAA,CACZC,QAAY,QACZC,CAAAA,OAAAA,CAAY,WAQT,IAAMC,SAAAA,CAAU,CAAC,IAAM,CAAA,OAAA,CAAS,KAAM,OAAS,CAAA,OAAA,CAAA;;;;;;;;ECd/C,IAAMP,aAAa,CACzBC,KAAAA,CAAY,KACZC,MAAY,CAAA,SAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,WACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,QACZC,MAAY,CAAA,QAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,SACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,QACZC,MAAY,CAAA,QAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,SAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,OACZC,MAAY,CAAA,OAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,MACZC,MAAY,CAAA,KAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,MACZC,CAAAA,OAAAA,CAAY,QACZC,OAAY,CAAA,OAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,SACZC,MAAY,CAAA,WAAA,CACZC,KAAY,QACZC,CAAAA,KAAAA,CAAY,QACZC,CAAAA,OAAAA,CAAY,YACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAY,MACZC,MAAY,CAAA,MAAA,CACZC,KAAY,OACZC,CAAAA,KAAAA,CAAY,QACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,OACZC,MAAY,CAAA,MAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,MACZC,CAAAA,OAAAA,CAAY,OACZC,OAAY,CAAA,OAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,KACTC,MAAY,CAAA,OAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,KACZC,CAAAA,OAAAA,CAAY,OACZC,OAAY,CAAA,WAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,WAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,OACZC,MAAY,CAAA,MAAA,CACZC,KAAY,QACZC,CAAAA,KAAAA,CAAY,KACZC,CAAAA,OAAAA,CAAY,SACZC,OAAY,CAAA,SAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,IACZC,MAAY,CAAA,GAAA,CACZC,KAAY,GACZC,CAAAA,KAAAA,CAAY,GACZC,CAAAA,OAAAA,CAAY,IACZC,OAAY,CAAA,GAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,UAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,IACZC,MAAY,CAAA,GAAA,CACZC,KAAY,GACZC,CAAAA,KAAAA,CAAY,GACZC,CAAAA,OAAAA,CAAY,IACZC,OAAY,CAAA,GAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAY,OACZC,MAAY,CAAA,QAAA,CACZC,KAAY,QACZC,CAAAA,KAAAA,CAAY,SACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAY,QACZC,MAAY,CAAA,SAAA,CACZC,KAAY,OACZC,CAAAA,KAAAA,CAAY,MACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,OAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,KACZC,MAAY,CAAA,SAAA,CACZC,KAAY,OACZC,CAAAA,KAAAA,CAAY,QACZC,OAAY,CAAA,UAAA,CACZC,QAAY,UAQN,CAAA,CAAA,IAAMC,UAAU,CAAC,IAAA,CAAM,KAAM,OAAS,CAAA,WAAA,CAAA;;;;;;;;ECdtC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,MACZC,MAAY,CAAA,UAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,SACZC,CAAAA,OAAAA,CAAY,SACZC,OAAY,CAAA,SAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,OACZC,MAAY,CAAA,OAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,YAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAS,MACTC,MAAU,CAAA,MAAA,CACVC,KAAQ,MACRC,CAAAA,KAAAA,CAAS,KACTC,CAAAA,OAAAA,CAAW,SACXC,OAAW,CAAA,UAAA,CAAA,CAQL,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAY,MACZC,MAAY,CAAA,SAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,OACZC,CAAAA,OAAAA,CAAY,QACZC,OAAY,CAAA,QAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,OACZC,MAAY,CAAA,SAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,QACZC,CAAAA,OAAAA,CAAY,SACZC,OAAY,CAAA,SAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,QAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,KACZC,MAAY,CAAA,SAAA,CACZC,KAAY,OACZC,CAAAA,KAAAA,CAAY,QACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,UAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,KACZC,MAAY,CAAA,OAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,SACZC,CAAAA,OAAAA,CAAY,OACZC,OAAY,CAAA,QAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,MAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,MACZC,MAAY,CAAA,IAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,MACZC,CAAAA,OAAAA,CAAY,SACZC,OAAY,CAAA,QAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACtBC,KAAAA,CAAY,OACZC,MAAY,CAAA,QAAA,CACZC,KAAY,KACZC,CAAAA,KAAAA,CAAY,QACZC,CAAAA,OAAAA,CAAY,UACZC,OAAY,CAAA,SAAA,CAAA,CAQT,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,MACZC,MAAY,CAAA,OAAA,CACZC,KAAY,MACZC,CAAAA,KAAAA,CAAY,KACZC,CAAAA,OAAAA,CAAY,OACZC,OAAY,CAAA,MAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,YAAA,CAAA;;;;;;;;ECdhC,IAAMP,aAAa,CACzBC,KAAAA,CAAY,IACZC,MAAY,CAAA,GAAA,CACZC,KAAY,GACZC,CAAAA,KAAAA,CAAY,GACZC,CAAAA,OAAAA,CAAY,IACZC,OAAY,CAAA,GAAA,CAAA,CAQN,IAAMC,SAAU,CAAA,CAAC,KAAM,OAAS,CAAA,SAAA,CAAA;;;;;;;;ECdhC,IAAMP,WAAa,CACzBC,KAAAA,CAAY,GACZC,CAAAA,MAAAA,CAAY,IACZC,IAAY,CAAA,GAAA,CACZC,KAAY,CAAA,GAAA,CACZC,QAAY,GACZC,CAAAA,OAAAA,CAAY,GAQN,CAAA,CAAA,IAAMC,QAAU,CAAC,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECXT,SAAS1C,QAAS5F,CAAAA,CAAAA,CAAAA,CAC7B,OAAOA,CAAOuI,CAAAA,SAAAA,CAAUvI,CAAKS,CAAAA,WAAAA,EAAAA,CAAAA,EAAkBK,MAAO+B,CAAAA,MAAAA,CAAO0F,WAAWC,IAAK,EAAA,SAAAhK,GACzE,OAAwC,CAAA,CAAA,GAAjCA,EAAM8J,OAAQG,CAAAA,OAAAA,CAAQzI,CACjC,CAAA,CAAA,EAAA,CAAK,IACT;;ECDe,SAAS0I,SAAUlL,CAAAA,CAAAA,CAAQmL,GACtC,IAAMC,CAAAA,CAAO3I,SAAS0I,CAAQ/C,CAAAA,CAAAA,QAAAA,CAAS+C,GAAQA,CAE/C,CAAA,OAAA,CADmBC,EAAKb,UAAca,EAAAA,CAAAA,EACpBpL,IAAWA,CACjC;;ECAO,SAASqL,KAAKC,CAASC,CAAAA,CAAAA,CAAAA,CAC7B,OAAGA,CAASC,CAAAA,UAAAA,EACXD,EAASC,UAAWC,CAAAA,YAAAA,CAAaH,EAASC,CAEnCD,CAAAA,CAAAA,CAAAA,EAGDC,CACR,CAYO,SAASnG,cAAcsG,CAAIvI,CAAAA,CAAAA,CAAAA,CACjC,GAAGT,QAASS,CAAAA,CAAAA,CAAAA,CACX,IAAI,IAAMmC,CAAAA,IAAKnC,EACduI,CAAGrI,CAAAA,YAAAA,CAAaiC,EAAGnC,CAAWmC,CAAAA,CAAAA,CAAAA,CAAAA,CAIhC,OAAOoG,CACR,CAYO,SAASC,cAAeD,CAAAA,CAAAA,CAAIE,GASlC,OARGxJ,OAAAA,CAAQwJ,IACVA,CAASrH,CAAAA,MAAAA,CAAOhD,MAAM2C,OAAQ,EAAA,SAAA2H,GAC1BA,CAAiBC,YAAAA,WAAAA,EACnBJ,EAAGK,WAAYF,CAAAA,CAAAA,EAEjB,IAGMH,CACR,CAaO,SAASM,aAAcN,CAAAA,CAAAA,CAAIE,EAAUzI,CAc3C,CAAA,CAAA,OAbKuI,aAAcI,WAClBJ,GAAAA,CAAAA,CAAKO,SAASD,aAAcN,CAAAA,CAAAA,CAAAA,CAAAA,CAG7BtG,cAAcsG,CAAIhJ,CAAAA,QAAAA,CAASkJ,GAAYA,CAAWzI,CAAAA,CAAAA,CAAAA,CAE9CT,SAASkJ,CAAcxJ,CAAAA,EAAAA,OAAAA,CAAQwJ,GAIlCD,cAAeD,CAAAA,CAAAA,CAAIE,GAHnBF,CAAGQ,CAAAA,SAAAA,CAAYN,EAMTF,CACR;;EC5F0D,IAErCS,YAAAA,UAAY7E,CAAAA,CAAAA,CAAAC,UAAA4E,YAASjJ,CAAAA,SAAAA,CAAAA,CAAT,IAAAsE,CAAAA,CAAAC,aAAA0E,YAS7B,CAAA,CAAA,SAAAA,YAAYhJ,CAAAA,CAAAA,CAAAA,CAAY,IAAAc,CAAAA,CAa1B,GAb0Bb,eAAAA,MAAA+I,YACpBlI,CAAAA,CAAAA,CAAAA,CAAAA,CAAAuD,CAAA7G,CAAAA,IAAAA,MAAM2C,MAAOC,CAAAA,MAAAA,CAAO,CAChB6I,MAAAA,CAAQ,MACTjJ,CAEMgF,CAAAA,CAAAA,EAAAA,KAAAA,EACLpI,SAAKe,OAAImD,CAAKzB,CAAAA,IAAAA,CAAsC,iCAGpDyB,CAAAA,CAAAA,CAAAA,CAAAA,CAAKmE,UACLrI,SAAKe,MAAImD,CAAAA,CAAAA,CAAKzB,KAAyC,oCAG7DyB,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAKkE,KAAMlE,CAAAA,CAAAA,CAAKzB,MACV,MAAM,IAAIvC,KAAKa,CAAAA,EAAAA,CAAAA,MACRmD,CAAAA,CAAAA,CAAKzB,IACX,CAAA,iDAAA,CAAA,CAAA,CACJ,OAAAyB,CACL,CA+IC,OA7IDR,YAAAA,CAAA0I,aAAA,CAAA,CAAAzI,GAAA,CAAA,WAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAOZ,SAAAA,CAAUlC,KAAK+C,WAAYC,CAAAA,UAAAA,EAAAA,CACtC,CAEA,CAAA,CAAA,CAAAH,IAAA,IAAAC,CAAAA,GAAAA,CAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAKwL,CAAAA,GAChB,CAACtI,CAAAA,GAAAA,CAED,SAAAA,GAAO/C,CAAAA,CAAAA,CAAAA,CACC8G,QAAS9G,CAAAA,CAAAA,CAAO,IAAM8K,CAAAA,WAAAA,CAAAA,EACtB/L,KAAMuM,CAAAA,eAAAA,CAAgB/D,SAG1B1H,IAAKwL,CAAAA,GAAAA,CAAMrL,EACf,CAAA,CAAA,CAEA,CAAA0C,GAAA,CAAA,QAAA,CAAAC,GAMA,CAAA,SAAAA,MACI,OAAO9C,IAAAA,CAAK0L,OAChB,CAAA,CAACxI,IAED,SAAAA,GAAAA,CAAWqI,CACPvL,CAAAA,CAAAA,IAAAA,CAAK0L,QAAUH,EACnB,CAAA,CAAA,CAEA,CAAA1I,GAAAA,CAAA,QAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAK2L,MAChB,CAAA,CAACzI,GAED,CAAA,SAAAA,GAAU/C,CAAAA,CAAAA,CAAAA,CACF8G,QAAS9G,CAAAA,CAAAA,CAAO,WAChBjB,KAAMuM,CAAAA,eAAAA,CAAgBtL,KAG1BH,CAAAA,CAAAA,IAAAA,CAAK2L,OAASxL,EAClB,CAAA,CAAA,CAEA,CAAA0C,GAAAA,CAAA,WAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAK4L,SAChB,CAAA,CAAC1I,GAED,CAAA,SAAAA,IAAa/C,CACNyB,CAAAA,CAAAA,QAAAA,CAASzB,CACRA,CAAAA,GAAAA,CAAAA,CAAQoH,SAASpH,CAGjB8G,CAAAA,CAAAA,CAAAA,QAAAA,CAAS9G,CAAO,CAAA,QAAA,CAAA,EAChBjB,MAAMuM,eAAgBlE,CAAAA,QAAAA,CAAAA,CAG1BvH,IAAK4L,CAAAA,SAAAA,CAAYzL,EACrB,CAAA,CAAA,CAEA,CAAA0C,GAAAA,CAAA,YAAA1C,KAOA,CAAA,SAAAkK,WAAUlL,CAAAA,CAAAA,CAAAA,CACN,OAAOkL,SAAUlL,CAAAA,CAAAA,CAAQa,IAAKuH,CAAAA,QAAAA,CAClC,GAEA,CAAA1E,GAAAA,CAAA,GAAA1C,CAAAA,KAAAA,CAKA,SAAA0L,CAAE1M,CAAAA,CAAAA,CAAAA,CACE,OAAOa,IAAAA,CAAKqK,UAAUlL,CAC1B,CAAA,CAAA,CAAA,CAEA,CAAA0D,GAAAA,CAAA,SAAA1C,KAKH,CAAA,SAAA2L,MACO,EAAA,CAAA,IAAMjB,EAAKM,aAAc,CAAA,KAAA,CAAO,CAC5BY,KAAAA,CAA0B,YAAnB/L,GAAAA,IAAAA,CAAKoH,SAA6BpH,CAAAA,IAAAA,CAAKoH,UAAY,aAAgBpH,CAAAA,IAAAA,CAAKoH,SAYnF,CAAA,CAAA,CAAA,OATApH,KAAKsH,KAAMtH,CAAAA,IAAAA,CAAK2B,IAAMkJ,CAAAA,CAAAA,CAAAA,CAAI7K,MAEtBA,IAAK6K,CAAAA,EAAAA,CAGD7K,IAAK6K,CAAAA,EAAAA,CAAGQ,YAAcR,CAAGQ,CAAAA,SAAAA,GAC7BrL,IAAK6K,CAAAA,EAAAA,CAAKL,KAAKK,CAAI7K,CAAAA,IAAAA,CAAK6K,EAHxB7K,CAAAA,CAAAA,CAAAA,IAAAA,CAAK6K,GAAKA,CAMP7K,CAAAA,IAAAA,CAAK6K,EACnB,CAAA,CAAA,CAEG,CAAAhI,GAAA,CAAA,OAAA,CAAA1C,KASA,CAAA,SAAA6L,KAAMT,CAAAA,CAAAA,CAAAA,CAAwB,IAAhBzK,CAAAA,CAAMrB,UAAAC,MAAA,CAAA,CAAA,EAAA,KAAAoI,CAAArI,GAAAA,SAAAA,CAAA,IAAAA,SAAA,CAAA,CAAA,CAAA,CAWhB,OAVAO,IAAAA,CAAK8L,SACL9L,IAAKuL,CAAAA,MAAAA,CAASA,CAEVzK,CAAAA,CAAAA,CAIAd,KAAKuL,MAAOU,CAAAA,YAAAA,CAAajM,IAAK6K,CAAAA,EAAAA,CAAI/J,GAHlCd,IAAKuL,CAAAA,MAAAA,CAAOL,WAAYlL,CAAAA,IAAAA,CAAK6K,IAM1B7K,IAAK6K,CAAAA,EAChB,CAACS,CAAAA,CAAAA,CAAAA,CAAAA,YAAA,GA1KgBA;;ECPrB,IAWqBY,mBAAOC,CAAAA,CAAAA,CAAAzF,UAAAwF,OAASZ,CAAAA,YAAAA,CAAAA,CAAT,IAAA3E,CAAAC,CAAAA,YAAAA,CAAAsF,OAAA,CAAA,CAAA,SAAAA,OAAA,EAAA,CAAA,OAAA3J,oBAAA2J,CAAAA,OAAAA,CAAAA,CAAAvF,EAAA5G,KAAAC,CAAAA,IAAAA,CAAAP,UAAA,CASvB,OATuBmD,YAAAsJ,CAAAA,OAAAA,CAAA,IAAA,CAAA,CAAA,CAAArJ,GAAA,CAAA,YAAA,CAAA1C,MAOxB,SAAA6C,UAAAA,EAAAA,CACI,OAAO,SACX,CAAA,CAAA,CAAA,CAAA,CAACkJ,OAAA,GATgBA;;ECZ2B,IAE3BE,oBAAQD,CAAAzF,CAAAA,CAAAA,SAAAA,CAAA0F,QAASd,CAAAA,YAAAA,CAAAA,CAAT,IAAA3E,CAAAA,CAAAC,YAAAwF,CAAAA,QAAAA,CAAAA,CAUzB,SAAAA,QAAAA,CAAYjM,CAAOmC,CAAAA,CAAAA,CAAAA,CAAY,OAAAC,eAAAA,KAAA6J,CAAAA,QAAAA,CAAAA,CAAAzF,CAAA7G,CAAAA,IAAAA,KACrB2C,CAAAA,MAAAA,CAAOC,MAAO,CAAA,CAChBvC,KAAOA,CAAAA,CAAAA,CAAAA,CACR0B,QAAS1B,CAAAA,CAAAA,CAAAA,CAASA,CAAQ,CAAA,IAAA,CAAMmC,CACvC,CAAA,CAAA,CASC,OAPDM,YAAAA,CAAAwJ,QAAA,CAAA,IAAA,CAAA,CAAA,CAAAvJ,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,UACI,EAAA,CAAA,OAAO,UACX,CAAA,CAAA,CAAA,CAAA,CAACoJ,QAAA,GAvBgBA;;ECC6B,IAE7BC,gBAAIF,CAAAzF,CAAAA,CAAAA,SAAAA,CAAA2F,IAASf,CAAAA,YAAAA,CAAAA,CAAT,IAAA3E,CAAAA,CAAAC,YAAAyF,CAAAA,IAAAA,CAAAA,CAcrB,SAAAA,IAAYlM,CAAAA,CAAAA,CAAOmC,CAAY,CAAA,CAAA,OAAAC,qBAAA8J,IAAA1F,CAAAA,CAAAA,CAAAA,CAAA7G,UACrB2C,MAAOC,CAAAA,MAAAA,CAAO,CAChBvC,KAAAA,CAAOA,CACPkH,CAAAA,KAAAA,CAAO,IACRxF,QAAS1B,CAAAA,CAAAA,CAAAA,CAASA,CAAQ,CAAA,IAAA,CAAMmC,CACvC,CAAA,CAAA,CAoDC,OAlDDM,YAAAA,CAAAyJ,KAAA,CAAA,CAAAxJ,GAAA,CAAA,OAAA,CAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAO9C,KAAK8G,MAChB,CAAA,CAAC5D,GACD,CAAA,SAAAA,GAAU/C,CAAAA,CAAAA,CAAAA,CACNH,IAAK8G,CAAAA,MAAAA,CAAS3G,EAClB,CAAA,CAAA,CAEA,CAAA0C,GAAAA,CAAA,OAAAC,CAAAA,GAAAA,CAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAKsM,CAAAA,MAChB,CAACpJ,CAAAA,GAAAA,CAED,SAAAA,GAAAA,CAAU/C,CACNH,CAAAA,CAAAA,IAAAA,CAAKsM,OAASnM,EAClB,CAAA,CAAA,CAEA,CAAA0C,GAAAA,CAAA,gBAAA1C,CAAAA,KAAAA,CAOA,SAAAoM,cAAAA,CAAepM,EAAOmC,CAClB,CAAA,CAAA,IAAMkK,CAAO,CAAA,IAAIJ,UAASjM,CAAAA,CAAAA,CAAOsC,MAAOC,CAAAA,MAAAA,CAAO,CAC3C4E,KAAAA,CAAOtH,IAAKsH,CAAAA,KAAAA,CACZC,QAAUvH,CAAAA,IAAAA,CAAKuH,QAChBjF,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAIH,OAFAtC,IAAKsM,CAAAA,MAAAA,CAAO9I,IAAKgJ,CAAAA,CAAAA,CAAAA,CAEVA,CACX,CAAA,CAAA,CAAA,CAEA,CAAA,CAAA3J,IAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,MACX,CAACqJ,CAAAA,CAAAA,CAAAA,CAAAA,IAAA,GAvEgBA;;ECLoC,IAEpCI,iBAAKN,CAAAzF,CAAAA,CAAAA,SAAAA,CAAA+F,KAASnB,CAAAA,YAAAA,CAAAA,CAAT,IAAA3E,CAAAA,CAAAC,YAAA6F,CAAAA,KAAAA,CAAAA,CAYtB,SAAAA,KAAAA,CAAYpF,CAAO/E,CAAAA,CAAAA,CAAAA,CAAY,OAAAC,eAAAA,MAAAkK,KAAA9F,CAAAA,CAAAA,CAAAA,CAAA7G,UACrB2C,MAAOC,CAAAA,MAAAA,CAAO,CAChB2E,KAAAA,CAAO9F,OAAQ8F,CAAAA,CAAAA,CAAAA,CAASA,CAAQ,CAAA,EAAA,CAAA,CAChCxF,QAASwF,CAAAA,CAAAA,CAAAA,CAASA,CAAQ,CAAA,IAAA,CAAO/E,GACzC,CASC,OAPDM,YAAA6J,CAAAA,KAAAA,CAAA,IAAA,CAAA,CAAA,CAAA5J,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,OACX,CAACyJ,CAAAA,CAAAA,CAAAA,CAAAA,KAAA,GAzBgBA;;ECF2B,IAE3BC,iBAAKP,CAAAzF,CAAAA,CAAAA,SAAAA,CAAAgG,KAASpB,CAAAA,YAAAA,CAAAA,CAAT,IAAA3E,CAAAA,CAAAC,YAAA8F,CAAAA,KAAAA,CAAAA,CAWtB,SAAAA,KAAAA,CAAYC,CAAOrK,CAAAA,CAAAA,CAAAA,CAAY,OAAAC,eAAAA,KAAAmK,CAAAA,KAAAA,CAAAA,CAAA/F,CAAA7G,CAAAA,IAAAA,KACrB2C,CAAAA,MAAAA,CAAOC,MAAO,CAAA,CAChBiK,KAAOA,CAAAA,CAAAA,CAAAA,CACP9K,QAAS8K,CAAAA,CAAAA,CAAAA,CAASA,CAAQ,CAAA,IAAA,CAAOrK,CACzC,CAAA,CAAA,CASC,OAPDM,YAAAA,CAAA8J,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA7J,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,UACI,EAAA,CAAA,OAAO,OACX,CAAA,CAAA,CAAA,CAAA,CAAC0J,KAAA,GAxBgBA;;ECF+C,IAE/CE,KAAAA,UAAKnG,CAAAA,CAAAA,CAAAC,SAAAkG,CAAAA,KAAAA,CAASvK,SAAT,CAAA,CAAA,IAAAsE,CAAAC,CAAAA,YAAAA,CAAAgG,KAUtB,CAAA,CAAA,SAAAA,KAAYpE,CAAAA,CAAAA,CAAAA,CAAU,OAAAjG,qBAAAqK,KAAAjG,CAAAA,CAAAA,CAAAA,CAAA7G,UACZ2C,MAAOC,CAAAA,MAAAA,CAAO,CAChBmK,KAAAA,CAAO,CACPC,CAAAA,MAAAA,CAAQ,IACR9D,CAAAA,OAAAA,CAAS,KACT+D,OAAS,CAAA,CAAA,CAAA,CACTvE,QAAUxG,CAAAA,QAAAA,CAASwG,CAAYA,CAAAA,CAAAA,CAAAA,CAAW,IAC3C3G,CAAAA,CAAAA,QAAAA,CAAS2G,CAAYA,CAAAA,CAAAA,CAAAA,CAAW,IACvC,CAAA,CAAA,CAwGC,OAtGD5F,YAAAA,CAAAgK,MAAA,CAAA,CAAA/J,GAAA,CAAA,SAAA,CAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAQ9C,IAAKgN,CAAAA,QAAAA,CAAehN,IAAKgN,CAAAA,QAAAA,EAC7BhN,IAAKgJ,CAAAA,OAAAA,CAAUhJ,KAAKgJ,OAAQiE,CAAAA,OAAAA,EAAAA,CAAAA,CAAY,IAAIC,IAAAA,EAAOD,OAD/B,EAAA,CAAA,CAAA,CAG5B,CAEA,CAAA,CAAA,CAAApK,GAAA,CAAA,WAAA,CAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAA,CAAwB,IAAjB9C,IAAK+M,CAAAA,OAChB,CAEA,CAAA,CAAA,CAAAlK,GAAA,CAAA,WAAA,CAAAC,GAKA,CAAA,SAAAA,GACI,EAAA,CAAA,OAAA,CAAwB,CAAjB9C,GAAAA,IAAAA,CAAK+M,OAChB,CAAA,CAAA,CAEA,CAAAlK,GAAA,CAAA,OAAA,CAAA1C,KAMA,CAAA,SAAA+I,KAAM5J,CAAAA,CAAAA,CAAAA,CAAI,IAAA8D,CAAAA,CAAApD,IAON,CAAA,OANAA,IAAK6I,CAAAA,IAAAA,EAAK,UACNzF,CAAAA,CAAAA,CAAKyJ,MAAQ,CACbzJ,CAAAA,CAAAA,CAAKqG,KAAM,EAAA,UAAA,CAAA,OAAMpK,QAAAA,CAASS,KAAKsD,CAAM9D,CAAAA,CAAAA,CAAG,CACxC8D,EAAAA,CAAAA,CAAAA,CAAKD,IAAK,CAAA,OAAA,EACd,IAEOnD,IACX,CAAA,CAAA,CAEA,CAAA6C,GAAAA,CAAA,OAAA1C,CAAAA,KAAAA,CAMA,SAAAsJ,KAAAA,CAAMnK,CAAI,CAAA,CAAA,IAAAsE,CAAA5D,CAAAA,IAAAA,CACNA,IAAKgJ,CAAAA,OAAAA,CAAU,IAAIkE,IACnBlN,CAAAA,IAAAA,CAAKgN,QAAWE,CAAAA,IAAAA,CAAKC,GACrBnN,EAAAA,CAAAA,IAAAA,CAAK+M,OAAU,CAAA,CAAA,CAAA,CACf/M,IAAKmD,CAAAA,IAAAA,CAAK,OAeV,CAAA,CAAA,OAba,SAAPiK,IAAAA,EAAAA,CAUF,OATGF,IAAKC,CAAAA,GAAAA,EAAAA,CAAQvJ,CAAKoJ,CAAAA,QAAAA,EAAYpJ,CAAK4E,CAAAA,QAAAA,GAClCnJ,QAASS,CAAAA,IAAAA,CAAK8D,CAAMtE,CAAAA,CAAAA,CAAAA,CACpBsE,CAAKoJ,CAAAA,QAAAA,CAAWE,IAAKC,CAAAA,GAAAA,EAAAA,CACrBvJ,EAAKT,IAAK,CAAA,UAAA,CAAA,CACVS,CAAKiJ,CAAAA,KAAAA,EAAAA,CAAAA,CAGTjJ,CAAKkJ,CAAAA,MAAAA,CAASvD,MAAOC,CAAAA,qBAAAA,CAAsB4D,IAEpCxJ,CAAAA,CAAAA,CACX,CAEOwJ,EACX,CAEA,CAAA,CAAA,CAAAvK,IAAA,MAAA1C,CAAAA,KAAAA,CAMA,SAAA0I,IAAAA,CAAKvJ,CAAI,CAAA,CAAA,IAAA0E,CAAAhE,CAAAA,IAAAA,CAaL,OAZGA,IAAAA,CAAKqN,SACJC,EAAAA,UAAAA,EAAW,UACP/D,CAAAA,MAAAA,CAAOgE,qBAAqBvJ,CAAK8I,CAAAA,MAAAA,CAAAA,CAEjC9I,CAAK+I,CAAAA,OAAAA,CAAAA,CAAU,CAEf1N,CAAAA,QAAAA,CAASS,IAAKkE,CAAAA,CAAAA,CAAM1E,CAEpB0E,CAAAA,CAAAA,CAAAA,CAAKb,IAAK,CAAA,MAAA,EACd,CAGGnD,EAAAA,CAAAA,IACX,IAEA,CAAA,CAAA6C,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,UACI,EAAA,CAAA,OAAO,OACX,CAAA,CAAA,CAAA,CAAA,CAAC4J,KAAA,GA1HgBA;;ECDrB,IASqBY,iBAAOC,CAAAA,CAAAA,CAAA/G,UAAA8G,OAAS3F,CAAAA,IAAAA,CAAAA,CAAT,IAAAlB,CAAAC,CAAAA,YAAAA,CAAA4G,OAAA,CAAA,CAAA,SAAAA,OAAA,EAAA,CAAA,OAAAjL,oBAAAiL,CAAAA,OAAAA,CAAAA,CAAA7G,EAAA5G,KAAAC,CAAAA,IAAAA,CAAAP,UAAA,CAiBvB,OAjBuBmD,aAAA4K,OAAA,CAAA,CAAA,CAAA3K,GAAA,CAAA,WAAA,CAAA1C,MAExB,SAAAwI,SAAAA,CAAUF,GAAqB,IAAXtI,CAAAA,CAAKV,SAAAC,CAAAA,MAAAA,CAAA,CAAAoI,EAAAA,KAAAA,CAAAA,GAAArI,UAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAA,GAAG,CACxBgJ,CAAAA,CAAAA,CAAStI,MAAQH,IAAKG,CAAAA,KAAAA,CAAMA,MAAQA,EACxC,CAAA,CAAA,CAAC,CAAA0C,GAAA,CAAA,WAAA,CAAA1C,MAED,SAAAuI,SAAAA,CAAUD,GAAqB,IAAXtI,CAAAA,CAAKV,SAAAC,CAAAA,MAAAA,CAAA,CAAAoI,EAAAA,KAAAA,CAAAA,GAAArI,UAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAA,GAAG,CACxBgJ,CAAAA,CAAAA,CAAStI,MAAQH,IAAKG,CAAAA,KAAAA,CAAMA,KAAQA,CAAAA,EACxC,CAEA,CAAA,CAAA,CAAA,CAAA,CAAA0C,GAAA,CAAA,YAAA,CAAA1C,MAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,SACX,CAAA,CAAA,CAAA,CAAA,CAACwK,OAAA,GAjBgBA;;ECRrB,IASqBE,yBAAaD,GAAA/G,SAAAgH,CAAAA,aAAAA,CAAS7F,IAAT,CAAA,CAAA,IAAAlB,EAAAC,YAAA8G,CAAAA,aAAAA,CAAAA,CAAA,SAAAA,aAAAA,EAAAA,CAAA,OAAAnL,qBAAAmL,aAAA/G,CAAAA,CAAAA,CAAAA,CAAA5G,MAAAC,IAAAP,CAAAA,SAAAA,CAAA,CAwE7B,OAxE6BmD,aAAA8K,aAAA,CAAA,CAAA,CAAA7K,GAAAA,CAAA,kBAAA1C,KAE9B,CAAA,SAAAiI,eACI,EAAA,CAAA,OAAO8E,IACX,CAAC,CAAA,CAAA,CAAArK,GAAA,CAAA,mBAAA,CAAA1C,MAED,SAAA+H,iBAAAA,EAAAA,CACI,OAAO,CACHyF,aAAa,CACbC,CAAAA,UAAAA,CAAAA,CAAY,CAEpB,CAAA,CAAA,CAAA,CAAC,CAAA/K,GAAA,CAAA,YAAA,CAAA1C,KAED,CAAA,SAAAyI,WAAWH,CACP,CAAA,CAAA,GAAG7H,MAAO6H,CAAAA,CAAAA,CAASK,SAAWnI,WAAY8H,CAAAA,CAAAA,CAASK,MAC/C,CAAA,CAAA,OAAA,CAAO,EAGX,GAAG9I,IAAAA,CAAK8I,MAAkBoE,YAAAA,IAAAA,CACtB,OAAOlN,IAAKgI,CAAAA,SAAAA,CACRhI,IAAK8I,CAAAA,MAAAA,CAAOmE,WAAajN,IAAKG,CAAAA,KAAAA,CAAMA,KAAM8M,CAAAA,OAAAA,EAAAA,CAC1CjN,KAAK8I,MAAOmE,CAAAA,OAAAA,EAAAA,EAAajN,IAAKG,CAAAA,KAAAA,CAAMA,MAAM8M,OAE7C,EAAA,CAAA,GAAGjL,QAAShC,CAAAA,IAAAA,CAAK8I,QAAS,CAC3B,IAAM+E,CAAOvN,CAAAA,IAAAA,CAAKE,OAAOR,IAAKG,CAAAA,KAAAA,CAAMA,KAAM8M,CAAAA,OAAAA,EAAAA,CAAYjN,KAAK8N,aAAcb,CAAAA,OAAAA,EAAAA,EAAa,GAEtF,CAAA,CAAA,OAAOjN,KAAKgI,SACRhI,CAAAA,IAAAA,CAAK8I,MAAU+E,EAAAA,CAAAA,CACf7N,KAAK8I,MAAU+E,EAAAA,CACvB,CAEA,MAAM,IAAIzO,KAAmE,CAAA,4DAAA,CACjF,CAAC,CAAA,CAAA,CAAAyD,IAAA,WAAA1C,CAAAA,KAAAA,CAED,SAAAwI,SAAAA,CAAUF,GAAqB,IAAXtI,CAAAA,CAAKV,SAAAC,CAAAA,MAAAA,CAAA,QAAAoI,CAAArI,GAAAA,SAAAA,CAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAA,GAAG,CACxBgJ,CAAAA,CAAAA,CAAStI,KAAQ,CAAA,IAAI+M,KAAKlN,IAAKG,CAAAA,KAAAA,CAAMA,KAAM8M,CAAAA,OAAAA,EAAAA,CAAY9M,IAAS,IAAI+M,IAAAA,EAAOD,OAAYxE,EAAAA,CAAAA,CAAAA,CAASb,MAAMoF,QAC1G,CAAA,EAAA,CAAA,CAAA,CAAC,CAAAnK,GAAAA,CAAA,YAAA1C,KAED,CAAA,SAAAuI,SAAUD,CAAAA,CAAAA,CAAAA,CAAqB,IAAXtI,CAAKV,CAAAA,SAAAA,CAAAC,MAAA,CAAA,CAAA,EAAA,KAAAoI,IAAArI,SAAA,CAAA,CAAA,CAAA,CAAAA,SAAA,CAAA,CAAA,CAAA,CAAG,EACxBgJ,CAAStI,CAAAA,KAAAA,CAAQ,IAAI+M,IAAAA,CAAKlN,KAAKG,KAAMA,CAAAA,KAAAA,CAAM8M,OAAY9M,EAAAA,CAAAA,CAAAA,EAAAA,CAAS,IAAI+M,IAAOD,EAAAA,OAAAA,EAAAA,CAAYxE,CAASb,CAAAA,KAAAA,CAAMoF,WAC1G,CAAC,CAAA,CAAA,CAAAnK,GAAA,CAAA,QAAA,CAAA1C,MAED,SAAAwF,MAAAA,CAAO8C,CAAUtI,CAAAA,CAAAA,CAAAA,CACb,IAAM6I,CAAUP,CAAAA,CAAAA,CAASb,KAAMyF,CAAAA,SAAAA,CAAY5E,EAASb,KAAMoB,CAAAA,OAAAA,CAAU,IAAIkE,IAAAA,CAAKA,KAAKC,GAAQ,EAAA,CAAA,EAAA,CAAA,CAE1F,OAAO,CACH,CAACnN,IAAK+N,CAAAA,UAAAA,CAAW5N,CAAO6I,CAAAA,CAAAA,CAAAA,CAAAA,CACxBhJ,KAAK2N,WAAc,CAAA,CAAC3N,IAAKgO,CAAAA,UAAAA,CAAW7N,EAAO6I,CAAY,CAAA,CAAA,CAAA,IAAA,CAAA,CACzDtF,MAAOhD,CAAAA,IAAAA,CACb,GAAC,CAAAmC,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAED,SAAA4N,UAAWE,CAAAA,CAAAA,CAAGC,CACV,CAAA,CAAA,OAAOhO,MAAMF,IAAKmO,CAAAA,eAAAA,CAAgBF,CAAGC,CAAAA,CAAAA,CAAAA,CAAK,GAC9C,CAAC,CAAA,CAAA,CAAArL,GAAA,CAAA,YAAA,CAAA1C,MAED,SAAA6N,UAAAA,CAAWC,CAAGC,CAAAA,CAAAA,CAAAA,CACV,IAAME,CAAepO,CAAAA,IAAAA,CAAKmO,eAAgBF,CAAAA,CAAAA,CAAGC,GAE7C,OAAO5N,IAAAA,CAAK+N,GAAI/N,CAAAA,IAAAA,CAAKC,KAAsB,EAAjB6N,GAAAA,CAAAA,CAAsB,CAAIA,CAAAA,CAAAA,CAAe,IACvE,CAAC,CAAA,CAAA,CAAAvL,GAAA,CAAA,iBAAA,CAAA1C,MAED,SAAAgO,eAAAA,CAAgBF,CAAGC,CAAAA,CAAAA,CAAAA,CACf,OAAOD,CAAEhB,CAAAA,OAAAA,EAAAA,GAAciB,CAAEjB,CAAAA,OAAAA,EAAAA,CAAY,EAAI3M,IAAKJ,CAAAA,KAAAA,CAAAA,CAAO+N,CAAEhB,CAAAA,OAAAA,EAAAA,CAAYiB,EAAEjB,OAAa,EAAA,EAAA,GAAA,CACtF,CAEA,CAAA,CAAA,CAAA,CAAA,CAAApK,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,aACI,OAAO,eACX,CAAC0K,CAAAA,CAAAA,CAAAA,CAAAA,aAAA,GAxEgBA;;ECVrB,IASqBY,uBAAWC,CAAA7H,CAAAA,CAAAA,SAAAA,CAAA4H,WAASZ,CAAAA,eAAAA,CAAAA,CAAT,IAAA/G,CAAAA,CAAAC,aAAA0H,WAAA,CAAA,CAAA,SAAAA,WAAA,EAAA,CAAA,OAAA/L,oBAAA+L,CAAAA,WAAAA,CAAAA,CAAA3H,CAAA5G,CAAAA,KAAAA,CAAAC,KAAAP,SAAA,CAAA,CAmC3B,OAnC2BmD,YAAAA,CAAA0L,WAAA,CAAA,CAAA,CAAAzL,GAAAA,CAAA,SAAA1C,KAE5B,CAAA,SAAAwF,MAAO8C,CAAAA,CAAAA,CAAUtI,GACb,IAAMgN,CAAAA,CAAO1E,CAASb,CAAAA,KAAAA,CAAMoB,QAAqB7I,CAAX,CAAA,IAAI+M,IACpCY,CAAAA,CAAAA,CAAgBrF,CAASqF,CAAAA,aAAAA,EAAiB3N,CAC1C8N,CAAAA,CAAAA,CAAKjO,KAAKgI,SAAkB8F,CAAAA,CAAAA,CAANX,CACtBe,CAAAA,CAAAA,CAAKlO,KAAKgI,SAA4BmF,CAAAA,CAAAA,CAAhBW,CAEtBU,CAAAA,CAAAA,CAAO,CACT,CAACxO,IAAAA,CAAKyO,QAASR,CAAAA,CAAAA,CAAGC,CAClB,CAAA,CAAA,CAAA,CAAClO,IAAK+N,CAAAA,UAAAA,CAAWE,EAAGC,CAOxB,CAAA,CAAA,CAAA,CAAA,OAJGlO,IAAK2N,CAAAA,WAAAA,EACJa,CAAKhL,CAAAA,IAAAA,CAAK,CAACxD,IAAAA,CAAKgO,WAAWC,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAG3BM,CACX,CAAA,CAAA,CAAC,CAAA3L,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAED,SAAA4N,UAAWE,CAAAA,CAAAA,CAAGC,CACV,CAAA,CAAA,OAAO5N,KAAK+N,GAAIK,CAAAA,IAAAA,CAAAC,eAAAL,CAAAA,WAAAA,CAAAM,WAAA,YAAA5O,CAAAA,IAAAA,CAAAA,CAAAF,IAAiBmO,CAAAA,IAAAA,CAAAA,CAAGC,CAAAA,CAAAA,CAAAA,CAAK,EAC7C,CAAA,CAAA,CAAA,CAAC,CAAArL,GAAA,CAAA,UAAA,CAAA1C,KAED,CAAA,SAAAsO,SAASR,CAAGC,CAAAA,CAAAA,CAAAA,CACR,OAAO5N,IAAAA,CAAKE,MAAMR,IAAKmO,CAAAA,eAAAA,CAAgBF,CAAGC,CAAAA,CAAAA,CAAAA,CAAK,EAAK,CAAA,EAAA,CACxD,CAEA,CAAA,CAAA,CAAA,CAAA,CAAArL,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,aACI,OAAO,aACX,CAACsL,CAAAA,CAAAA,CAAAA,CAAAA,WAAA,GAnCgBA;;ECTrB,IASqBO,sBAAUC,CAAAA,CAAAA,CAAApI,SAAAmI,CAAAA,UAAAA,CAASP,aAAT,CAAA,CAAA,IAAA3H,CAAAC,CAAAA,YAAAA,CAAAiI,YAAA,SAAAA,UAAAA,EAAAA,CAAA,OAAAtM,eAAAA,MAAAsM,UAAAlI,CAAAA,CAAAA,CAAAA,CAAA5G,KAAAC,CAAAA,IAAAA,CAAAP,UAAA,CAoC1B,OApC0BmD,YAAAiM,CAAAA,UAAAA,CAAA,CAAA,CAAAhM,GAAA,CAAA,QAAA,CAAA1C,MAE3B,SAAAwF,MAAAA,CAAO8C,CAAUtI,CAAAA,CAAAA,CAAAA,CACb,IAAMgN,CAAO1E,CAAAA,CAAAA,CAASO,OAAqB7I,CAAAA,CAAAA,CAAX,IAAI+M,IAC9BY,CAAAA,CAAAA,CAAgBrF,CAASqF,CAAAA,aAAAA,EAAiB3N,EAC1C8N,CAAKjO,CAAAA,IAAAA,CAAKgI,SAAkB8F,CAAAA,CAAAA,CAANX,EACtBe,CAAKlO,CAAAA,IAAAA,CAAKgI,SAA4BmF,CAAAA,CAAAA,CAAhBW,EAEtBU,CAAO,CAAA,CACT,CAACxO,IAAAA,CAAK+O,QAAQd,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CACjB,CAAClO,IAAAA,CAAKyO,QAASR,CAAAA,CAAAA,CAAGC,CAClB,CAAA,CAAA,CAAA,CAAClO,KAAK+N,UAAWE,CAAAA,CAAAA,CAAGC,CAOxB,CAAA,CAAA,CAAA,CAAA,OAJGlO,KAAK2N,WACJa,EAAAA,CAAAA,CAAKhL,IAAK,CAAA,CAACxD,KAAKgO,UAAWC,CAAAA,CAAAA,CAAGC,CAG3BM,CAAAA,CAAAA,CAAAA,CAAAA,CACX,GAAC,CAAA3L,GAAAA,CAAA,SAAA1C,CAAAA,KAAAA,CAED,SAAA4O,OAAQd,CAAAA,CAAAA,CAAGC,CACP,CAAA,CAAA,OAAO5N,KAAKE,KAAMR,CAAAA,IAAAA,CAAKmO,eAAgBF,CAAAA,CAAAA,CAAGC,GAAK,EAAK,CAAA,EAAA,CAAK,EAC7D,CAAA,CAAA,CAAA,CAAC,CAAArL,GAAAA,CAAA,UAAA1C,CAAAA,KAAAA,CAED,SAAAsO,QAASR,CAAAA,CAAAA,CAAGC,CACR,CAAA,CAAA,OAAO5N,KAAK+N,GAAIK,CAAAA,IAAAA,CAAAC,eAAAE,CAAAA,UAAAA,CAAAD,WAAA,UAAA5O,CAAAA,IAAAA,CAAAA,CAAAF,IAAemO,CAAAA,IAAAA,CAAAA,EAAGC,CAAK,CAAA,CAAA,EAAA,CAC3C,CAEA,CAAA,CAAA,CAAA,CAAA,CAAArL,GAAA,CAAA,YAAA,CAAA1C,KAKA,CAAA,SAAA6C,aACI,OAAO,YACX,CAAC6L,CAAAA,CAAAA,CAAAA,CAAAA,UAAA,GApCgBA;;ECRrB,IAQqBG,+BAAmBvB,CAAAA,CAAAA,CAAA/G,UAAAsI,mBAASnH,CAAAA,IAAAA,CAAAA,CAAT,IAAAlB,CAAAC,CAAAA,YAAAA,CAAAoI,mBAAA,CAAA,CAAA,SAAAA,sBAAA,OAAAzM,eAAAA,MAAAyM,mBAAArI,CAAAA,CAAAA,CAAAA,CAAA5G,MAAAC,IAAAP,CAAAA,SAAAA,CAAA,CAiDnC,OAjDmCmD,YAAAA,CAAAoM,oBAAA,CAAA,CAAAnM,IAAA,iBAAA1C,CAAAA,KAAAA,CAEpC,SAAAiI,eACI,EAAA,CAAA,OAAO8E,IACX,CAAA,CAAA,CAAC,CAAArK,GAAA,CAAA,cAAA,CAAA1C,MAED,SAAAgI,YAAAA,EAAAA,CACI,OAAO,IAAI+E,IACf,GAAC,CAAArK,GAAAA,CAAA,oBAAA1C,KAED,CAAA,SAAA+H,oBACI,OAAO,CACHyF,aAAa,CACbC,CAAAA,UAAAA,CAAAA,CAAY,CAEpB,CAAA,CAAA,CAAA,CAAC,CAAA/K,GAAA,CAAA,QAAA,CAAA1C,MAED,SAAAwF,MAAAA,CAAO8C,EAAUtI,CACTA,CAAAA,CAAAA,CAAAA,GACAA,EAAQ,IAAI+M,IAAAA,CAAAA,CAGhB,IAAM+B,CAAS,CAAA,CACX,CAAC9O,CAAMsO,CAAAA,QAAAA,EAAAA,CAAAA,CACP,CAACtO,CAAM4N,CAAAA,UAAAA,EAAAA,CAAAA,CAAAA,CAOX,OAJG/N,IAAAA,CAAK2N,aACJsB,CAAOzL,CAAAA,IAAAA,CAAK,CAACrD,CAAM6N,CAAAA,UAAAA,EAAAA,CAAAA,CAAAA,CAGhBiB,CACX,CAAC,CAAA,CAAA,CAAApM,IAAA,WAAA1C,CAAAA,KAAAA,CAED,SAAAwI,SAAUF,CAAAA,CAAAA,CAAAA,CAAsB,IAAZyG,CAAMzP,CAAAA,SAAAA,CAAAC,OAAA,CAAAoI,EAAAA,KAAAA,CAAAA,GAAArI,SAAA,CAAA,CAAA,CAAA,CAAAA,UAAA,CAAG,CAAA,CAAA,CAAA,CACzBgJ,EAAStI,KAAQ,CAAA,IAAI+M,KAAKlN,IAAKG,CAAAA,KAAAA,CAAMA,MAAM8M,OAAYiC,EAAAA,CAAAA,CAAAA,EAAAA,CAAU,IAAIhC,IAAOD,EAAAA,OAAAA,EAAAA,CAAYxE,EAASb,KAAMoF,CAAAA,QAAAA,CAAAA,EAC3G,GAAC,CAAAnK,GAAAA,CAAA,WAAA1C,CAAAA,KAAAA,CAED,SAAAuI,SAAUD,CAAAA,CAAAA,CAAAA,CAAsB,IAAZyG,CAAMzP,CAAAA,SAAAA,CAAAC,OAAA,CAAAoI,EAAAA,KAAAA,CAAAA,GAAArI,UAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAA,GAAG,CACzBgJ,CAAAA,CAAAA,CAAStI,MAAQ,IAAI+M,IAAAA,CAAKlN,KAAKG,KAAMA,CAAAA,KAAAA,CAAM8M,OAAYiC,EAAAA,CAAAA,CAAAA,EAAAA,CAAU,IAAIhC,IAAOD,EAAAA,OAAAA,EAAAA,CAAYxE,EAASb,KAAMoF,CAAAA,QAAAA,CAAAA,EAC3G,IAEA,CAAA,CAAAnK,IAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UACI,EAAA,CAAA,OAAO,qBACX,CAACgM,CAAAA,CAAAA,CAAAA,CAAAA,mBAAA,GAjDgBA;;ECTrB,IASqBG,iBAAAA,UAAeC,CAAA1I,CAAAA,CAAAA,SAAAA,CAAAyI,eAASH,CAAAA,qBAAAA,CAAAA,CAAT,IAAArI,CAAAA,CAAAC,aAAAuI,eAAA,CAAA,CAAA,SAAAA,eAAA,EAAA,CAAA,OAAA5M,qBAAA4M,iBAAAxI,CAAA5G,CAAAA,KAAAA,CAAAC,KAAAP,SAAA,CAAA,CAqC/B,OArC+BmD,YAAAuM,CAAAA,eAAAA,CAAA,CAAA,CAAAtM,GAAA,CAAA,mBAAA,CAAA1C,MAEhC,SAAA+H,iBAAAA,EAAAA,CACI,OAAO,CACH0F,UAAY,CAAA,CAAA,CAAA,CACZD,aAAa,CACb0B,CAAAA,YAAAA,CAAAA,CAAc,CAEtB,CAAA,CAAA,CAAA,CAAC,CAAAxM,GAAAA,CAAA,SAAA1C,KAED,CAAA,SAAAwF,OAAO8C,CAAUtI,CAAAA,CAAAA,CAAAA,CACTA,IACAA,CAAQ,CAAA,IAAI+M,IAGhB,CAAA,CAAA,IAAMpD,CAAQ3J,CAAAA,CAAAA,CAAMsO,WACpBQ,CAAS,CAAA,CACdnF,CAAQ,CAAA,EAAA,CAAKA,CAAQ,CAAA,EAAA,CAAgB,IAAVA,CAAc,CAAA,EAAA,CAAKA,CAC9C3J,CAAAA,CAAAA,CAAM4N,UASP,EAAA,CAAA,CAAA,OANM/N,KAAKsP,QAAWxF,CAAAA,CAAAA,CAAQ,EAAK,CAAA,IAAA,CAAO,IAEvC9J,CAAAA,IAAAA,CAAK2N,aACPsB,CAAOzL,CAAAA,IAAAA,CAAKrD,CAAM6N,CAAAA,UAAAA,EAAAA,CAAAA,CAGZiB,CACL,CAAA,CAAA,CAAA,CAEA,CAAA,CAAApM,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,iBACX,CAAA,CAAA,CAAA,CAAA,CAACmM,eAAA,GArCgBA;;ECTrB,IASqBI,aAAAA,UAAWC,CAAA9I,CAAAA,CAAAA,SAAAA,CAAA6I,WAASV,CAAAA,YAAAA,CAAAA,CAAT,IAAAlI,CAAAC,CAAAA,YAAAA,CAAA2I,WAAA,CAAA,CAAA,SAAAA,cAAA,OAAAhN,eAAAA,KAAAgN,CAAAA,WAAAA,CAAAA,CAAA5I,EAAA5G,KAAAC,CAAAA,IAAAA,CAAAP,SAAA,CAAA,CAqC3B,OArC2BmD,YAAA2M,CAAAA,WAAAA,CAAA,CAAA,CAAA1M,IAAA,QAAA1C,CAAAA,KAAAA,CAE5B,SAAAwF,MAAAA,CAAO8C,EAAUtI,CACb,CAAA,CAAA,IAAMgN,CAAO1E,CAAAA,CAAAA,CAASb,MAAMoB,OAAqB7I,CAAAA,CAAAA,CAAX,IAAI+M,IAAAA,CACpCY,EAAgBrF,CAASqF,CAAAA,aAAAA,EAAiB3N,CAC1C8N,CAAAA,CAAAA,CAAKjO,KAAKgI,SAAkB8F,CAAAA,CAAAA,CAANX,CACtBe,CAAAA,CAAAA,CAAKlO,KAAKgI,SAA4BmF,CAAAA,CAAAA,CAAhBW,CAEtBU,CAAAA,CAAAA,CAAO,CACT,CAACxO,IAAAA,CAAKyP,SAASxB,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAClB,CAAClO,IAAK+O,CAAAA,OAAAA,CAAQd,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CACjB,CAAClO,IAAKyO,CAAAA,QAAAA,CAASR,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAClB,CAAClO,IAAK+N,CAAAA,UAAAA,CAAWE,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAOxB,OAJGlO,IAAK2N,CAAAA,WAAAA,EACJa,CAAKhL,CAAAA,IAAAA,CAAK,CAACxD,IAAKgO,CAAAA,UAAAA,CAAWC,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAG3BM,CACX,CAAC,CAAA,CAAA,CAAA3L,GAAA,CAAA,UAAA,CAAA1C,MAED,SAAAsP,QAAAA,CAASxB,CAAGC,CAAAA,CAAAA,CAAAA,CACR,OAAO5N,IAAKE,CAAAA,KAAAA,CAAMR,IAAKmO,CAAAA,eAAAA,CAAgBF,EAAGC,CAAK,CAAA,CAAA,EAAA,CAAK,EAAK,CAAA,EAAA,CAAK,EAClE,CAAC,CAAA,CAAA,CAAArL,GAAA,CAAA,SAAA,CAAA1C,MAED,SAAA4O,OAAAA,CAAQd,CAAGC,CAAAA,CAAAA,CAAAA,CACP,OAAO5N,IAAK+N,CAAAA,GAAAA,CAAIK,IAAAC,CAAAA,eAAAA,CAAAY,YAAAX,SAAA,CAAA,CAAA,SAAA,CAAA5O,IAAAF,CAAAA,CAAAA,IAAAA,CAAcmO,KAAAA,CAAGC,CAAAA,CAAAA,CAAAA,CAAK,CAC1C,CAAA,CAAA,CAAA,CAAA,CAEA,CAAA,CAAArL,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UACI,EAAA,CAAA,OAAO,aACX,CAACuM,CAAAA,CAAAA,CAAAA,CAAAA,WAAA,GArCgBA;;ECTrB,IASqBG,uBAAWC,GAAAjJ,SAAAgJ,CAAAA,WAAAA,CAASH,aAAT,CAAA,CAAA,IAAA5I,EAAAC,YAAA8I,CAAAA,WAAAA,CAAAA,CAAA,SAAAA,WAAAA,EAAAA,CAAA,OAAAnN,qBAAAmN,WAAA/I,CAAAA,CAAAA,CAAAA,CAAA5G,MAAAC,IAAAP,CAAAA,SAAAA,CAAA,CAsC3B,OAtC2BmD,YAAAA,CAAA8M,YAAA,CAAA,CAAA7M,GAAA,CAAA,QAAA,CAAA1C,MAE5B,SAAAwF,MAAAA,CAAO8C,CAAUtI,CAAAA,CAAAA,CAAAA,CACb,IAAMgN,CAAO1E,CAAAA,CAAAA,CAASb,KAAMoB,CAAAA,OAAAA,CAAqB7I,EAAX,IAAI+M,IAAAA,CACpCY,EAAgBrF,CAASqF,CAAAA,aAAAA,EAAiB3N,EAC1C8N,CAAKjO,CAAAA,IAAAA,CAAKgI,SAAkB8F,CAAAA,CAAAA,CAANX,EACtBe,CAAKlO,CAAAA,IAAAA,CAAKgI,UAA4BmF,CAAhBW,CAAAA,CAAAA,CAEtBU,EAAO,CACT,CAACxO,IAAK4P,CAAAA,QAAAA,CAAS3B,EAAGC,CAClB,CAAA,CAAA,CAAA,CAAClO,KAAKyP,QAASxB,CAAAA,CAAAA,CAAGC,IAClB,CAAClO,IAAAA,CAAK+O,OAAQd,CAAAA,CAAAA,CAAGC,IACjB,CAAClO,IAAAA,CAAKyO,QAASR,CAAAA,CAAAA,CAAGC,IAClB,CAAClO,IAAAA,CAAK+N,UAAWE,CAAAA,CAAAA,CAAGC,KAOxB,OAJGlO,IAAAA,CAAK2N,aACJa,CAAKhL,CAAAA,IAAAA,CAAK,CAACxD,IAAKgO,CAAAA,UAAAA,CAAWC,CAAGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAG3BM,CACX,CAAC,CAAA,CAAA,CAAA3L,IAAA,UAAA1C,CAAAA,KAAAA,CAED,SAAAyP,QAAS3B,CAAAA,CAAAA,CAAGC,CACR,CAAA,CAAA,OAAO5N,KAAKE,KAAMF,CAAAA,IAAAA,CAAKoF,IAAI,CAAG1F,CAAAA,IAAAA,CAAKmO,gBAAgBF,CAAGC,CAAAA,CAAAA,CAAAA,CAAK,EAAK,CAAA,EAAA,CAAK,GAAK,CAAI,CAAA,EAAA,CAAA,CAClF,CAAC,CAAA,CAAA,CAAArL,IAAA,UAAA1C,CAAAA,KAAAA,CAED,SAAAsP,QAAAA,CAASxB,EAAGC,CACR,CAAA,CAAA,OAAO5N,KAAK+N,GAAIK,CAAAA,IAAAA,CAAAC,gBAAAe,WAAAd,CAAAA,SAAAA,CAAAA,CAAA,UAAA5O,CAAAA,IAAAA,CAAAA,CAAAF,KAAemO,IAAAA,CAAAA,CAAAA,CAAGC,GAAK,EAC3C,CAAA,CAAA,CAAA,CAAA,CAEA,CAAA,CAAArL,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAKA,SAAA6C,UACI,EAAA,CAAA,OAAO,aACX,CAAC0M,CAAAA,CAAAA,CAAAA,CAAAA,WAAA,GAtCgBA;;;;;;;;;;;;;;ECTN,gBAAA,CAAS7E,CAAIpC,CAAAA,CAAAA,CAAAA,CACxBqC,eAAeD,CAAI,CAAA,CACfM,aAAc,CAAA,KAAA,CAAO,CAACY,KAAO,CAAA,oBAAA,CAAA,CAAA,CAC7BZ,cAAc,KAAO,CAAA,CAACY,MAAO,uBAErC,CAAA,CAAA,CAAA,EAAA;;ECJA,SAASf,MAAMH,CAAIgF,CAAAA,CAAAA,CAAAA,CACf,OAAOhF,CAAAA,CAAMA,CAAGiF,CAAAA,UAAAA,CAAajF,EAAGiF,UAAWD,CAAAA,CAAAA,CAAAA,CAAShF,EAAGgF,CAAU,CAAA,CAAA,IACrE,CAEA,SAAS/J,KAAAA,CAAK+E,CACV,CAAA,CAAA,OAAOA,CAAKA,CAAAA,CAAAA,CAAGkF,cAAc,wCAA0C1E,CAAAA,CAAAA,SAAAA,CAAY,IACvF,CAEe,oBAAA,CAASR,EAAIpC,CACxB,CAAA,CAAA,IAiBMuH,CAjBQvH,CAAAA,CAAAA,CAAStI,KAAM+E,CAAAA,MAAAA,CAAOhE,KAAI,SAAC+O,CAAAA,CAAOhP,GAC5C,IAAMiP,CAAAA,CAAUlF,MAAMvC,CAASoC,CAAAA,EAAAA,CAAKpC,CAASoC,CAAAA,EAAAA,CAAGsF,gBAAiB,CAAA,mBAAA,CAAA,CAAuB,KAAMlP,CAExFmP,CAAAA,CAAAA,CAAAA,CAAQH,EAAM/O,GAAI,EAAA,SAACf,EAAOiB,CAC5B,CAAA,CAAA,IACMiP,CAAYvK,CAAAA,KAAAA,CADHkF,KAAMkF,CAAAA,CAAAA,CAAUA,EAAQC,gBAAiB,CAAA,kBAAA,CAAA,CAAsB,KAAM/O,CAGpF,CAAA,CAAA,CAAA,OAAOqH,EAAS6H,UAAWnQ,CAAAA,CAAAA,CAAO,CAC9BoQ,QAAAA,CAAUF,CACVrI,CAAAA,SAAAA,CAAWS,EAAST,SACpBC,CAAAA,aAAAA,CAAeQ,EAAShB,IAAKQ,CAAAA,aAAAA,EAAiBQ,EAAShB,IAAK+I,CAAAA,KAAAA,CAAAA,CAEpE,CAEA,EAAA,CAAA,OAAO/H,CAASgI,CAAAA,WAAAA,CAAYL,EAChC,CAEoBlP,EAAAA,CAAAA,GAAAA,EAAI,SAAA+O,CACpB,CAAA,CAAA,OAAOA,EAAMnE,MACjB,EAAA,CAAA,EAAA,CAEAhB,cAAeD,CAAAA,CAAAA,CAAImF,CACvB,EAAA;;EChCe,cAAA,CAASnF,EAAIpC,CACxB,CAAA,CAAA,IAAMpB,EAAQoB,CAASpB,CAAAA,KAAAA,CAAMnG,GAAI,EAAA,SAAAsL,GAC7B,OAAOA,CAAAA,CAAKV,QAChB,CAEAhB,EAAAA,CAAAA,cAAAA,CAAeD,EAAIxD,CACvB,EAAA;;ECNe,eAASwD,CAAIpC,CAAAA,CAAAA,CAAAA,CACxBoC,EAAGQ,SAAY5C,CAAAA,CAAAA,CAASoD,CAAEpD,CAAAA,CAAAA,CAASkE,KACvC,EAAA;;ECAe,aAAA,CAAS9B,CAAIpC,CAAAA,CAAAA,CAAAA,CACxB,IAAMiI,CAAcjI,CAAAA,CAAAA,CAAS8H,QACxB9H,GAAAA,CAAAA,CAAST,UAAmC5B,IAAKqC,CAAAA,CAAAA,CAAStI,KAArCoG,CAAAA,CAAAA,IAAAA,CAAKkC,EAAStI,KAGpCsI,CAAAA,CAAAA,CAAAA,CAAAA,CAAS8H,QAAY9H,EAAAA,CAAAA,CAAS8H,WAAa9H,CAAStI,CAAAA,KAAAA,EACpD0K,CAAG8F,CAAAA,SAAAA,CAAUC,IAAI,MAGrB/F,CAAAA,CAAAA,CAAAA,CAAGgG,KAAMC,CAAAA,cAAAA,CAAc7Q,GAAAA,MAAMwI,CAAAA,CAAAA,CAASR,aAAgB,CAAA,CAAA,CAAK,MAC3D4C,CAAGgG,CAAAA,KAAAA,CAAME,iBAAiB9Q,CAAAA,EAAAA,CAAAA,OAAMwI,CAASR,CAAAA,aAAAA,CAAgB,CAAK,CAAA,IAAA,CAAA,CAE9DQ,EAASpB,KAAQ,CAAA,CACboB,CAAS8D,CAAAA,cAAAA,CAAe9D,EAAStI,KAAO,CAAA,CACpC6Q,MAAQ,CAAA,CAAA,CAAA,CAAA,CAAA,CAEZvI,EAAS8D,cAAemE,CAAAA,CAAAA,CAAa,CACjCM,MAAAA,CAAAA,CAAQ,KAIhBlG,cAAeD,CAAAA,CAAAA,CAAIpC,CAASpB,CAAAA,KAAAA,CAAMnG,KAAI,SAAAsL,CAAAA,CAAAA,CAAI,OAAIA,CAAAA,CAAKV,QAAQ,CAC/D,EAAA,EAAA;;ECxBe,iBAAA,CAASjB,EAAIpC,CACxB,CAAA,CAAA,IAAMrB,GAAgC,CAApBqB,GAAAA,CAAAA,CAASuI,OAAkB,QACrB,CAAA,CAAA,CAAA,GAApBvI,EAASuI,MAAmB,CAAA,QAAA,CAAW,KAG3CnG,CAAG8F,CAAAA,SAAAA,CAAUC,IAAIxJ,CAEjB0D,CAAAA,CAAAA,cAAAA,CAAeD,CAAI,CAAA,CACfM,cAAc,KAAO,CAAA,CACjBA,cAAc,KAAO1C,CAAAA,CAAAA,CAAStI,MAAO,CAAC4L,KAAAA,CAAO,QAC7CZ,aAAc,CAAA,KAAA,CAAO1C,EAAStI,KAAO,CAAA,CAAC4L,MAAO,QAC9C,CAAA,CAAA,CAAA,CAAA,CAACA,MAAO,4BAEnB,CAAA,CAAA,CAAA,EAAA;;ECfe,mBAASlB,CAAAA,CAAAA,CAAIpC,CACxBA,CAAAA,CAAAA,CAAAA,CAASwI,aAAgBjF,EAAAA,CAAAA,KAAAA,CAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CACjDrH,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,CAAGiF,CAAAA,UAAAA,CAAW,CAE9CrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,IAAKkG,CAAAA,WAAAA,EACblF,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,CAAGiF,CAAAA,UAAAA,CAAW,CAGlDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,CAASyI,CAAAA,WAAAA,CAAY,MAAQlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,CACjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAASyI,WAAY,CAAA,OAAA,CAAA,CAASlF,KAAMnB,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAClDrH,CAASyI,CAAAA,WAAAA,CAAY,SAAWlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,CAEjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,IAAKkG,CAAAA,WAAAA,EACblF,CAASyI,CAAAA,WAAAA,CAAY,SAAWlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,CAGhE,CAAA,CAAA,EAAA;;ECjBe,oBAASjF,CAAAA,CAAAA,CAAIpC,GACxBA,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,WAAW,CAE9CrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,KAAKkG,WACblF,EAAAA,CAAAA,CAASwI,gBAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAGlDrH,EAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,EAASyI,WAAY,CAAA,OAAA,CAAA,CAASlF,MAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IAClDrH,CAASyI,CAAAA,WAAAA,CAAY,WAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAEjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,KAAKkG,WACblF,EAAAA,CAAAA,CAASyI,YAAY,SAAWlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,CAGhE,CAAA,CAAA,EAAA;;ECfe,sBAAA,CAASjF,CAAIpC,CAAAA,CAAAA,CAAAA,CACrBA,CAAShB,CAAAA,IAAAA,CAAKkG,WACblF,EAAAA,CAAAA,CAASwI,aAAgBjF,EAAAA,CAAAA,KAAAA,CAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAGlDrH,EAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,CAASyI,CAAAA,WAAAA,CAAY,SAAWlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IAEjDrH,CAAShB,CAAAA,IAAAA,CAAKkG,WACblF,EAAAA,CAAAA,CAASyI,WAAY,CAAA,SAAA,CAAA,CAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAGhE,CAAA,CAAA,EAAA;;ECZe,4BAASjF,CAAAA,CAAAA,CAAIpC,GACxBA,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,WAAW,CAE9CrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,KAAKkG,WACblF,EAAAA,CAAAA,CAASwI,gBAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAGlDrH,EAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,EAASyI,WAAY,CAAA,OAAA,CAAA,CAASlF,MAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IAClDrH,CAASyI,CAAAA,WAAAA,CAAY,WAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAEjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,KAAKkG,WACblF,EAAAA,CAAAA,CAASyI,YAAY,SAAWlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,CAIhE,CAAA,CAAA,EAAA;;ECde,wBAAA,CAASjF,CAAIpC,CAAAA,CAAAA,CAAAA,CAGxB,GAFAuG,mBAAoBnE,CAAAA,CAAAA,CAAIpC,CAErBA,CAAAA,CAAAA,CAAAA,CAAShB,KAAK4H,YAAgB5G,EAAAA,CAAAA,CAAShB,IAAK6H,CAAAA,QAAAA,CAAU,CACrD,IAAM3C,CAAAA,CAAQlE,CAASyI,CAAAA,WAAAA,CAAYzI,EAAShB,IAAK6H,CAAAA,QAAAA,CAAAA,CAC3C/D,CAASV,CAAAA,CAAAA,CAAGiF,WAAWjF,CAAGiF,CAAAA,UAAAA,CAAWpQ,MAAS,CAAA,CAAA,CAAA,CAEpDiN,EAAMX,KAAMT,CAAAA,CAAAA,CAAAA,CAAQoF,SAAUC,CAAAA,GAAAA,CAAI,uBACtC,CACJ;;ECXe,oBAAA,CAAS/F,CAAIpC,CAAAA,CAAAA,CAAAA,CACxBA,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CACjDrH,EAASwI,aAAgBjF,EAAAA,CAAAA,KAAAA,CAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,WAAW,CACjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAASwI,aAAgBjF,EAAAA,CAAAA,KAAAA,CAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAE9CrH,EAAShB,IAAKkG,CAAAA,WAAAA,EACblF,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAGlDrH,EAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,CAASyI,CAAAA,WAAAA,CAAY,OAASlF,CAAAA,CAAAA,KAAAA,CAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IAClDrH,CAASyI,CAAAA,WAAAA,CAAY,MAAQlF,CAAAA,CAAAA,KAAAA,CAAMnB,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CACjDrH,CAASyI,CAAAA,WAAAA,CAAY,SAASlF,KAAMnB,CAAAA,CAAAA,CAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAClDrH,EAASyI,WAAY,CAAA,SAAA,CAAA,CAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAEjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,IAAKkG,CAAAA,WAAAA,EACblF,EAASyI,WAAY,CAAA,SAAA,CAAA,CAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAGhE,CAAA,CAAA,EAAA;;ECnBe,oBAAA,CAASjF,EAAIpC,CACxBA,CAAAA,CAAAA,CAAAA,CAASwI,gBAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CACjDrH,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,WAAW,CACjDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAASwI,gBAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,CAAGiF,CAAAA,UAAAA,CAAW,IACjDrH,CAASwI,CAAAA,aAAAA,EAAAA,CAAgBjF,MAAMnB,CAAIA,CAAAA,CAAAA,CAAGiF,WAAW,CAE9CrH,CAAAA,CAAAA,CAAAA,CAAAA,CAAShB,KAAKkG,WACblF,EAAAA,CAAAA,CAASwI,gBAAgBjF,KAAMnB,CAAAA,CAAAA,CAAIA,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAGlDrH,EAAShB,IAAKmG,CAAAA,UAAAA,GACbnF,CAASyI,CAAAA,WAAAA,CAAY,SAASlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,CAClDrH,CAAAA,CAAAA,CAAAA,CAAAA,CAASyI,YAAY,OAASlF,CAAAA,CAAAA,KAAAA,CAAMnB,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAClDrH,EAASyI,WAAY,CAAA,MAAA,CAAA,CAAQlF,MAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IACjDrH,CAASyI,CAAAA,WAAAA,CAAY,OAASlF,CAAAA,CAAAA,KAAAA,CAAMnB,EAAGiF,UAAW,CAAA,CAAA,CAAA,CAAA,CAClDrH,EAASyI,WAAY,CAAA,SAAA,CAAA,CAAWlF,MAAMnB,CAAGiF,CAAAA,UAAAA,CAAW,IAEjDrH,CAAShB,CAAAA,IAAAA,CAAKkG,aACblF,CAASyI,CAAAA,WAAAA,CAAY,WAAWlF,KAAMnB,CAAAA,CAAAA,CAAGiF,WAAW,EAGhE,CAAA,CAAA,EAAA;;;;;;;;;;;;;ACfuB,iBAER,CACX5D,OAAAA,CAAAA,OAAAA,CACAiF,SAAAA,CAAAA,WAAAA,CACA1E,KAAAA,CAAAA,KAAAA,CACAC,KAAAA,CAAAA,KAAAA,CACAL,IAAAA,CAAAA,IAAAA,CACAD,QAAAA,CAAAA,QAAAA,CACAgF,KAAAA,CAAAA,KAAAA,CAAAA;;ACboB,sBAOT,CACX3J,IAAM+F,CAAAA,OAAAA,CACNlG,KAAO+J,CAAAA,QAAAA,CACP9J,QAAU+J,CAAAA,OAAAA,CAAAA;;MCEOH,mBAAShF,CAAAzF,CAAAA,CAAAA,SAAAA,CAAAyK,UAAS7F,YAAT,CAAA,CAAA,IAAA3E,CAAAC,CAAAA,YAAAA,CAAAuK,WA+B1B,SAAAA,SAAAA,CAAYtG,EAAI1K,CAAOmC,CAAAA,CAAAA,CAAAA,CAAY,IAAAc,CAAAb,CAAAA,eAAAA,KAAA4O,CAAAA,SAAAA,CAAAA,CAC3BlK,SAAS4D,CAAII,CAAAA,WAAAA,CAAAA,EACb/L,MAAMuM,eAAgB/D,CAAAA,OAAAA,CAAAA,CAGvB7F,SAAS1B,CAAWmC,CAAAA,EAAAA,CAAAA,CAAAA,GACnBA,CAAanC,CAAAA,CAAAA,CACbA,OAAQ2H,CAGZ,CAAA,CAAA,IAAML,EAAOnF,CAAWmF,CAAAA,IAAAA,EAAQ8J,cAAc9J,IAe/B,CAAA,OAAA,OAbRnF,CAAWmF,CAAAA,IAAAA,CAAAA,CAElBrE,EAAAuD,CAAA7G,CAAAA,IAAAA,KAAM2C,CAAAA,MAAAA,CAAOC,OAAO,CAChBoL,aAAAA,CAAe3N,CACfmH,CAAAA,KAAAA,CAAOiK,cAAcjK,KACrBC,CAAAA,QAAAA,CAAUgK,cAAchK,QACxBK,CAAAA,KAAAA,CAAOgF,MAAMlI,IAAKpC,CAAAA,CAAAA,CAAWkG,QAAY,EAAA,GAAA,CAAA,CAAA,CAC1ClG,KAEMmF,IACLrE,GAAAA,CAAAA,CAAKqE,KAAOA,CAGhBrE,CAAAA,CAAAA,CAAAA,CAAK4I,MAAMnB,CAAIzH,CAAAA,CAAAA,CACnB,CAyVC,OAvVDR,aAAAuO,SAAA,CAAA,CAAA,CAAAtO,GAAA,CAAA,MAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAAA,CAAKwR,KAChB,CAACtO,CAAAA,GAAAA,CAED,SAAAA,GAAS/C,CAAAA,CAAAA,CAAAA,CACD8G,SAAS9G,CAAO,CAAA,CAAC0H,IAAM,CAAA,QAAA,CAAU,cACjC3I,KAAMuM,CAAAA,eAAAA,CAAgBhE,MAG1BzH,IAAKwR,CAAAA,KAAAA,CAAAA,CAASC,MAAMtR,CAAUA,CAAAA,EAAAA,CAAAA,EAAOuE,IAAKjC,CAAAA,MAAAA,CAAOC,OAAO1C,IAAKkE,CAAAA,mBAAAA,EAAAA,CAAuB,CAChF4J,aAAe9N,CAAAA,IAAAA,CAAKyH,KAAOzH,IAAKyH,CAAAA,IAAAA,CAAKqG,aAAgBhG,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAGzD9H,KAAKwR,KAAMrI,CAAAA,WAAAA,CAAYnJ,MAEpBA,IAAKG,CAAAA,KAAAA,CACJH,KAAKwR,KAAMrR,CAAAA,KAAAA,CAAQH,IAAKyH,CAAAA,IAAAA,CAAKY,gBAAgBrI,IAAMA,CAAAA,IAAAA,CAAKG,KAAMA,CAAAA,KAAAA,CAAAA,CAEzDH,KAAKG,KACVH,GAAAA,IAAAA,CAAKG,KAAQH,CAAAA,IAAAA,CAAK8N,eAGtB9N,IAAK6K,CAAAA,EAAAA,EAAM7K,KAAK8L,MACpB,GAAA,CAAA,CAAA,CAEA,CAAAjJ,GAAA,CAAA,QAAA,CAAAC,GAKA,CAAA,SAAAA,MACI,OAAOvD,UAAAA,CAAWS,KAAKsI,OAAWtI,CAAAA,CAAAA,IAAAA,CAAKsI,QAAQtI,IAAQA,CAAAA,CAAAA,IAAAA,CAAKsI,OAChE,CAAA,CAACpF,IAED,SAAAA,GAAAA,CAAW/C,GACPH,IAAKsI,CAAAA,OAAAA,CAAUnI,EACnB,CAEA,CAAA,CAAA,CAAA0C,GAAA,CAAA,OAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAAA,CAAK0R,MAChB,CAACxO,CAAAA,GAAAA,CAED,SAAAA,GAAAA,CAAU0E,GACFX,QAASW,CAAAA,CAAAA,CAAOgF,QAChB1N,KAAMuM,CAAAA,eAAAA,CAAgB7D,OAG1B5H,IAAK0R,CAAAA,MAAAA,CAAS9J,EAClB,CAAA,CAAA,CAEA,CAAA/E,GAAA,CAAA,OAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAO9C,IAAKyH,CAAAA,IAAAA,CAAOzH,IAAKyH,CAAAA,IAAAA,CAAKtH,MAAQ,IACzC,CAAA,CAAC+C,IAED,SAAAA,GAAAA,CAAU/C,GACN,GAAIH,CAAAA,IAAAA,CAAKyH,IACL,CAAA,MAAM,IAAIrI,KAAM,CAAA,4CAAA,CAAA,CAGjBe,CAAiBqG,YAAAA,SAAAA,CAChBxG,KAAKyH,IAAKtH,CAAAA,KAAAA,CAAQA,CAEdH,CAAAA,IAAAA,CAAKG,MACTH,IAAKyH,CAAAA,IAAAA,CAAKtH,MAAQH,IAAKyH,CAAAA,IAAAA,CAAKtH,MAAM6G,KAAM7G,CAAAA,CAAAA,CAAAA,CAGxCH,IAAKyH,CAAAA,IAAAA,CAAKtH,MAAQH,IAAKyH,CAAAA,IAAAA,CAAKY,gBAAgBrI,IAAMG,CAAAA,CAAAA,CAAAA,CAGtDH,KAAK6K,EAAM7K,EAAAA,IAAAA,CAAK8L,MACpB,GAAA,CAAA,CAAA,CAEA,CAAAjJ,GAAA,CAAA,eAAA,CAAAC,IAKA,SAAAA,GAAAA,EAAAA,CACI,OAAGvD,UAAWS,CAAAA,IAAAA,CAAKuI,cAAoBvI,CAAAA,EAAAA,CAAAA,IAAAA,CAAKuI,eAAe5G,IAChD3B,CAAAA,IAAAA,CAAKuI,iBAGZ5H,WAAYX,CAAAA,IAAAA,CAAKuI,iBAAoB3H,MAAOZ,CAAAA,IAAAA,CAAKuI,cAI9CvI,CAAAA,CAAAA,IAAAA,CAAKyH,KAAOzH,IAAKyH,CAAAA,IAAAA,CAAKU,oBAAiBL,CAHnC9H,CAAAA,IAAAA,CAAKuI,cAIpB,CAACrF,CAAAA,GAAAA,CAED,SAAAA,GAAAA,CAAkB/C,GACdH,IAAKuI,CAAAA,cAAAA,CAAiBpI,EAC1B,CAEA,CAAA,CAAA,CAAA0C,IAAA,OAAA1C,CAAAA,KAAAA,CAMA,SAAA6L,KAAAA,CAAMnB,GAKF,OAJA6D,IAAAA,CAAAC,gBAAAwC,SAAAvC,CAAAA,SAAAA,CAAAA,CAAA,QAAA5O,IAAAF,CAAAA,CAAAA,IAAAA,CAAAE,IAAY6K,CAAAA,CAAAA,CAAAA,CAEZ7K,KAAKyH,IAAK4B,CAAAA,OAAAA,CAAQrJ,IAEXA,CAAAA,CAAAA,IACX,GAEA,CAAA6C,GAAAA,CAAA,QAAA1C,CAAAA,KAAAA,CAKA,SAAA2L,MAiBI,EAAA,CAAA,OAfA4C,KAAAC,eAAAwC,CAAAA,SAAAA,CAAAvC,0BAAA9O,IAAAE,CAAAA,IAAAA,CAAAA,CAKGA,KAAKsH,KAAM8J,CAAAA,KAAAA,CAAMpR,KAAKyH,IAAK9F,CAAAA,IAAAA,CAAAA,EAC1B3B,KAAKsH,KAAM8J,CAAAA,KAAAA,CAAMpR,IAAKyH,CAAAA,IAAAA,CAAK9F,MAAM3B,IAAK6K,CAAAA,EAAAA,CAAI7K,MAM9CA,IAAKyH,CAAAA,IAAAA,CAAK2B,SAASpJ,IAGZA,CAAAA,CAAAA,IAAAA,CAAK6K,EAChB,CAAA,CAAA,CAEA,CAAAhI,GAAA,CAAA,OAAA,CAAA1C,KAMA,CAAA,SAAAsJ,MAAMnK,CAAI,CAAA,CAAA,IAAAsE,CAAA5D,CAAAA,IAAAA,CAcN,OAbIA,IAAK4H,CAAAA,KAAAA,CAAMoB,UACXhJ,IAAKG,CAAAA,KAAAA,CAAQH,KAAK8N,aAGtBnN,CAAAA,CAAAA,WAAAA,CAAYX,IAAKyH,CAAAA,IAAAA,CAAKqB,UAAY9I,IAAKyH,CAAAA,IAAAA,CAAKqB,OAAS9I,IAAK8I,CAAAA,MAAAA,CAAAA,CAC1DnI,YAAYX,IAAKyH,CAAAA,IAAAA,CAAKqG,aAAmB9N,CAAAA,GAAAA,IAAAA,CAAKyH,KAAKqG,aAAgB9N,CAAAA,IAAAA,CAAK8N,eAExE9N,IAAK4H,CAAAA,KAAAA,CAAM6B,OAAM,UACb7F,CAAAA,CAAAA,CAAK6D,IAAKe,CAAAA,QAAAA,CAAS5E,EAAMtE,CAC7B,EAAA,CAAA,EAAA,CAEAU,IAAKyH,CAAAA,IAAAA,CAAKuB,QAAQhJ,IAEXA,CAAAA,CAAAA,IAAAA,CAAKmD,IAAK,CAAA,OAAA,CACrB,GAEA,CAAAN,GAAAA,CAAA,OAAA1C,KAMA,CAAA,SAAA0I,KAAKvJ,CAID,CAAA,CAAA,OAHAU,IAAK4H,CAAAA,KAAAA,CAAMiB,KAAKvJ,CAChBU,CAAAA,CAAAA,IAAAA,CAAKyH,KAAKwB,OAAQjJ,CAAAA,IAAAA,CAAAA,CAEXA,KAAKmD,IAAK,CAAA,MAAA,CACrB,CAEA,CAAA,CAAA,CAAAN,IAAA,OAAA1C,CAAAA,KAAAA,CAMA,SAAA+I,KAAM5J,CAAAA,CAAAA,CAAAA,CAAI,IAAA0E,CAAAhE,CAAAA,IAAAA,CAKN,OAJAA,IAAAA,CAAKG,MAAQH,IAAK8N,CAAAA,aAAAA,CAClB9N,KAAK4H,KAAMsB,CAAAA,KAAAA,EAAM,WAAA,OAAMlF,CAAAA,CAAKwE,QAASxE,CAAAA,CAAAA,CAAM1E,EAAG,CAC9CU,EAAAA,CAAAA,IAAAA,CAAKyH,KAAKyB,KAAMlJ,CAAAA,IAAAA,CAAAA,CAETA,KAAKmD,IAAK,CAAA,OAAA,CACrB,CAEA,CAAA,CAAA,CAAAN,IAAA,WAAA1C,CAAAA,KAAAA,CAQA,SAAAwI,SAAUxI,CAAAA,CAAAA,CAAAA,CAGN,OAFAH,IAAKyH,CAAAA,IAAAA,CAAKkB,SAAU3I,CAAAA,IAAAA,CAAMG,GAEnBH,IACX,CAAA,CAAA,CAEA,CAAA6C,GAAA,CAAA,WAAA,CAAA1C,MAQA,SAAAuI,SAAAA,CAAUvI,CAGN,CAAA,CAAA,OAFAH,KAAKyH,IAAKiB,CAAAA,SAAAA,CAAU1I,IAAMG,CAAAA,CAAAA,CAAAA,CAEnBH,IACX,CAEA,CAAA,CAAA,CAAA6C,GAAA,CAAA,eAAA,CAAA1C,MAOA,SAAA8Q,aAAAA,CAAc3O,GACV,OAAO4J,SAAAA,CAAQxH,KAAKjC,MAAOC,CAAAA,MAAAA,CAAO,CAC9B4E,KAAAA,CAAOtH,KAAKsH,KACZC,CAAAA,QAAAA,CAAUvH,KAAKuH,QAChBjF,CAAAA,CAAAA,CAAAA,CAAAA,CACP,GAEA,CAAAO,GAAAA,CAAA,YAAA1C,CAAAA,KAAAA,CAQA,SAAAmQ,UAAWnQ,CAAAA,CAAAA,CAAOmC,GACd,OAAO+J,MAAAA,CAAK3H,KAAKvE,CAAOsC,CAAAA,MAAAA,CAAOC,MAAO,CAAA,CAClC4E,MAAOtH,IAAKsH,CAAAA,KAAAA,CACZC,QAAUvH,CAAAA,IAAAA,CAAKuH,UAChBjF,CACP,CAAA,CAAA,CAAA,CAAA,CAEA,CAAAO,GAAAA,CAAA,cAAA1C,KAQA,CAAA,SAAA+Q,YAAY/Q,CAAOmC,CAAAA,CAAAA,CAAAA,CACf,OAAOoK,OAAMhI,CAAAA,IAAAA,CAAKvE,CAAOsC,CAAAA,MAAAA,CAAOC,OAAO,CACnC4E,KAAAA,CAAOtH,KAAKsH,KACZC,CAAAA,QAAAA,CAAUvH,KAAKuH,QAChBjF,CAAAA,CAAAA,CAAAA,CAAAA,CACP,CAEA,CAAA,CAAA,CAAAO,IAAA,aAAA1C,CAAAA,KAAAA,CAQA,SAAAsQ,WAAYpJ,CAAAA,CAAAA,CAAO/E,GACf,OAAOmK,OAAAA,CAAM/H,IAAK2C,CAAAA,CAAAA,CAAO5E,OAAOC,MAAO,CAAA,CACnC4E,KAAOtH,CAAAA,IAAAA,CAAKsH,MACZC,QAAUvH,CAAAA,IAAAA,CAAKuH,QAChBjF,CAAAA,CAAAA,CAAAA,CAAAA,CACP,IAEA,CAAA,CAAAO,IAAA,UAAAC,CAAAA,GAAAA,CAKA,SAAAA,GACI,EAAA,CAAA,OAAOyO,aACX,CAAA,CAAA,CAEA,CAAA1O,GAAA,CAAA,YAAA,CAAA1C,MAKA,SAAA6C,UAAAA,EAAAA,CACI,OAAO,WACX,CAAA,CAAA,CAEA,CAAAH,GAAAA,CAAA,iBAAA1C,KAOA,CAAA,SAAAwR,eAAsBxR,CACd8G,CAAAA,CAAAA,QAAAA,CAAS9G,EAAO0H,IAChB3I,CAAAA,EAAAA,KAAAA,CAAMuM,eAAgBhE,CAAAA,IAAAA,CAAAA,CAG1B8J,cAAc9J,IAAOtH,CAAAA,EACzB,GAEA,CAAA0C,GAAAA,CAAA,kBAAA1C,KAMA,CAAA,SAAAyR,eAAuBzR,CAAAA,CAAAA,CAAAA,CACf8G,SAAS9G,CAAO,CAAA,QAAA,CAAA,EAChBjB,MAAMuM,eAAgBnE,CAAAA,KAAAA,CAAAA,CAG1BiK,cAAcjK,KAAQnH,CAAAA,EAC1B,CAEA,CAAA,CAAA,CAAA0C,IAAA,oBAAA1C,CAAAA,KAAAA,CAMA,SAAA0R,kBAA0B1R,CAAAA,CAAAA,CAAAA,CAClB8G,SAAS9G,CAAO,CAAA,QAAA,CAAA,EAChBjB,KAAMuM,CAAAA,eAAAA,CAAgBlE,UAG1BgK,aAAchK,CAAAA,QAAAA,CAAWpH,EAC7B,CAACgR,CAAAA,CAAAA,CAAAA,CAAAA,SAAA;;;;;;;;"}